<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="24" zv="Cache for Windows (x86-32) 2010.2.8 (Build 1104U)" ts="2015-01-14 20:08:24">
<Class name="User.DHCNURMoudelLink">
<ClassType>persistent</ClassType>
<ProcedureBlock>1</ProcedureBlock>
<SqlTableName>DHC_NURMoudelLink</SqlTableName>
<Super>%Persistent</Super>
<TimeChanged>63566,72465.529007</TimeChanged>
<TimeCreated>62890,60634.235254</TimeCreated>

<Property name="Name">
<Type>%String</Type>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="Code">
<Type>%String</Type>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="PrintCode">
<Type>%String</Type>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="typ">
<Type>%String</Type>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="UserREC">
<Type>%String</Type>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="RECDate">
<Type>%Library.Date</Type>
</Property>

<Property name="RECTime">
<Type>%Library.Time</Type>
</Property>

<Property name="XuFlag">
<Type>%String</Type>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="MakePic">
<Type>%String</Type>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="Upload">
<Type>%String</Type>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Index name="CodeIndex">
<Properties>Code</Properties>
</Index>

<Index name="PrintCodeIndex">
<Properties>Code,PrintCode</Properties>
</Index>

<Index name="PrintCode">
<Properties>PrintCode</Properties>
</Index>

<UDLText name="T">
<Content><![CDATA[
// d ##class(User.DHCNURMoudelLink).%BuildIndices()

]]></Content>
</UDLText>

<Method name="getlocward">
<ClassMethod>1</ClassMethod>
<FormalSpec>loc</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
  s ward=$O(^PAWARD(0,"WARD_LocationDR",loc,"")) 
  q ward
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
//d ##class(User.DHCNURMoudelLink).GetDepModel("48")

]]></Content>
</UDLText>

<Method name="GetDepModel">
<ClassMethod>1</ClassMethod>
<FormalSpec>adm:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   s LocId=$p(^PAADM(adm),"^",4)
     s curWardId=$p($g(^PAADM(adm)),"^",70) 
     s Ward=..getlocward(LocId)
     s totelstr=""
     s max=0
     s rw="" f  s rw=$o(^DHCNurDepModelSet(rw)) q:rw=""  d
     .s DepModelStr=$G(^DHCNurDepModelSet(rw))
     .s totelstr=totelstr_"^"_DepModelStr
     b
   
     f ii=1:1:$L(totelstr,"^") d
	 .s DepModel=$P(totelstr,"^",ii)
	 .//b ;99
	 .q:DepModel=""
	 .s ModelKey=$P(DepModel,"|",1)
	 .s ModelName=$P(DepModel,"|",2)
	 .s ModelSort=$P(DepModel,"|",3)
	 .s PrintCode=""
	 .i ModelKey'="" s PrintCode=..getPrintCode(ModelKey)
	 .s flag=..GetModelDataStatus(adm,ModelKey)
	 .//b ;55
	 .i flag'=0 s DepModel(ModelKey)=ModelKey_"|"_PrintCode
	 .//s DepModel(ModelKey)=ModelKey_"|"_PrintCode
	b ;44
	s ret=""
	s sort="" f  s sort=$O(DepModel(sort)) q:sort=""  d
	.s ret=ret_DepModel(sort)_"^"
	b ;66
 	q ret
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
//d ##class(User.DHCNURMoudelLink).GetPerModel("5019351")

]]></Content>
</UDLText>

<Method name="GetPerModel">
<ClassMethod>1</ClassMethod>
<FormalSpec>adm:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    
     s ret="" 
     s ^ookk=adm
     s id="" f  s id=$O(^User.DHCNURMoudelLinkD(id)) q:id=""  d
 	 .s a=##class(User.DHCNURMoudelLink).%OpenId(id)
 	 .s PrintCode=a.PrintCode
 	 .s Code=a.Code
 	 .s typ=a.typ
 	 .q:Code="DHCNURHYD_NURSHEETS"
 	 .q:Code="DHCNURHYD_ASSESSMENT"
 	 .s flag=..GetModelDataStatus(adm,Code)
 	 .//b ;33
	 .i flag'=0 d
	 ..i ret="" s ret=Code_"^"_PrintCode_"^"_typ
	 ..e  s ret=ret_"|"_Code_"^"_PrintCode_"^"_typ
	 s Consultret=..GetAdmConsult(adm)
	 s ssret=..GetAdmss(adm)
	 i ssret'="" s ret=ret_"|"_ssret
	 s ssretpgd=..GetAdmpgd(adm)
	 i ssretpgd'="" s ret=ret_"|"_ssretpgd
	 i Consultret'="" s ret=ret_"|"_Consultret

 	q ret
]]></Implementation>
</Method>

<Method name="GetAdmConsult">
<ClassMethod>1</ClassMethod>
<FormalSpec>adm</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
  	//w ##class(web.DHCConsult).GetConsult("340810^2011-05-23^2011-05-25^true","addconsult")
            q:adm="" ""
            s ret=""
			s id="" f  s id=$O(^User.DHCConsultationI("Adm"," "_adm,id)) q:id=""  d
			.s a=^User.DHCConsultationD(id)
			.s status=$listget(a,16)
			.q:status="C"
			.i ret="" s ret=id_"^"_"DHCConsultPrn^会诊"
			.e  s ret=ret_"|"_id_"^"_"DHCConsultPrn^会诊"
			q ret
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
//入院评估

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// w ##class(User.DHCNURMoudelLink).GetAdmss("5043874")

]]></Content>
</UDLText>

<Method name="GetAdmpgd">
<ClassMethod>1</ClassMethod>
<FormalSpec>adm</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
  	//w ##class(web.DHCConsult).GetConsult("340810^2011-05-23^2011-05-25^true","addconsult")
            q:adm="" ""
            s ret=""
			s id="" f  s id=$O(^Nur.DHCMoudDataI("EmrCode"," DHCNURHYD_ASSESSMENT"," "_adm,id)) q:id=""  d
			.//s a=^Nur.DHCMoudDataD(id)
			.s a=##class(Nur.DHCMoudData).%OpenId(id)
			.s Cancelname=a.Cancelname
			.//W !,Cancelname
			.q:Cancelname'=""
			.i ret="" s ret=id_"^"_"DHCNURHYD_Assessment_Prn^多次评估单"
			.e  s ret=ret_"|"_id_"^"_"DHCNURHYD_Assessment_Prn^多次评估单"
			q ret
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
//手术

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// w ##class(User.DHCNURMoudelLink).GetAdmss("7640940")

]]></Content>
</UDLText>

<Method name="GetAdmss">
<ClassMethod>1</ClassMethod>
<FormalSpec>adm</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
  	//w ##class(web.DHCConsult).GetConsult("340810^2011-05-23^2011-05-25^true","addconsult")
            q:adm="" ""
            s ret=""
			s id="" f  s id=$O(^Nur.DHCMoudDataI("EmrCode"," DHCNURHYD_NURSHEETS"," "_adm,id)) q:id=""  d
			.//s a=^Nur.DHCMoudDataD(id)
			.set a=##class(Nur.DHCMoudData).%OpenId(id)
	        .s anaesid=a.AnaesId
	        .s status=..GetOpaStatus(anaesid)
	        .q:status="D"
	        .b ;
			.i ret="" s ret=id_"^"_"DHCNURHYD_NurSheets_Prn^多次评估单"
			.e  s ret=ret_"|"_id_"^"_"DHCNURHYD_NurSheets_Prn^多次评估单"
			q ret
]]></Implementation>
</Method>

<Method name="GetOpaStatus">
<ClassMethod>1</ClassMethod>
<FormalSpec>opaId:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:opaId="" "opaId is null"
	s opaStatus=$P(^DHCANOPArrange(opaId),"^",27)
	q opaStatus
]]></Implementation>
</Method>

<Method name="GetModelDataStatus">
<ClassMethod>1</ClassMethod>
<FormalSpec>EpisodeID,EmrCode</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//w ##class(web.DHCMGNurData).GetModelDataStatus(11062752,"DHCNURANHUISPLIST")
	s ret=0
	s id=""
	if (EpisodeID'="")&&(EmrCode'="")
	{
	 s code=$ZConvert(EmrCode,"U")
	 i code="DHCNURANHUISPLIST" s code="DHCNURANHUI21"
	 //s ^fuckwxy(EpisodeID,code)=code
	 //s id=""  s id=$O(^Nur.DHCMoudDataI("EmrCode"," "_code," "_EpisodeID,id))
	 //s id=""
	 s DHCMoudid=##class(Nur.DHCMoudData).GetId(code,EpisodeID)
	 //s DHCMoudid=$O(^Nur.DHCMoudDataI("EmrCode"," "_code," "_EpisodeID,DHCMoudid))
	 //b ;4422
	 i DHCMoudid'="" s id=DHCMoudid
	 //s DHCMoudid=""  f  s DHCMoudid=$O(^Nur.DHCMoudDataI("EmrCode"," "_code," "_EpisodeID,DHCMoudid)) q:DHCMoudid=""  d
	 //.i DHCMoudid'="" d
	 //..s b=##class(Nur.DHCMoudData).%OpenId(DHCMoudid)
	 //..b ;77
	 //..i (b.RecCancelUser="") s id=DHCMoudid
	 
	 s par=""  s par=$O(^Nur.DHCNurseRecParentI("Episode"," "_EpisodeID,par))
	 //b ;22
	 if par'=""
	 {
	 s rw="" f  s rw=$o(^Nur.DHCNurseRecSubD(par,rw)) q:rw=""  d
	 .s tmp("Id")=par_"||"_rw
	 .s a=##class(Nur.DHCNurseRecSub).%OpenId(tmp("Id"))
	 .//w !,a.RecTyp_"^"_a.RecCancelUser
	 .i (a.RecTyp=EmrCode)&&(a.RecCancelUser="") s id=tmp("Id")
	 }	 
	}
	//b ;44
	i id'="" s ret=1
	q ret
]]></Implementation>
</Method>

<Method name="getdata">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   s ret="" 
   s id="" f  s id=$O(^User.DHCNURMoudelLinkD(id)) q:id=""  d
 	.s a=##class(User.DHCNURMoudelLink).%OpenId(id)
 	.s PrintCode=a.PrintCode
 	
	.s ret=ret_"^rw|"_id_"^PrintCode|"_PrintCode
	q ret
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
//d ##class(User.DHCNURMoudelLink).getPrintCode("DHCNURXH2")

]]></Content>
</UDLText>

<Method name="getPrintCode">
<ClassMethod>1</ClassMethod>
<FormalSpec>RecTyp</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   s ret="" 
   s RecTyp=$zconvert(RecTyp,"U")
   s id="" f  s id=$O(^User.DHCNURMoudelLinkI("CodeIndex"," "_RecTyp,id)) q:id=""  d
 	.s a=##class(User.DHCNURMoudelLink).%OpenId(id)
 	.s PrintCode=a.PrintCode
 	.s typ=a.typ
 	.s xuflag=a.XuFlag
 	.s makepic=a.MakePic
 	.s upload=a.Upload
	.s ret=PrintCode_"|"_typ_"|"_xuflag_"|"_makepic_"|"_upload

	q ret
]]></Implementation>
</Method>

<Method name="Save">
<ClassMethod>1</ClassMethod>
<FormalSpec>parr:%String,id:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	//s ^objcyfddd=parr_"&"_id
	s aa=##class(web.DHCMGNurComm).settmp(parr,.tmp)
	q:$g(tmp("Code"))="" "界面模板关键字不能为空"
	s rw=""
	s code=$zcvt(tmp("PrintCode"),"U")
	i id="" s rw=$o(^User.DHCNURMoudelLinkI("PrintCode"," "_code,""))
	q:rw'="" "该打印模板已经保存过"
	q:$g(tmp("PrintCode"))="" "打印模板关键字不能为空"
	q:$g(tmp("typ"))="" "类型不能为空"
	q:$g(tmp("Name"))="" "模板名称不能为空"
	
	
	if id=""
	{
	 s a=##class(User.DHCNURMoudelLink).%New()
	}else
	{
	 s a=##class(User.DHCNURMoudelLink).%OpenId(id)
	}
	if $D(tmp("Code")) s a.Code=tmp("Code")
	if $D(tmp("PrintCode")) s a.PrintCode=tmp("PrintCode")
	if $D(tmp("typ")) s a.typ=tmp("typ")
	if $D(tmp("MakePic")) s a.MakePic=tmp("MakePic")
	if $D(tmp("Upload")) s a.Upload=tmp("Upload")
	if $D(tmp("Name")) s a.Name=tmp("Name")
	if $g(tmp("XuFlag"))="" s a.XuFlag="N"
	else  s a.XuFlag=tmp("XuFlag")
	s a.RECDate=$p($h,",",1)
	s a.RECTime=$p($h,",",2)
	s a.UserREC=%session.Get("LOGON.USERNAME")
	d a.%Save()
	q 0
]]></Implementation>
</Method>

<Method name="QtDelete">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
  
   s a=##class(User.DHCNURMoudelLink).%DeleteId(id)
   q 0
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// d ##class(%ResultSet).RunQuery("web.DHCNurblsjflwh","CRItem","parr$111")

]]></Content>
</UDLText>

<Method name="getVal">
<ClassMethod>1</ClassMethod>
<FormalSpec>id</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s ret=""
	
	if id'=""
	{
	s a=##class(User.DHCNURMoudelLink).%OpenId(id)	
	s tmp("Code")=a.Code
	s tmp("typ")=a.typ
	s tmp("Name")=a.Name
	s tmp("MakePic")=a.MakePic
	s tmp("Upload")=a.Upload
	s tmp("PrintCode")=a.PrintCode	
	s tmp("XuFlag")=a.XuFlag	
	s k=""
	f {
	s k=$O(tmp(k))
	q:k=""
	s ret=ret_k_"|"_tmp(k)_"^"
	}
	}
	q ret
]]></Implementation>
</Method>

<Method name="CRItemExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary,parr:%String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 	Set repid=$I(^CacheTemp)
 	s ind=1
    s id="" f  s id=$O(^User.DHCNURMoudelLinkD(id)) q:id=""  d
 	.s a=##class(User.DHCNURMoudelLink).%OpenId(id)
	.s rw=id
	.s ret=""
	.s ret=..getVal(rw)
	.s ret=ret_"^rw|"_id
	.d outtyp2
    Set qHandle=$lb(0,repid,0)
	Quit $$$OK
outtyp2
	set Data=$lb(ret)
 	Set ^CacheTemp(repid,ind)=Data
 	Set ind=ind+1
	quit
]]></Implementation>
</Method>

<Method name="CRItemFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary,&Row:%List,&AtEnd:%Integer=0]]></FormalSpec>
<PlaceAfter>CRItemExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set AtEnd=$LIST(qHandle,1)
 	Set repid=$LIST(qHandle,2)
 	Set ind=$LIST(qHandle,3)
 	Set ind=$o(^CacheTemp(repid,ind))
 	If ind="" {				// if there are no more rows, finish fetching
 		Set AtEnd=1
 		Set Row=""
 	}
 	Else      {			
 		Set Row=^CacheTemp(repid,ind)
 	}
 	s qHandle=$lb(AtEnd,repid,ind)
	Quit $$$OK
]]></Implementation>
</Method>

<Query name="CRItem">
<Type>%Query</Type>
<FormalSpec>parr:%String</FormalSpec>
<Parameter name="ROWSPEC" value="aa"/>
</Query>

<Method name="CRItemClose">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary]]></FormalSpec>
<PlaceAfter>CRItemExecute</PlaceAfter>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set repid=$LIST(qHandle,2)
 	Kill ^CacheTemp(repid)
    Quit $$$OK
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^User.DHCNURMoudelLinkD</DataLocation>
<DefaultData>DHCNURMoudelLinkDefaultData</DefaultData>
<IdLocation>^User.DHCNURMoudelLinkD</IdLocation>
<IndexLocation>^User.DHCNURMoudelLinkI</IndexLocation>
<StreamLocation>^User.DHCNURMoudelLinkS</StreamLocation>
<Data name="DHCNURMoudelLinkDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Code</Value>
</Value>
<Value name="3">
<Value>PrintCode</Value>
</Value>
<Value name="4">
<Value>UserREC</Value>
</Value>
<Value name="5">
<Value>RECDate</Value>
</Value>
<Value name="6">
<Value>RECTime</Value>
</Value>
<Value name="7">
<Value>typ</Value>
</Value>
<Value name="8">
<Value>Name</Value>
</Value>
<Value name="9">
<Value>XuFlag</Value>
</Value>
<Value name="10">
<Value>MakePic</Value>
</Value>
<Value name="11">
<Value>Upload</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
