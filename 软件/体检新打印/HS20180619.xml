<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2016.2 (Build 736U)" ts="2018-06-19 17:27:56">
<Class name="HS.BL.ExaminationNetPay">
<Super>%RegisteredObject</Super>
<TimeChanged>64807,55838.110194</TimeChanged>
<TimeCreated>64755,53999.448942</TimeCreated>

<Method name="QueryNeedPayedRecord">
<Description><![CDATA[
Descript:根据病人id查找待缴费记录
Creater:	王国营
CreateDate:	2018-4-19
Input:<Request><patientId>病人id</patientId></Request>
Output:	<Name>陈婉清</Name><Sex>女</Sex><PayRecords><PayRecord><admId>1123||P</admId><CheckDate>2018-05-04</CheckDate><SetsDesc>入职体检</SetsDesc><Amt>263.00</Amt></PayRecord><PayRecord><admId>1124||P</admId><CheckDate>2018-04-17</CheckDate><Amt>345.00</Amt></PayRecord></PayRecords>
w ##class(HS.BL.ExaminationNetPay).QueryNeedPayedRecord("<Request><patientId>1471</patientId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationNetPayRequest")
	if (reader.Next(.request,.sc)){
		s patientId=$TR(request.patientId,$c(0))
	}else{
		if $$$ISERR(sc) q "-21^解析参数错误:"_$System.Status.GetErrorText(sc)
	}
	q:patientId="" "-3^病人id不能为空"
	q ##class(web.DHCPE.NetPre.Pay).GetNeedPayedRecord(patientId)
]]></Implementation>
</Method>

<Method name="QueryNeedPayedItem">
<Description><![CDATA[
Descript:根据id查找待缴费项目
Creater:	王国营
CreateDate:	2018-4-19
Input:<Request><admId>QueryNeedPayedRecord 返回的admId</admId></Request>
Output:	<Items><Item><ArcmiDesc>入职体检</ArcmiDesc><Amt>263.00</Amt></Item><Item><ArcmiDesc>一般检查</ArcmiDesc><Amt>0.00</Amt></Item><Item><ArcmiDesc>彩超(门静脉血流)</ArcmiDesc><Amt>140.00</Amt></Item><Item><ArcmiDesc>光学相干断层成像(OCT)</ArcmiDesc><Amt>200.00</Amt></Item></Items>
w ##class(HS.BL.ExaminationNetPay).QueryNeedPayedItem("<Request><admId>161||N</admId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationNetPayRequest")
	if (reader.Next(.request,.sc)){
		s admId=$TR(request.admId,$c(0))
	}else{
		if $$$ISERR(sc) q "-21^解析参数错误:"_$System.Status.GetErrorText(sc)
	}
	q:admId="" "-3^参数不能为空"
	q ##class(web.DHCPE.NetPre.Pay).GetNeedPayItem(admId)
]]></Implementation>
</Method>

<Method name="PENetPay">
<Description><![CDATA[
Descript:网上支付
Creater:	王国营
CreateDate:	2018-4-19
Input:<Request><admId>QueryNeedPayedRecord 返回的admId</admId><regNo>登记号</regNo><payAmount>支付金额</payAmount><payMode>支付方式ID</payMode></Request>
Output:	0^支付成功
w ##class(HS.BL.ExaminationNetPay).QueryNeedPayedItem("<Request><admId>161||N</admId><regNo>登记号</regNo><payAmount>263.00</payAmount><payMode>37</payMode></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationNetPayRequest")
	if (reader.Next(.request,.sc)){
		s admId=$TR(request.admId,$c(0))
		s regNo=$TR(request.regNo,$c(0))
		s payAmount=$TR(request.payAmount,$c(0))
		s payMode=$TR(request.payMode,$c(0))
	}else{
		if $$$ISERR(sc) q "-21^解析参数错误:"_$System.Status.GetErrorText(sc)
	}
	q:(admId="")||(payAmount="")||(payMode="") "-3^参数不能为空"
	s bindFlag="0" ;网上预约时要求先绑定登记号则设置为1  否则设置为0
	q:(bindFlag="1")&&(regNo="") "-3^登记号不能为空"
	s payRet=##class(web.DHCPE.NetPre.Pay).Main(admId,regNo,payAmount,payMode,bindFlag)
	s:+payRet=0 payRet="支付成功"
	q payRet
]]></Implementation>
</Method>
</Class>


<Class name="HS.BL.ExaminationQuestion">
<Super>%RegisteredObject</Super>
<TimeChanged>64608,60255.64541</TimeChanged>
<TimeCreated>63195,54021.073498</TimeCreated>

<Method name="QueryExamQuestion">
<Description><![CDATA[
Descript:查找调查问卷
Creater:	ZhangDongmei
CreateDate:	2013-01-08
Table:
Input:<Request><activeFlag>是否激活:Y,N</activeFlag><quesType>问卷类型:M</quesType></Request>
Output:	
Return：<ExamQuestion></ExamQuestion>
w ##class(HS.BL.ExaminationQuestion).QueryExamQuestion("")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	s params=$TR(params,$c(0))
 	s activeFlag=""
 	s quesType=""
	if (params'=""){
		s reader=##class(%XML.Reader).%New()
		s sc=reader.OpenString(params)
		if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
		do reader.Correlate("Request","HS.Temp.ExamQuestionRequest")
		if reader.Next(.request,.sc){
			s activeFlag=$TR(request.activeFlag,$c(0))
			s quesType=$TR(request.quesType,$c(0))
		}else{
			q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
		}
	}
	s retStr=""
	s type=""
	f  s type=$o(^User.DHCHMCQuestionnaireI("TypeCodeIndex",type))  q:type=""  d
	.s code=""
	.f  s code=$o(^User.DHCHMCQuestionnaireI("TypeCodeIndex",type,code))  q:code=""  d
	..s id=$o(^User.DHCHMCQuestionnaireI("TypeCodeIndex",type,code,0)) 
	..q:(id="")||(id'=1)
	..s objQues=##class(User.DHCHMCQuestionnaire).%OpenId(id)
	..s myObj=##class(HS.Temp.ExamQuestion).%New()
	..s myObj.quesCode=objQues.QCode
	..s myObj.quesDesc=objQues.QDesc
	..s myObj.quesId=id
	..s sc=myObj.XMLExportToString(.XML,"ExamQuestion")
	..i '$$$ISERR(sc)  d
	...s retStr=retStr_XML
	..
	.
	q retStr
]]></Implementation>
</Method>

<Method name="QueryExamQuestionDetail">
<Description><![CDATA[
Descript:查找调查问卷
Creater:	ZhangDongmei
CreateDate:	2013-01-08
Table:
Input:<Request><activeFlag>是否激活:Y,N</activeFlag>
<quesType>问卷类型:M</quesType><lastSeqNo></lastSeqNo><pageSize></pageSize>
<idCardNo>身份证号</idCardNo></Request>
Output:	
Return：<ExamQuestion></ExamQuestion>
w ##class(HS.BL.ExaminationQuestion).QueryExamQuestionDetail("<Request><idCardNo>370911190001012639</idCardNo></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	s params=$TR(params,$c(0))
 	s activeFlag=""
 	s quesType=""
 	s lastSeqNo=0
 	s idCardNo=""
	if (params'=""){
		s reader=##class(%XML.Reader).%New()
		s sc=reader.OpenString(params)
		if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
		do reader.Correlate("Request","HS.Temp.ExamQuestionRequest")
		if reader.Next(.request,.sc){
			s activeFlag=$TR(request.activeFlag,$c(0))
			s quesType=$TR(request.quesType,$c(0))
			s lastSeqNo=+$TR(request.lastSeqNo,$c(0))
			s pageSize=+$TR(request.pageSize,$c(0))
			s idCardNo=$TR(request.idCardNo,$c(0))
		}else{
			q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
		}
	}
	s:+$g(pageSize)=0 pageSize=20
	s lastItemId=..GetLastDetailId(activeFlag,quesType,1)
	s count=0
	s pageCount=0
	s retStr=""
	s lastFlag=0
	s:activeFlag="" activeFlag="Y"  //只查询已激活的问卷
	s type=""
	f  s type=$o(^User.DHCHMCQuestionnaireI("TypeCodeIndex",type))  q:(type="")||(pageCount>pageSize)||(lastFlag=1)  d
	.s code=""
	.f  s code=$o(^User.DHCHMCQuestionnaireI("TypeCodeIndex",type,code))  q:(code="")||(pageCount>pageSize)||(lastFlag=1)  d
	..s id=$o(^User.DHCHMCQuestionnaireI("TypeCodeIndex",type,code,0)) 
	..q:(id="")||(id'=1)
	..s objQues=##class(User.DHCHMCQuestionnaire).%OpenId(id)
	..s active=objQues.QActive
	..s type=objQues.QType
	..q:(activeFlag'="")&(active'=activeFlag)
	..q:(quesType'="")&(type'=quesType)
	..s order=""
	..f  s order=$o(^User.DHCHMCQuestionSubjectI("QSOrderIndex",id,order)) q:(order="")||(pageCount>pageSize)||(lastFlag=1)  d
	...s child=0
	...f  s child=$o(^User.DHCHMCQuestionSubjectI("QSOrderIndex",id,order,child)) q:(child="")||(pageCount>pageSize)||(lastFlag=1)  d
	....s subjectActive=$lg(^User.DHCHMCQuestionnaireD(id,"QSubject",child),2)
	....q:subjectActive'=activeFlag
	....s detailOrder=""
	....f  s detailOrder=$o(^User.DHCHMCSDLinkI("SDLOrderIndex",id,child,detailOrder)) q:(detailOrder="")||(pageCount>pageSize)||(lastFlag=1)  d
	.....s linkChild=0
	.....f  s linkChild=$o(^User.DHCHMCSDLinkI("SDLOrderIndex",id,child,detailOrder,linkChild)) q:(linkChild="")||(pageCount>pageSize)||(lastFlag=1)  d
	......s linkId=id_"||"_child_"||"_linkChild
	......s count=count+1
	......q:(lastSeqNo'=0)&(count<=lastSeqNo)  //过滤本页之前的问题
	......s pageCount=pageCount+1
	......q:pageCount>pageSize
	......s myObj=..GetQuestionDetail(linkId,idCardNo)
	......q:myObj=""
	......s myObj.seqNo=count
	......s detailId=myObj.detailId
	......i detailId=lastItemId  d
	.......s myObj.isLast=1
	.......s lastFlag=1
	......e  d
	.......s myObj.isLast=0
	......s sc=myObj.XMLExportToString(.XML,"ExamQuestion")
	......i '$$$ISERR(sc)  d
	.......s retStr=retStr_XML
	..
	.
	q retStr
]]></Implementation>
</Method>

<Method name="QuerySatisfactionQuestion">
<Description><![CDATA[
Descript:查找满意度调查问卷
Creater:	ZhangDongmei
CreateDate:	2013-02-28
Table:
Input:<Request><activeFlag>是否激活:Y,N</activeFlag>
<quesType>问卷类型:M</quesType><lastSeqNo></lastSeqNo><pageSize></pageSize>
<questionnaireName>问卷名称</questionnaireName></Request>
Output:	
Return：<ExamQuestion></ExamQuestion>
w ##class(HS.BL.ExaminationQuestion).QuerySatisfactionQuestion("<Request><questionnaireName>普通</questionnaireName><quesType>MY</quesType></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	s params=$TR(params,$c(0))
 	s activeFlag=""
 	s quesType=""
 	s lastSeqNo=0
	if (params'=""){
		s reader=##class(%XML.Reader).%New()
		s sc=reader.OpenString(params)
		if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
		do reader.Correlate("Request","HS.Temp.ExamQuestionRequest")
		if reader.Next(.request,.sc){
			s activeFlag=$TR(request.activeFlag,$c(0))
			s quesType=$TR(request.quesType,$c(0))
			s lastSeqNo=+$TR(request.lastSeqNo,$c(0))
			s pageSize=+$TR(request.pageSize,$c(0))
			s quesName=$TR(request.questionnaireName,$c(0))
		}else{
			q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
		}
	}
	s:+$g(pageSize)=0 pageSize=200
	s lastItemId=..GetLastDetailId(activeFlag,quesType,"",quesName)
	s count=0
	s pageCount=0
	s retStr=""
	i quesType'=""  d
	.s type=$c(32)_$zcvt(quesType,"U")
	.s code=""
	.f  s code=$o(^User.DHCHMCQuestionnaireI("TypeCodeIndex",type,code))  q:(code="")||(pageCount>pageSize)  d
	..s id=$o(^User.DHCHMCQuestionnaireI("TypeCodeIndex",type,code,0)) 
	..d GetData
	.
	e  d
	.s type=""
	.f  s type=$o(^User.DHCHMCQuestionnaireI("TypeCodeIndex",type))  q:(type="")||(pageCount>pageSize)  d
	..s code=""
	..f  s code=$o(^User.DHCHMCQuestionnaireI("TypeCodeIndex",type,code))  q:(code="")||(pageCount>pageSize)  d
	...s id=$o(^User.DHCHMCQuestionnaireI("TypeCodeIndex",type,code,0)) 
	...d GetData
	.
	q retStr
	;
GetData
	q:id=""
	s objQues=##class(User.DHCHMCQuestionnaire).%OpenId(id)
	s active=objQues.QActive
	s qtType=objQues.QType
	s desc=objQues.QDesc
	q:(quesName'="")&(desc'[quesName)
	q:(activeFlag'="")&(active'=activeFlag)
	q:(quesType'="")&(qtType'=quesType)
	s order=""
	f  s order=$o(^User.DHCHMCQuestionSubjectI("QSOrderIndex",id,order)) q:(order="")||(pageCount>pageSize)  d
	.s child=0
	.f  s child=$o(^User.DHCHMCQuestionSubjectI("QSOrderIndex",id,order,child)) q:(child="")||(pageCount>pageSize)  d
	..s detailOrder=""
	..f  s detailOrder=$o(^User.DHCHMCSDLinkI("SDLOrderIndex",id,child,detailOrder)) q:(detailOrder="")||(pageCount>pageSize)  d
	...s linkChild=0
	...f  s linkChild=$o(^User.DHCHMCSDLinkI("SDLOrderIndex",id,child,detailOrder,linkChild)) q:(linkChild="")||(pageCount>pageSize)  d
	....s linkId=id_"||"_child_"||"_linkChild
	....s count=count+1
	....q:(lastSeqNo'=0)&(count<=lastSeqNo)
	....s pageCount=pageCount+1
	....q:pageCount>pageSize
	....s myObj=..GetQuestionDetail(linkId,"")
	....q:myObj=""
	....s myObj.seqNo=count
	....s detailId=myObj.detailId
	....i detailId=lastItemId  d
	.....s myObj.isLast=1
	....e  d
	.....s myObj.isLast=0
	....s sc=myObj.XMLExportToString(.XML,"ExamQuestion")
	....i '$$$ISERR(sc)  d
	.....s retStr=retStr_XML
	..
	.
	q
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// w ##class(HS.BL.ExaminationQuestion).GetQuestionDetail("2||5||142")

]]></Content>
</UDLText>

<Method name="GetQuestionDetail">
<ClassMethod>1</ClassMethod>
<FormalSpec>linkId:%String,idCardNo:%String=""</FormalSpec>
<ReturnType>HS.Temp.ExamQuestion</ReturnType>
<Implementation><![CDATA[
	q:linkId="" ""
 	s objLink=##class(User.DHCHMCSDLink).%OpenId(linkId)
 	q:objLink="" ""
 	q:objLink.SDLActive'="Y" ""
 	s myObj=##class(HS.Temp.ExamQuestion).%New()
	s myObj.linkId=linkId
	s detailId=objLink.SDLQuestionsDetailDR.%Id()
	q:detailId="" ""
	s active=objLink.SDLQuestionsDetailDR.QDActive
	q:active'="Y" ""
	s chl=$o(^User.DHCHMCQDOLinkDetailI("CSDLinkID",linkId,0))
	i chl'=""  d
	.s myObj.showFlag=0
	e  d
	.s myObj.showFlag=1
	s myObj.required=objLink.SDLQuestionsDetailDR.QDRequired
	s myObj.detailCode=objLink.SDLQuestionsDetailDR.QDCode
	s myObj.detailDesc=objLink.SDLQuestionsDetailDR.QDDesc
	s myObj.detailId=detailId
	s myObj.detailType=objLink.SDLQuestionsDetailDR.QDType
	s myObj.detailNote=objLink.SDLQuestionsDetailDR.QDNote
	s myObj.detailNoteType=objLink.SDLQuestionsDetailDR.QDNoteType
	s myObj.remark=objLink.SDLQuestionsDetailDR.QDRemark
	s myObj.detailUnit=objLink.SDLQuestionsDetailDR.QDUnit
	s subjectId=objLink.SDLParRefGetObjectId()
	i subjectId'=""  d
	.s objSubject=##class(User.DHCHMCQuestionSubject).%OpenId(subjectId)
	.s myObj.subjectCode=objSubject.QSCode
	.s myObj.subjectDesc=objSubject.QSDesc
	.s myObj.subjectId=subjectId
	.s myObj.subjectRemark=objSubject.QSRemark
	.s quesId=objSubject.QSParRefGetObjectId()
	.i quesId'=""  d
	..s objQues=##class(User.DHCHMCQuestionnaire).%OpenId(quesId)
	..s myObj.quesCode=objQues.QCode
	..s myObj.quesDesc=objQues.QDesc
	..s myObj.quesId=quesId
	.
	
	;获取问题类型为文本或数值的答案   By Wgy
	s pid=..CollectQuestionLastResult(idCardNo,$g(quesId))
	s txtFlag=1
	
	
	
	s optionOrder=""
	f  s optionOrder=$o(^User.DHCHMCQDOptionsI("QDOOrderIndex",detailId,optionOrder)) q:optionOrder=""  d
	.s optionChild=0
	.f  s optionChild=$o(^User.DHCHMCQDOptionsI("QDOOrderIndex",detailId,optionOrder,optionChild)) q:optionChild=""  d
	..s optionId=detailId_"||"_optionChild
	..s txtFlag=0
	..s objOption=##class(User.DHCHMCQDOptions).%OpenId(optionId)
	..s objQuestionOption=##class(HS.Temp.QuestionOptions).%New()
	..s objQuestionOption.optionDesc=objOption.QDODesc
	..s objQuestionOption.optionDefaultValue=objOption.QDODefault
	..s objQuestionOption.optionId=optionId
	..s strLinkDetail=..GetOptionLinkedQuestion(optionId)
	..s objQuestionOption.linkDetailId=strLinkDetail
	..s exclusiveDetail=..GetOptionNoLinkedQuestion(optionId,strLinkDetail)
	..s objQuestionOption.exclusiveDetailId=exclusiveDetail
	..s objQuestionOption.inputFlag=objOption.QDONote
	..;s pid=..CollectQuestionLastResult(idCardNo,$g(quesId))
	..i pid'=""  d
	...s resultValue=$g(^TEMPMHCHS("QuestionResult",pid,detailId,optionId))
	...s objQuestionOption.resultNote=$p(resultValue,"^",2)
	...s objQuestionOption.resultValue=$p(resultValue,"^",1) 
	...i $p(resultValue,"^",1)'=""  d
	....s myObj.showFlag=1		;有结果的项目显示
	..d myObj.QuestionOptionsList.Insert(objQuestionOption)
	..
	.
	
	
	i (txtFlag=1)&&(pid'="") d
	.s txtValue=$g(^TEMPMHCHS("QuestionResult",pid,detailId,"text"))
	.i txtValue'="" d 
	..s myObj.txtValue=$p(txtValue,"^",2)
	..
	.
	q myObj
]]></Implementation>
</Method>

<Method name="GetOptionLinkedQuestion">
<Description><![CDATA[
Descript:取调查问卷中选项关联的问题
Creater:	ZhangDongmei
CreateDate:	2014-02-25
Table:
Input:<Request><activeFlag>是否激活:Y,N</activeFlag><quesType>问卷类型:M</quesType></Request>
Output:	
Return：<ExamQuestion></ExamQuestion>
w ##class(HS.BL.ExaminationQuestion).GetOptionLinkedQuestion("191||740")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>optionId:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:optionId="" ""
	s detailId=$p(optionId,"||",1)
	s optChl=$p(optionId,"||",2)
	s strLinkDetailId=""
	s linkChl=0
	f  s linkChl=$o(^User.DHCHMCQuestionsDetailD(detailId,"QDOptions",optChl,"QDOChild",linkChl)) q:linkChl=""  d
	.s linkDetailId=detailId_"||"_optChl_"||"_linkChl
	.s objLinkDetail=##class(User.DHCHMCQDOLinkDetail).%OpenId(linkDetailId)
	.s tmpDetailId=objLinkDetail.QDOLCSDLinkID.SDLQuestionsDetailDR.%Id()
	.i strLinkDetailId=""  d
	..s strLinkDetailId=tmpDetailId
	.e  d
	..s strLinkDetailId=strLinkDetailId_","_tmpDetailId
	.
	q strLinkDetailId
]]></Implementation>
</Method>

<Method name="GetOptionNoLinkedQuestion">
<Description>
Descript:取调查问卷中选项不关联的问题
Creater:	ZhangDongmei
CreateDate:	2014-02-25
Table:
Input:
Output:	
Return：</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>optionId:%String,strLinkDetail:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:optionId="" ""
	s detailId=$p(optionId,"||",1)
	s optChl=$p(optionId,"||",2)
	s otherOptChl=""
	s strLinkDetailId=""
	f  s otherOptChl=$o(^User.DHCHMCQuestionsDetailD(detailId,"QDOptions",otherOptChl)) q:otherOptChl=""  d
	.q:otherOptChl=optChl
	.s linkChl=0
	.f  s linkChl=$o(^User.DHCHMCQuestionsDetailD(detailId,"QDOptions",otherOptChl,"QDOChild",linkChl)) q:linkChl=""  d
	..s linkDetailId=detailId_"||"_otherOptChl_"||"_linkChl
	..s objLinkDetail=##class(User.DHCHMCQDOLinkDetail).%OpenId(linkDetailId)
	..q:objLinkDetail=""
	..s tmpDetailId=objLinkDetail.QDOLCSDLinkID.SDLQuestionsDetailDR.%Id()
	..s ret=$$CheckExist(tmpDetailId)
	..q:ret=1
	..i strLinkDetailId=""  d
	...s strLinkDetailId=tmpDetailId
	..e  d
	...s strLinkDetailId=strLinkDetailId_","_tmpDetailId
	.
	q strLinkDetailId
CheckExist(detail)
 s flag=0
 f i=1:1:$l(strLinkDetail,",") q:flag=1  d
 .s tmpValue=$p(strLinkDetail,",",i)
 .i tmpValue=detail d
 ..s flag=1
 .
 q flag
]]></Implementation>
</Method>

<Method name="CollectQuestionLastResult">
<Description>
Descript:取某个人某调查问卷的最新结果
Creater:	ZhangDongmei
CreateDate:	2014-02-25
Table:
Input:身份证号,问卷ID
Output:	
Return：
/w ##class(HS.BL.ExaminationQuestion).CollectQuestionLastResult("370830199008099864",1)</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>idCardNo:%String,questionnaireId:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s pid=..NewPid()
	q:idCardNo="" ""
	q:questionnaireId="" ""
	s baseInfoId=$o(^User.DHCHMOBaseInfoI("BIIDCardIndex",$c(32)_$zcvt(idCardNo,"U"),""),-1)
	q:baseInfoId="" ""
	;
	;查找该用户该调查问卷的最后一次更改记录
	s findQEQuestionChl=""
	s findEvaluationId=""
	s evaluationId=""
	f  s evaluationId=$o(^User.DHCHMOEvaluationRecordI("QOBaseInfoDRIndex",baseInfoId,evaluationId),-1) q:(evaluationId="")!(findEvaluationId'="")  d
	.s qeQuestionChl=""
	.f  s qeQuestionChl=$o(^User.DHCHMOQEQuestionI("QEQCQuestionnaireDRIndex",questionnaireId,evaluationId,qeQuestionChl),-1) q:(qeQuestionChl="")!(findEvaluationId'="")  d
	..s findEvaluationId=evaluationId
	..s findQEQuestionChl=qeQuestionChl
	.
	q:findEvaluationId="" ""
	q:findQEQuestionChl="" ""
	s count=0
	s resultChl=0
	f  s resultChl=$o(^User.DHCHMOQEQuestionD(findEvaluationId,findQEQuestionChl,"DHCHMOQResult",resultChl)) q:resultChl=""  d
	.s resultId=findEvaluationId_"||"_findQEQuestionChl_"||"_resultChl
	.s objResult=##class(User.DHCHMOQResult).%OpenId(resultId)
	.q:objResult=""
	.s detailId=objResult.QRCQuestionsDetailDR.%Id()
	
	.;文本类型问题optionId为空，以text替代optionId    ByWgy
	.s optionId="text"
	.i objResult.QRCQDOptionsDR'=""  do
	..s optionId=objResult.QRCQDOptionsDR.%Id()

	.s result=objResult.QRResult
	.s remark=objResult.QRRemark
	.s ^TEMPMHCHS("QuestionResult",pid,detailId,optionId)=result_"^"_remark
	
	.;计算本次问卷答案与套餐关联度  ByWgy
	.i optionId'="text" d
	..s QDONOSetsDR=""
	..f  s QDONOSetsDR=$O(^User.DHCHMCQDONetOrdSetsI("QDONOSDRIndex",detailId,$p(optionId,"||",2),QDONOSetsDR)) q:QDONOSetsDR=""  d
	...s QDONOSSub=$O(^User.DHCHMCQDONetOrdSetsI("QDONOSDRIndex",detailId,$p(optionId,"||",2),QDONOSetsDR,""))
	...s currData=^User.DHCHMCQuestionsDetailD(detailId,"QDOptions",$p(optionId,"||",2),"QDONOSNetOrdSets",QDONOSSub)
	...s QDONOSActive=$lg(currData,4)
	...q:QDONOSActive'="Y"
	...s QDONOSRelevance=$lg(currData,3)
	...s QDONOSHisSetsDR=$lg(^User.DHCPENetOrdSetsD(QDONOSetsDR),2)
	...i $D(^TEMPDHCPEQDNS("HMQDNS",idCardNo,questionnaireId,pid,QDONOSHisSetsDR)) d
	....s ^TEMPDHCPEQDNS("HMQDNS",idCardNo,questionnaireId,pid,QDONOSHisSetsDR)=^TEMPDHCPEQDNS("HMQDNS",idCardNo,questionnaireId,pid,QDONOSHisSetsDR)+QDONOSRelevance
	...e  d
	....s ^TEMPDHCPEQDNS("HMQDNS",idCardNo,questionnaireId,pid,QDONOSHisSetsDR)=QDONOSRelevance
	.e  d
	..s QDNLSetsDR=""
	..f  s QDNLSetsDR=$O(^User.DHCHMCQDNetSetsLinkI("QDNLNetSetsDRIndex",detailId,QDNLSetsDR))  q:QDNLSetsDR=""  d
	...s QDNLSub=""
	...f  s QDNLSub=$O(^User.DHCHMCQDNetSetsLinkI("QDNLNetSetsDRIndex",detailId,QDNLSetsDR,QDNLSub))  q:QDNLSub=""  d
	....s QDNLRelevance=$lg(^User.DHCHMCQuestionsDetailD(detailId,"QDNetSetsLink",QDNLSub),3)
	....s QDNLExpression=$lg(^User.DHCHMCQuestionsDetailD(detailId,"QDNetSetsLink",QDNLSub),4)
	
	....s expressionRet=##class(web.DHCHM.test).CalcExpression(remark,QDNLExpression)
	....q:expressionRet'=1
	....s QDNLHisSetsDR=$lg(^User.DHCPENetOrdSetsD(QDNLSetsDR),2)
	....i $D(^TEMPDHCPEQDNS("HMQDNS",idCardNo,questionnaireId,pid,QDNLHisSetsDR)) d
	.....s ^TEMPDHCPEQDNS("HMQDNS",idCardNo,questionnaireId,pid,QDNLHisSetsDR)=^TEMPDHCPEQDNS("HMQDNS",idCardNo,questionnaireId,pid,QDNLHisSetsDR)+QDNLRelevance
	....e  d
	.....s ^TEMPDHCPEQDNS("HMQDNS",idCardNo,questionnaireId,pid,QDNLHisSetsDR)=QDNLRelevance		
	.;end
	.s count=count+1
	.
	q:count=0 ""
	q pid
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// w ##class(HS.BL.ExaminationQuestion).GetLastDetailId("","",1)

]]></Content>
</UDLText>

<Method name="GetLastDetailId">
<ClassMethod>1</ClassMethod>
<FormalSpec>activeFlag:%String,quesType:%String,quesId:%String="",quesName:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s lastId=""
	s type=""
	s:activeFlag="" activeFlag="Y"
	f  s type=$o(^User.DHCHMCQuestionnaireI("TypeCodeIndex",type),-1)  q:(type="")||(lastId'="")  d
	.s code=""

	.f  s code=$o(^User.DHCHMCQuestionnaireI("TypeCodeIndex",type,code),-1)  q:(code="")||(lastId'="")  d
	..s id=$o(^User.DHCHMCQuestionnaireI("TypeCodeIndex",type,code,0))
	..q:id=""

	..q:(quesId'="")&(id'=quesId)
	..s objQues=##class(User.DHCHMCQuestionnaire).%OpenId(id)
	..s active=objQues.QActive
	..s type=objQues.QType
	..s name=objQues.QDesc
	..q:(quesName'="")&(name'[quesName)
	..q:(activeFlag'="")&(active'=activeFlag)
	..q:(quesType'="")&(type'=quesType)
	..;过滤掉未激活的主题   by wgy 
	..s order=""
	..s subjectChild=""
	..f  s order=$o(^User.DHCHMCQuestionSubjectI("QSOrderIndex",id,order),-1) q:(order="")||(subjectChild'="")  d
	...s tmpSubjectChild=""
	...s subjectActive=""
	...f  s tmpSubjectChild=$o(^User.DHCHMCQuestionSubjectI("QSOrderIndex",id,order,tmpSubjectChild),-1) q:(tmpSubjectChild="")||(subjectChild'="")  d
	....s subjectActive=$LG(^User.DHCHMCQuestionnaireD(id,"QSubject",tmpSubjectChild),2)
	....q:subjectActive'="Y"
	....s subjectChild=tmpSubjectChild
	..q:order=""
	..q:subjectChild=""
	..;过滤未激活的问题 by wgy
	..s detailOrder=""
	..f  s detailOrder=$o(^User.DHCHMCSDLinkI("SDLOrderIndex",id,subjectChild,detailOrder),-1) q:(detailOrder="")||(lastId'="")  d
	...s linkChild=""
	...f  s linkChild=$o(^User.DHCHMCSDLinkI("SDLOrderIndex",id,subjectChild,detailOrder,linkChild),-1) q:(linkChild="")||(lastId'="")  d
	....s linkId=id_"||"_subjectChild_"||"_linkChild
	....s objLink=##class(User.DHCHMCSDLink).%OpenId(linkId)
	....q:objLink.SDLActive'="Y"
	....s lastId=objLink.SDLQuestionsDetailDR.%Id()
	...
	..
	.
	q lastId
]]></Implementation>
</Method>

<Method name="SaveSatisfactionQuestion">
<Description><![CDATA[
Descript:保存满意度调查问卷
Creater:	ZhangDongmei
CreateDate:	2014-02-17
Table:User.DHCPENetPreRecord，DHC_PE_NetPreItemRecord
Input:<Request><patientName>姓名</patientName><sexDesc>性别：男，女</sexDesc>
<patientDob>出生日期</patientDob><patientIdNo>身份证号</patientIdNo>
<cardType>证件类型</cardType><telephoneNo>手机号</telephoneNo>
<occupation>职业</occupation><education>学历</education><marriage>婚姻状况</marriage>
<listResult>主题与内容关联id~结果选项ID~结果值~结果录入值@主题与内容关联id~结果选项ID~结果值~结果录入值</listResult></Request>
Output:	
Return：0^成功
]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s patientName=$TR(request.patientName,$c(0))
		s sexDesc=$TR(request.sexDesc,$c(0))
		s dob=$TR(request.patientDob,$c(0))
		s idNo=$TR(request.patientIdNo,$c(0))
		s telNo=$TR(request.telephoneNo,$c(0))
		s occupation=$TR(request.occupation,$c(0))
		s education=$TR(request.education,$c(0))
		s marriage=$TR(request.marriage,$c(0))
		s cardType=$TR(request.cardType,$c(0))
		s listResult=request.listResult
				
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	;
	s:sexDesc'="" sexId=$o(^CT("SEX",0,"Desc",$$ALPHAUP^SSUTIL4(sexDesc),0))
	;保存调查问卷
	s err=""
	i listResult'=""  d
	.s data=idNo_"^"_patientName_"^"_$g(sexId)_"^"_dob_"^"_telNo_"^"_occupation_"^"_education_"^"_marriage
	.s evaluationId=##class(HS.BL.ExaminationQuestion).SaveExamQuestionResult(data,listResult)
	.i +evaluationId<=0  s err=evaluationId
	.
	i err'="" q err
	q 0
]]></Implementation>
</Method>

<Method name="SaveQuestionResultForHisReg">
<Description><![CDATA[
Descript:保存调查问卷(前台预约)
Creater:	ZhangDongmei
CreateDate:	2014-04-10
Table:User.DHCPENetPreRecord
Input:<Request><patientRegNo>病人id</patientRegNo>
<occupation>职业</occupation><education>学历</education><marriage>婚姻状况</marriage>
<listResult>主题与内容关联id~结果选项ID~结果值~结果录入值@主题与内容关联id~结果选项ID~结果值~结果录入值</listResult></Request>
Output:	
Return：0^成功
]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s patientRegNo=$TR(request.patientRegNo,$c(0))
		s locId=$TR(request.locId,$c(0))
		s occupation=$TR(request.occupation,$c(0))
		s education=$TR(request.education,$c(0))
		s marriage=$TR(request.marriage,$c(0))
		s listResult=$TR(request.listResult,$c(0))
				
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:patientRegNo="" "-4^ID不能为空"
	q:locId="" "-6^体检科室不能为空"
	q:listResult="" "-5^没有要保存的问卷内容"
	;his预约ID_"^"_登记号_"^"_姓名_"^"_身份证_"^"_出生日期(1999-09-09)_"^"_电话_"^"_年龄_"^"_部门_"^"_性别
	s regInfo=##class(web.DHCPE.NetPre.GetPreInfo).GetHisInfo(patientRegNo,locId)
	s idNo=$p(regInfo,"^",4)
	s patientName=$p(regInfo,"^",3)
	s sexDesc=$p(regInfo,"^",9)
	s:sexDesc'="" sexId=$o(^CT("SEX",0,"Desc",$$ALPHAUP^SSUTIL4(sexDesc),0))
	s dob=$p(regInfo,"^",5)
	s telNo=$p(regInfo,"^",6)
	s age=$p(regInfo,"^",7)
	s hisRegId=$p(regInfo,"^",1)
	s status=5		;已体检
	s ordSetId=""
	s regExamDate=$zd(+$h,3)
	s regType=3		;窗口预约
	s detailId=""
	s cardType="身份证"
	;
	;保存调查问卷
	tstart
	s $ZT="ErrorReg"
	s err=""	
	s data=idNo_"^"_patientName_"^"_$g(sexId)_"^"_dob_"^"_telNo_"^"_occupation_"^"_education_"^"_marriage
	s evaluationId=##class(HS.BL.ExaminationQuestion).SaveExamQuestionResult(data,listResult)
	i +evaluationId<=0  s err=evaluationId
	i err'="" trollback
	i err'="" q err
	;预约记录(调查问卷和预约记录关联)
	;登记号^姓名^性别^年龄^身份证号^状态^套餐id^预约的体检日期^调查记录id^缴费标志^体检预约登记ID^体检科室ID^时间段ID^电话^证件类型
	s data=patientRegNo_"^"_patientName_"^"_$g(sexId)_"^"_age_"^"_idNo_"^"_status_"^"_ordSetId_"^"_regExamDate_"^"_evaluationId_"^"_regType_"^"_hisRegId_"^"_locId_"^"_detailId_"^"_telNo_"^"_cardType
	s regId=##class(HS.BL.ExaminationRegister).SaveRegister(data)
	i +regId<=0 trollback
	i +regId<=0 q regId
	tcommit
	q 0
	
ErrorReg
	s rtn=-100
	trollback
	q:$ze="" rtn
	q rtn_"^"_$ze
]]></Implementation>
</Method>

<Method name="SaveQuestionResultForModify">
<Description><![CDATA[
Descript:修改调查问卷
Creater:	dashuaige
CreateDate:	2014-11-05
Table:User.DHCPENetPreRecord
Input:<Request><regId>User.DHCPENetPreRecordid</regId>
<occupation>职业</occupation><education>学历</education><marriage>婚姻状况</marriage>
<listResult>主题与内容关联id~结果选项ID~结果值~结果录入值@主题与内容关联id~结果选项ID~结果值~结果录入值</listResult></Request>
Output:	
Return：0^成功
d ##class(HS.BL.ExaminationQuestion).SaveQuestionResultForModify("<Request><locId>53</locId><regId>1</regId><listResult>5||16||194~181||647~汉族~@5||16||197~184||673~好~@5||16||198~185||678~差不多~@5||16||199~186||681~糖尿病（医院确诊）~@5||16||199~186||693~其他~ddss@5||16||200~187||1118~无~@5||16||201~188||709~耳鼻喉~@5||16||202~189||730~降糖药~@5||16||203~190||736~粉尘~@5||16||204~191||743~不抽但吸入大量二手烟~@5||16||208~195||758~否~@5||16||214~201||790~哮喘~@5||16||214~201||796~其它~dd2233@5||16||215~202||797~肺癌~@5||16||215~202||798~乳腺癌~@5||16||215~202||799~胃癌~@5||16||215~202||800~结、直肠癌~@5||16||215~202||801~肝癌~@5||16||215~202||803~卵巢癌~@5||16||215~202||804~前列腺癌~@5||16||215~202||806~鼻咽癌~@5||16||215~202||808~脑肿瘤~@5||16||215~202||810~胰腺癌~@5||16||215~202||1120~无~@5||17||216~203||813~午餐~@5||17||217~204||818~每周1-3次~@5||17||218~205||822~偏咸（gt11克）~@5||17||219~206||824~中等（25-30克）~@5||17||220~207||828~其他植物油~@5||17||221~208||832~较多（gt10杯/天）~@5||17||222~209||860~6-4次~@5||17||223~210||862~3-2次~@5||17||224~211||863~3-2次~@5||17||225~212||857~6-4次~@5||17||226~213||1149~不吃~@5||17||227~214||1150~不吃~@5||17||228~215||867~3-2次~@5||17||229~216||868~3-2次~@5||17||230~217||869~3-2次~@5||17||231~218||870~3-2次~@5||17||232~219||871~3-2次~@5||17||233~220||872~3-2次~@5||17||234~221||873~3-2次~@5||17||235~222||874~3-2次~@5||18||239~223||903~没有~@5||18||240~224||927~30-90分钟~@5||18||241~225||904~没有~@5||18||242~226||928~30-90分钟~@5||18||243~227||909~3天~@5||18||244~228||929~30-90分钟~@5||18||245~229||937~2-5小时~@5||18||246~230||941~有汗~@5||19||247~231||965~大部分时间~@5||19||248~232||947~所有时间~@5||19||249~233||968~有些时候~@5||19||250~234||969~有些时候~@5||19||251~235||961~大部分时间~@5||19||252~236||971~有些时候~@5||19||253~237||959~大部分时间~@5||19||254~238||973~有些时候~@5||19||255~239||974~有些时候~@5||19||256~240||994~几乎没有~</listResult></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	;s ^wgy("test")=params
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s patientIdNo=$TR(request.patientIdNo,$C(0))
		s patientName=$TR(request.patientName,$c(0))
		s pageNo=$TR(request.pageNo,$C(0))
		s regId=$TR(request.regId,$c(0))
		s locId=$TR(request.locId,$c(0))
		s listResult=$TR(request.listResult,$c(0))
				
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:(pageNo'="slefSurvey")&&(regId="") "-4^ID不能为空"
	q:(pageNo'="slefSurvey")&&(locId="") "-6^体检科室不能为空"
	q:listResult="" "-5^没有要保存的问卷内容"
	
	;his预约ID_"^"_登记号_"^"_姓名_"^"_身份证_"^"_出生日期(1999-09-09)_"^"_电话_"^"_年龄_"^"_部门_"^"_性别
	i pageNo="slefSurvey" d
	.s sexId="",dob="",telNo="",occupation="",education="",marriage=""
	e  d
	.s preObj = ##class(User.DHCPENetPreRecord).%OpenId(regId)
	;s regInfo=##class(web.DHCPE.NetPre.GetPreInfo).GetHisInfo(patientRegNo,locId)
	.s patientIdNo=preObj.NPRIDCard
	.s patientName=preObj.NPRName
	.s sexId=preObj.NPRSexDR.CTSEXCode
	.s dob=""
	.s telNo=preObj.NPRTelphoneNo
	.s age=preObj.NPRAge
	.s hisRegId=preObj.NPRPreIADM
	.s status=preObj.NPRStatus
	.s ordSetId=preObj.NPRSetsDR
	.s regExamDate=preObj.NPRPreDate
	.s regType=preObj.NPRPayFlag
	.s detailId=""
	.s cardType="身份证"
	.s occupation=preObj.NPROevaluationDR.QCOccupationDR.CTDesc
	.s education=preObj.NPROevaluationDR.QCEducationDR.CTDesc
	.s marriage=preObj.NPROevaluationDR.QCMaritalDR.CTDesc
	;保存调查问卷
	tstart
	s $ZT="ErrorReg"
	s err=""	
	s data=patientIdNo_"^"_patientName_"^"_$g(sexId)_"^"_dob_"^"_telNo_"^"_occupation_"^"_education_"^"_marriage
	s evaluationId=##class(HS.BL.ExaminationQuestion).SaveExamQuestionResult(data,listResult)
	i evaluationId<=0  s err=evaluationId
	i err'="" trollback
	i err'="" q err
	;预约记录(调查问卷和预约记录关联)
	;登记号^姓名^性别^年龄^身份证号^状态^套餐id^预约的体检日期^调查记录id^缴费标志^体检预约登记ID^体检科室ID^时间段ID^电话^证件类型
	;s data=patientRegNo_"^"_patientName_"^"_$g(sexId)_"^"_age_"^"_patientIdNo_"^"_status_"^"_ordSetId_"^"_regExamDate_"^"_evaluationId_"^"_regType_"^"_hisRegId_"^"_locId_"^"_detailId_"^"_telNo_"^"_cardType
	;s regId=##class(HS.BL.ExaminationRegister).SaveRegister(data)
	;i +regId<=0 trollback
	;i +regId<=0 q regId
	tcommit
	q 0
	
ErrorReg
	s rtn=-100
	trollback
	q:$ze="" rtn
	q rtn_"^"_$ze
]]></Implementation>
</Method>

<Method name="SaveExamQuestionResult">
<Description>
Descript:保存调查问卷及结果(未缴费)
Creater:	ZhangDongmei
CreateDate:	2014-02-13
Table:
Input:身份证号^姓名^性别Id^出生日期^电话^职业^学历^婚姻状况,
主题与内容关联id~结果选项ID~结果值~结果录入值@主题与内容关联i~结果选项ID~结果值~结果录入值
Output:	
Return：DHC_HM_OEvaluationRecord id
d ##class(HS.BL.ExaminationQuestion).SaveExamQuestionResult("530323199009060030^wbg^2^1990-09-06^13233333333^企业职工^本科^未婚","5||16||194~181||647~汉族~@5||16||197~184||673~好~@5||16||198~185||678~差不多~@5||16||199~186||681~糖尿病（医院确诊）~@5||16||199~186||693~其他~ddss@5||16||200~187||1118~无~@5||16||201~188||709~耳鼻喉~@5||16||202~189||730~降糖药~@5||16||203~190||736~粉尘~@5||16||204~191||743~不抽但吸入大量二手烟~@5||16||208~195||758~否~@5||16||215~202||1120~无~@5||17||216~203||813~午餐~@5||17||217~204||818~每周1-3次~@5||17||218~205||822~偏咸（gt11克）~@5||17||219~206||824~中等（25-30克）~@5||17||220~207||828~其他植物油~@5||17||221~208||832~较多（gt10杯/天）~@5||17||222~209||860~6-4次~@5||17||223~210||862~3-2次~@5||17||224~211||863~3-2次~@5||17||225~212||857~6-4次~@5||17||226~213||1149~不吃~@5||17||227~214||1150~不吃~@5||17||228~215||867~3-2次~@5||17||229~216||868~3-2次~@5||17||230~217||869~3-2次~@5||17||231~218||870~3-2次~@5||17||232~219||871~3-2次~@5||17||233~220||872~3-2次~@5||17||234~221||873~3-2次~@5||17||235~222||874~3-2次~@5||18||239~223||903~没有~@5||18||240~224||927~30-90分钟~@5||18||241~225||904~没有~@5||18||242~226||928~30-90分钟~@5||18||243~227||909~3天~@5||18||244~228||929~30-90分钟~@5||18||245~229||937~2-5小时~@5||18||246~230||941~有汗~@5||19||247~231||965~大部分时间~@5||19||248~232||947~所有时间~@5||19||249~233||968~有些时候~@5||19||250~234||969~有些时候~@5||19||251~235||961~大部分时间~@5||19||252~236||971~有些时候~@5||19||253~237||959~大部分时间~@5||19||254~238||973~有些时候~@5||19||255~239||974~有些时候~@5||19||256~240||994~几乎没有~@5||16||214~201||790~哮喘~")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[params:%String,&listResult:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s idNo=$p(params,"^",1)
	s patientName=$p(params,"^",2)
	s sexId=$p(params,"^",3)
	s dob=$p(params,"^",4)
	s telNo=$p(params,"^",5)
	s occupation=$p(params,"^",6)
	s education=$p(params,"^",7)
	s marriage=$p(params,"^",8)
	s delimter="~"
	s rowDel="@"
	tstart
	s $ZT="Error"
	s data="^"_idNo_"^"_patientName_"^"_sexId_"^"_dob_"^"_telNo
	s baseID=..SaveBaseInfo(data)
	i +baseID<=0 trollback  q baseID
	s:marriage["已婚" marriage="已婚"
	s data=baseID_"^"_occupation_"^"_education_"^"_marriage
	s mainID=..SaveValuationRecord(data)
	i +mainID<=0 trollback  q mainID
	;保存调查问卷及结果
	s err=""
	;s obj=##class(HS.Temp.ExaminationRegRequest).%New()
	;s len=obj.listResult.Count()
	;s len=listResult.Count()
	s len=$l(listResult,rowDel)
	f i=1:1:len  q:err'=""  d

	.s strResult=$p(listResult,rowDel,i)
	.s linkID=$p(strResult,delimter,1)
	.s objLink=##class(User.DHCHMCSDLink).%OpenId(linkID)
	.q:objLink=""
	.s detailID=objLink.SDLQuestionsDetailDR.%Id()
	.s subjectID=objLink.SDLParRefGetObjectId()
	.s optionsID=$p(strResult,delimter,2)
	.s result=$p(strResult,delimter,3)
	.s resultNote=$p(strResult,delimter,4)
	.s result=$TR(result,"gt",">")
	.s result=$TR(result,"ge",">=")
	.s result=$TR(result,"lt","<")
	.s result=$TR(result,"le","<=")
	.s questionId=+subjectID    //问卷ID
	.s data=mainID_"^"_questionId
	.s qeqID=..SaveQuestion(data)
	.i +qeqID<=0  d
	..s err=qeqID
	.q:err'=""
	.s data=qeqID_"^"_subjectID_"^"_detailID_"^"_optionsID_"^"_result_"^"_resultNote
	.s resultId=..SaveQuestionResult(data)
	.
	.i +resultId<=0  d
	..s err=resultId
	.q:err'=""
	.
	i err'="" trollback  q err
	tcommit
	q mainID
Error
	s rtn=-100
	trollback
	q:$ze="" rtn
	q rtn_"^"_$ze
]]></Implementation>
</Method>

<Method name="SaveBaseInfo">
<Description>
Descript:保存人员基本信息
Creater:	ZhangDongmei
CreateDate:	2014-02-17
Table:User.DHCHMOBaseInfo
Input:登记号^身份证号^姓名^性别^出生日期^手机号
Output:	
Return：rowid
w ##class(HS.BL.ExaminationQuestion).SaveBaseInfo("^370911190001012639^张强^1^^15689088888")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:params="" "-1^参数不能为空"
	s patNo=$p(params,"^",1)
	s idNo=$p(params,"^",2)
	s patName=$p(params,"^",3)
	s sexId=$p(params,"^",4)
	s birthDate=$p(params,"^",5)
	s:birthDate'="" birthDate=$zdh(birthDate,3)
	s phoneNo=$p(params,"^",6)
	s cardType=..GetIdByCodeDesc("身份证")
	s existId=..CheckBaseInfoExist(idNo,patName)
	i existId'=""  d
	.s objBaseInfo=##class(User.DHCHMOBaseInfo).%OpenId(existId)
	.s objBaseInfo.BITel=phoneNo
	q:existId'="" existId
	;s tmpId=$o(^User.DHCHMOBaseInfoI("BIIDCardIndex",$c(32)_idNo,""))
	;q:tmpId'="" "-111^该身份证号已经被使用，不能再用"
	s objBaseInfo=##class(User.DHCHMOBaseInfo).%New()
	s biCode=+$g(^User.DHCHMOBaseInfoD)
	s biCode=biCode+1  ;+$tr($o(^User.DHCHMOBaseInfoI("BICodeIndex",""),-1),$c(32))+1
	s objBaseInfo.BICode=biCode
	d objBaseInfo.BICSexDRSetObjectId(sexId)
	s objBaseInfo.BIDOB=birthDate
	s objBaseInfo.BIIDCard=idNo
	s objBaseInfo.BIName=patName
	s objBaseInfo.BIMobilePhone=phoneNo
	s sc=objBaseInfo.%Save()
	i $$$ISERR(sc) q $System.Status.GetErrorText(sc)
	q objBaseInfo.%Id()
]]></Implementation>
</Method>

<Method name="GetIdByCodeDesc">
<Description>
Descript:取描述对应的ID
Creater:	ZhangDongmei
CreateDate:	2014-02-17
Table:User.DHCHMCCodeTable
Input:描述
Output:	
Return：rowid
</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>cardDesc:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:cardDesc="" "-1^参数不能为空"
	s exitFlag=0
	s cardTypeId=""
	s type=""
	f  s type=$o(^User.DHCHMCCodeTableI("TypeDescIndex",type)) q:(type="")!(exitFlag=1)  d
	.s desc=""
	.f  s desc=$o(^User.DHCHMCCodeTableI("TypeDescIndex",type,desc)) q:(desc="")!(exitFlag=1)  d
	..i desc[cardDesc  d
	...s exitFlag=1
	...s cardTypeId=$o(^User.DHCHMCCodeTableI("TypeDescIndex",type,desc,0))
	..
	.
	q cardTypeId
]]></Implementation>
</Method>

<Method name="CheckBaseInfoExist">
<Description>
Descript:取身份证对应的证件类型
Creater:	ZhangDongmei
CreateDate:	2014-02-17
Table:User.DHCHMCCodeTable
Input:身份证号，姓名
Output:	
Return：rowid:存在，"":不存在
</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>idNo:%String,name:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:idNo="" "-1^身份证号不能为空"
	;q:name="" "-2^姓名不能为空"
	s exitFlag=0
	s biID=""
	s idNo=$ZCVT(idNo,"U")
	s tmpId=0
	f  s tmpId=$o(^User.DHCHMOBaseInfoI("BIIDCardIndex",$c(32)_idNo,tmpId)) q:(tmpId="")!(exitFlag=1)  d
	.s objBaseInfo=##class(User.DHCHMOBaseInfo).%OpenId(tmpId)
	.;s tmpName=objBaseInfo.BIName
	.;i tmpName=name  d
	.s exitFlag=1
	.s biID=tmpId
	.
	q biID
]]></Implementation>
</Method>

<Method name="SaveValuationRecord">
<Description>
Descript:保存评估记录表
Creater:	ZhangDongmei
CreateDate:	2014-02-17
Table:User.DHCHMOEvaluationRecord
Input:BaseInfo ID^职业^学历^婚姻状况
Output:	
Return：rowid
w ##class(HS.BL.ExaminationQuestion).SaveValuationRecord("3^^^")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:params="" "-1^参数不能为空"
	s baseInfoId=$p(params,"^",1)
	q:baseInfoId="" "-2^基本信息不能为空"
	s occupation=$p(params,"^",2)
	s education=$p(params,"^",3)
	s marriage=$p(params,"^",4)
	s occupationID=..GetIdByCodeDesc(occupation)
	s educationID=..GetIdByCodeDesc(education)
	s marriageID=..GetIdByCodeDesc(marriage)
	;
	s objEvaluation=##class(User.DHCHMOEvaluationRecord).%New()
	s objEvaluation.QAddDate=+$h
	s objEvaluation.QAddTime=$p($h,",",2)
	i educationID'=""  d
	.s objEvaluation.QCEducationDR=##class(User.DHCHMCCodeTable).%OpenId(educationID)
	i marriageID'=""  d
	.s objEvaluation.QCMaritalDR=##class(User.DHCHMCCodeTable).%OpenId(marriageID)
	i occupationID'=""  d
	.s objEvaluation.QCOccupationDR=##class(User.DHCHMCCodeTable).%OpenId(occupationID)
	s objEvaluation.QOBaseInfoDR=##class(User.DHCHMOBaseInfo).%OpenId(baseInfoId)
	;d objEvaluation.QAddUserDRSetObjectId(%session.Get("LOGON.USERID"))
	d objEvaluation.QAddUserDRSetObjectId(1)
	s sc=objEvaluation.%Save()
	i $$$ISERR(sc) q $System.Status.GetErrorText(sc)
	q objEvaluation.%Id()
]]></Implementation>
</Method>

<Method name="SaveQuestion">
<Description>
Descript:保存调查问卷表
Creater:	ZhangDongmei
CreateDate:	2014-02-17
Table:User.DHCHMOQEQuestion
Input:问卷记录ID^问卷ID
Output:	
Return：rowid
</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:params="" "-1^参数不能为空"
	s evaluationID=$p(params,"^",1)
	q:evaluationID="" "-2^评估记录ID不能为空"
	s questionID=$p(params,"^",2)
	q:questionID="" "-3^问卷ID不能为空"
	;
	s findId=$$CheckExist()
	q:findId'="" findId
	s objQuestion=##class(User.DHCHMOQEQuestion).%New()
	s objQuestion.QEQParRef=##class(User.DHCHMOEvaluationRecord).%OpenId(evaluationID)
	s objQuestion.QEQAddDate=+$h
	s objQuestion.QEQAddTime=$p($h,",",2)
	s objQuestion.QEQCQuestionnaireDR=##class(User.DHCHMCQuestionnaire).%OpenId(questionID)
	s objQuestion.QEQESubmitDate=+$h
	s objQuestion.QEQESubmitTime=$p($h,",",2)
	d objQuestion.QEQAddUserDRSetObjectId(1)
	;d objQuestion.QEQAddUserDRSetObjectId(%session.Get("LOGON.USERID"))
	s sc=objQuestion.%Save()
	i $$$ISERR(sc) q $System.Status.GetErrorText(sc)
	q objQuestion.%Id()
CheckExist()
	s existID=""
	s chl=0
	f  s chl=$o(^User.DHCHMOQEQuestionI("QEQCQuestionnaireDRIndex",questionID,evaluationID,chl))  q:(chl="")!(existID'="")  d
	.s tmpId=evaluationID_"||"_chl
	.s myObj=##class(User.DHCHMOQEQuestion).%OpenId(tmpId)
	.s tmpEvaluation=myObj.QEQParRefGetObjectId()
	.i tmpEvaluation=evaluationID d
	..s existID=tmpId
	.
	q existID
]]></Implementation>
</Method>

<Method name="SaveQuestionResult">
<Description>
Descript:保存调查问卷结果表
Creater:	ZhangDongmei
CreateDate:	2014-02-17
Table:User.DHCHMOQResult
Input:主表ID^主题ID^问题ID^选项ID^结果值
Output:	
Return：rowid

w ##class(HS.BL.ExaminationQuestion).SaveQuestionResult("17||12^1||1^2^^^5")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:params="" "-1^参数不能为空"
	s parref=$p(params,"^",1)
	q:parref="" "-2^主表ID不能为空"
	s subjectID=$p(params,"^",2)
	q:subjectID="" "-3^主题ID不能为空"
	s questionID=$p(params,"^",3)
	q:questionID="" "-4^问题ID不能为空"
	s optionID=$p(params,"^",4)
	;q:optionID="" "-5^选项ID不能为空"
	s result=$p(params,"^",5)
	s resultNote=$p(params,"^",6)
	;
	s objResult=##class(User.DHCHMOQResult).%New()
	s objResult.QRParRef=##class(User.DHCHMOQEQuestion).%OpenId(parref)
	s objResult.QRCQuestionsDetailDR=##class(User.DHCHMCQuestionsDetail).%OpenId(questionID)
	s objResult.QRCQDOptionsDR=##class(User.DHCHMCQDOptions).%OpenId(optionID)
	s objResult.QRQuestionSubjectDR=##class(User.DHCHMCQuestionSubject).%OpenId(subjectID)
	s objResult.QRResult=result
	s objResult.QRRemark=resultNote
	s objResult.QRUpdateDate=+$h
	s objResult.QRUpdateTime=$p($h,",",2)
	s sc=objResult.%Save()
	i $$$ISERR(sc) q $System.Status.GetErrorText(sc)
	q objResult.%Id()
]]></Implementation>
</Method>

<Method name="GetUserRegInfo">
<Description><![CDATA[
Descript:根据病人id和科室查找基本信息
Creater:	ZhangDongmei
CreateDate:	2014-04-10
Table:
Input:<Request><patientRegNo>登记号</patientRegNo>
<locId>科室id</locId></Request>
Output:	
Return：<ExamQuestion></ExamQuestion>
w ##class(HS.BL.ExaminationQuestion).GetUserRegInfo("<Request><patientRegNo>40696618</patientRegNo><locId>53</locId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s patientRegNo=$TR(request.patientRegNo,$c(0))
		s locId=$TR(request.locId,$c(0))				
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:patientRegNo="" "-10^登记号不能为空"
	q:locId="" "-11^体检科室不能为空"
	;his预约ID_"^"_登记号_"^"_姓名_"^"_身份证_"^"_出生日期(1999-09-09)_"^"_电话_"^"_年龄_"^"_部门_"^"_性别
	s regInfo=##class(web.DHCPE.NetPre.GetPreInfo).GetHisInfo(patientRegNo,locId)
	s ret=+regInfo
	q:ret<0 regInfo
	s myObj=##class(HS.Temp.UserInfo).%New()
	s myObj.hisRegId=$p(regInfo,"^",1)
	s myObj.patientRegNo=$p(regInfo,"^",2)
	s myObj.userName=$p(regInfo,"^",3)
	s myObj.idCardNo=$p(regInfo,"^",4)
	s myObj.dobDate=$p(regInfo,"^",5)
	s myObj.telephoneNo=$p(regInfo,"^",6)
	s myObj.age=$p(regInfo,"^",7)
	s myObj.department=$p(regInfo,"^",8)
	s myObj.sexDesc=$p(regInfo,"^",9)
	s sc=myObj.XMLExportToString(.XML,"UserInfo")
	i $$$ISERR(sc) q "-12^查找信息失败"
	q XML
]]></Implementation>
</Method>

<Method name="NewPid">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	q $I(^MHCHS("ExamQues"))
]]></Implementation>
</Method>

<Method name="DeleteQuestion">
<Description>
d ##class(HS.BL.ExaminationQuestion).DeleteQuestion("50")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>id</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	set sc = ##class(User.DHCHMOBaseInfo).%DeleteId(id)
]]></Implementation>
</Method>
</Class>


<Class name="HS.BL.ExaminationRegister">
<Super>%RegisteredObject</Super>
<TimeChanged>64812,39272.406964</TimeChanged>
<TimeCreated>63186,59842.731629</TimeCreated>

<Method name="QueryPackagesLevel">
<Description><![CDATA[
Descript:查找套餐类型
Creater:	ZhangDongmei
CreateDate:	2013-12-30
Table:^DHCPEVIPLevel("VIP")
Input:<Request><locId>科室ID</locId></Request>
Output:	
Return：<ExamPackagesLevel></ExamPackagesLevel>
w ##class(HS.BL.ExaminationRegister).QueryPackagesLevel("<Request><locId>370</locId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	q:params="" "-1^参数不能为空"
 	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if reader.Next(.request,.sc){
		s locId=$TR(request.locId,$c(0))
	}else{
		if $$$ISERR(sc) q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
 	s retStr=""
 	s id=0
	f  s id=$o(^DHCPEVIPLevel("VIP",id)) q:id=""  d
	.s use=$p($g(^DHCPEVIPLevel("VIP",id)),"^",4)
	.q:use'="Y"
	.s desc=$p($g(^DHCPEVIPLevel("VIP",id)),"^",2)
	.s myObj=##class(HS.Temp.ExamPackagesLevel).%New()
	.s myObj.levelDesc=desc
	.s myObj.levelId=id
	.s sc=myObj.XMLExportToString(.Xml,"ExamPackagesLevel")
	.i '$$$ISERR(sc)  d
	..s retStr=retStr_Xml
	.
	q retStr
]]></Implementation>
</Method>

<Method name="QueryExaminationLoc">
<Description><![CDATA[
Descript:查找体检中心
Table:CT_Loc
Return：<ExamPackagesLevel></ExamPackagesLevel>
w ##class(HS.BL.ExaminationRegister).QueryExaminationLoc("")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	s retStr=""
 	s id=0
	f  s id=$o(^CTLOC(0,"LocType","E",id)) q:id=""  d
	.s dateActiveFrom=$p(^CTLOC(id),"^",24)
	.s dateActiveTo=$p(^CTLOC(id),"^",25)
	.q:(dateActiveFrom'="")&(dateActiveFrom>+$h)
	.q:(dateActiveTo'="")&(dateActiveTo<$h)
	.s locDesc=$p(^CTLOC(id),"^",2)
	.q:locDesc'["体检"
	.s myObj=##class(HS.Temp.CTLoc).%New()
	.s myObj.locDesc=locDesc
	.s myObj.locId=id
	.s sc=myObj.XMLExportToString(.Xml,"ExaminationLoc")
	.i '$$$ISERR(sc)  d
	..s retStr=retStr_Xml
	.
	q retStr
]]></Implementation>
</Method>

<Method name="GetExaminationLoc">
<Description>
Descript:查找其它一个体检中心
Table:CT_Loc
Input:
Output:	
Return：体检中心id
w ##class(HS.BL.ExaminationRegister).GetExaminationLoc("")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>locId:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	s findId=""
 	s id=0
	f  s id=$o(^CTLOC(0,"LocType","E",id)) q:(id="")!(findId'="")  d
	.s dateActiveFrom=$p(^CTLOC(id),"^",24)
	.s dateActiveTo=$p(^CTLOC(id),"^",25)
	.q:(dateActiveFrom'="")&(dateActiveFrom>+$h)
	.q:(dateActiveTo'="")&(dateActiveTo<$h)
	.s locDesc=$p(^CTLOC(id),"^",2)
	.q:locDesc'["体检"
	.q:(locId'="")&(id=locId)
	.s findId=id
	.
	q findId
]]></Implementation>
</Method>

<Method name="QueryPackagesDetail">
<Description><![CDATA[
Descript:查找套餐明细
Input:<Request><ordSetId>1</ordSetId></Request>
Output:	
Return：<ExaminationPackages></ExaminationPackages>
w ##class(HS.BL.ExaminationRegister).QueryPackagesDetail("<Request><ordSetsId>1</ordSetsId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s ordSetsId=$TR(request.ordSetId,$c(0))
	}else{
		if $$$ISERR(sc) q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:ordSetsId="" "-4^参数不能为空"
	s retStr=""
	s typeSort=""
	f  s typeSort=$o(^User.DHCPENetSetsItemTypeI("SortIndex",typeSort)) q:typeSort=""  d
	.s itemTypeChl=0
 	.f  s itemTypeChl=$o(^User.DHCPENetSetsItemTypeI("SortIndex",typeSort,ordSetsId,itemTypeChl)) q:itemTypeChl=""  d
 	..s seqNo=0
 	..s itemTypeId=ordSetsId_"||"_itemTypeChl
 	..s objItemType=##class(User.DHCPENetSetsItemType).%OpenId(itemTypeId)
 	..s itemTypeDesc=objItemType.NSITItemTypeID.NITDesc
 	..s objOrdSets=##class(User.DHCPENetOrdSets).%OpenId(ordSetsId)
 	..s ordSetsDesc=objOrdSets.NOSDesc
 	..s itemSort=""
 	..f  s itemSort=$o(^User.DHCPENetSetsItemI("SortIndex",itemSort)) q:itemSort=""  d
 	...s itemChl=0
 	...f  s itemChl=$o(^User.DHCPENetSetsItemI("SortIndex",itemSort,ordSetsId,itemTypeChl,itemChl)) q:itemChl=""  d
 	....s itemId=ordSetsId_"||"_itemTypeChl_"||"_itemChl
 	....s objItem=##class(User.DHCPENetSetsItem).%OpenId(itemId)
 	....s itemDesc=objItem.NSIItemDesc
 	....s detailSort=""
 	....f  s detailSort=$o(^User.DHCPENetSetsItemDetailI("SortIndex",detailSort)) q:detailSort=""  d
 	.....s detailChl=0
 	.....f  s detailChl=$o(^User.DHCPENetSetsItemDetailI("SortIndex",detailSort,ordSetsId,itemTypeChl,itemChl,detailChl)) q:detailChl=""  d
 	......s seqNo=seqNo+1
 	......s detailId=ordSetsId_"||"_itemTypeChl_"||"_itemChl_"||"_detailChl
 	......s objDetail=##class(User.DHCPENetSetsItemDetail).%OpenId(detailId)
 	......q:objDetail=""
 	......s myObj=##class(HS.Temp.ExamPackageItem).%New()
 	......s myObj.detailDesc=objDetail.NSIDDesc
 	......s myObj.detailIntent=objDetail.NSIDIntent
 	......s myObj.detailId=detailId
 	......s myObj.detailSeqNo=seqNo
 	......s myObj.itemDesc=itemDesc
 	......s myObj.itemId=itemId
 	......s myObj.ordSetsDesc=ordSetsDesc
 	......s myObj.ordSetsId=ordSetsId
 	......s myObj.ordSetsPrice=objOrdSets.NOSPrice
 	......s myObj.typeDesc=itemTypeDesc
 	......s myObj.typeId=itemTypeId
 	......s myObj.remark=objOrdSets.NOSRemak
 	......s sc=myObj.XMLExportToString(.XML,"ExamPackageItem")
 	......i '$$$ISERR(sc)  d
	.......s retStr=retStr_XML
	......
	.....
	....
	...
	..
	.
	q retStr
]]></Implementation>
</Method>

<Method name="QueryPackages">
<Description><![CDATA[
Descript:查找套餐
Creater:	ZhangDongmei
CreateDate:	2013-12-30
Table:
Input:<Request><levelId>1</levelId><locId>53</locId><startItemId></startItemId><endItemId></endItemId></Request>
Output:	
Return：<ExaminationPackages></ExaminationPackages>
w ##class(HS.BL.ExaminationRegister).QueryPackages("<Request><sex>男</sex><levelId>1</levelId><locId>572</locId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if reader.Next(.request,.sc){
		s levelId=$TR(request.levelId,$c(0))
		s locId=$TR(request.locId,$c(0))
		s startItemId=$TR(request.startItemId,$c(0))
		s endItemId=$TR(request.endItemId,$c(0))
		s sex=$TR(request.sex,$c(0))
		s giFlag=$TR(request.giFlag,$c(0))
	}else{
		if $$$ISERR(sc) q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:locId="" "-5^体检科室不能为空"
	s strXml=""
	i levelId'=""  d
	.s sort=""
	.f  s sort=$o(^User.DHCPENetOrdSetsI("LocVIP",locId,levelId,sort)) q:sort=""  d
	..s ordSetsId=0
	..f  s ordSetsId=$o(^User.DHCPENetOrdSetsI("LocVIP",locId,levelId,sort,ordSetsId)) q:ordSetsId=""  d
	...d GetOrdSets
	.
	e  d
	.s levelId=""
	.f  s levelId=$o(^User.DHCPENetOrdSetsI("LocVIP",locId,levelId)) q:levelId=""  d
	..s sort=""
	..f  s sort=$o(^User.DHCPENetOrdSetsI("LocVIP",locId,levelId,sort)) q:sort=""  d
	...s ordSetsId=0
	...f  s ordSetsId=$o(^User.DHCPENetOrdSetsI("LocVIP",locId,levelId,sort,ordSetsId)) q:ordSetsId=""  d
	....d GetOrdSets
	...
	..
	.
	q strXml
	
GetOrdSets
	s objOrdSets=##class(User.DHCPENetOrdSets).%OpenId(ordSetsId)
	s activeFlag=objOrdSets.NOSActive
	q:activeFlag="N"
	q:(giFlag="I")&(objOrdSets.NOSGIFlag="G")  //个人预约不能选择团体套餐
	s myObj=##class(HS.Temp.ExaminationPackages).%New()
	s myObj.packageAmt=objOrdSets.NOSPrice
	s myObj.packageDesc=objOrdSets.NOSDesc
	s myObj.levelId=levelId
	i levelId'=""  d
	.s myObj.levelDesc=$P($g(^DHCPEVIPLevel("VIP",levelId)),"^",2)
	s myObj.packageId=objOrdSets.NOSHisSetsID
	s myObj.ordSetsId=ordSetsId
	s:objOrdSets.NOSGIFlag="I" myObj.giFlag="个人"
	s sexDesc=objOrdSets.NOSSex
	q:(sex'="")&(sexDesc'=sex)
	s myObj.sexDesc=sexDesc
	s myObj.remark=objOrdSets.NOSRemak
	s ordSetsDesc=objOrdSets.NOSDesc
	i ordSetsDesc["过敏"  d
	.s myObj.ordSetsType="A"
	e  i ordSetsDesc["免疫"  d
	.s myObj.ordSetsType="I"
	e   d
	.s myObj.ordSetsType="N"
	s sc=myObj.XMLExportToString(.XML,"ExaminationPackages")
	i '$$$ISERR(sc)  d
	.s strXml=strXml_XML
	.
	q
]]></Implementation>
</Method>

<Method name="QueryPackagesList">
<Description><![CDATA[
Descript:查找套餐
Creater:	ZhangDongmei
CreateDate:	2013-12-30
Table:
Input:<Request><levelId>1</levelId><locId>53</locId><sex></sex></Request>
Output:	
Return：<ExaminationPackages></ExaminationPackages>
w ##class(HS.BL.ExaminationRegister).QueryPackagesList("<Request></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	s locId=""
	s levelId=""
	s sex=""
	if (params'="") {
		s reader=##class(%XML.Reader).%New()
		s sc=reader.OpenString(params)
		if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
		do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
		if reader.Next(.request,.sc){
			s levelId=$TR(request.levelId,$c(0))
			s locId=$TR(request.locId,$c(0))
			s sexDesc=$TR(request.sexDesc,$c(0))
		}else{
			if $$$ISERR(sc) q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
		}
	}
	s strXml=""
	s pid=..NewPid()
	s sex=""
	s:sexDesc'="" sex=..GetSexIDByDesc(sexDesc)
	i (locId'="")&(levelId'="")  d
	.s sort=""
	.f  s sort=$o(^User.DHCPENetOrdSetsI("LocVIP",locId,levelId,sort)) q:sort=""  d
	..s ordSetsId=0
	..f  s ordSetsId=$o(^User.DHCPENetOrdSetsI("LocVIP",locId,levelId,sort,ordSetsId)) q:ordSetsId=""  d
	...s objOrdSets=##class(User.DHCPENetOrdSets).%OpenId(ordSetsId)
	...q:objOrdSets=""
	...s tmpSex=objOrdSets.NOSSex
	...q:(sex'="")&(tmpSex'=sex)
	...s ^TMPMHC("OrdSets",pid,locId,levelId,tmpSex,ordSetsId)=""
	...s objOrdSets=""
	.
	e  i locId'=""  d
	.s tmpLevel=""
	.f  s tmpLevel=$o(^User.DHCPENetOrdSetsI("LocVIP",locId,tmpLevel)) q:tmpLevel=""  d
	..q:(levelId'="")&(tmpLevel'=levelId)
	..s sort=""
	..f  s sort=$o(^User.DHCPENetOrdSetsI("LocVIP",locId,tmpLevel,sort)) q:sort=""  d
	...s ordSetsId=0
	...f  s ordSetsId=$o(^User.DHCPENetOrdSetsI("LocVIP",locId,tmpLevel,sort,ordSetsId)) q:ordSetsId=""  d
	....s objOrdSets=##class(User.DHCPENetOrdSets).%OpenId(ordSetsId)
	....q:objOrdSets=""
	....s tmpSex=objOrdSets.NOSSex
	....q:(sex'="")&(tmpSex'=sex)
	....s ^TMPMHC("OrdSets",pid,locId,tmpLevel,tmpSex,ordSetsId)=""
	....s objOrdSets=""
	...
	.
	e  d
	.s locId=""
	.f  s locId=$o(^User.DHCPENetOrdSetsI("LocVIP",locId)) q:locId=""  d
	..s tmpLevel=""
	..f  s tmpLevel=$o(^User.DHCPENetOrdSetsI("LocVIP",locId,tmpLevel)) q:tmpLevel=""  d
	...q:(levelId'="")&(tmpLevel'=levelId)
	...s sort=""
	...f  s sort=$o(^User.DHCPENetOrdSetsI("LocVIP",locId,tmpLevel,sort)) q:sort=""  d
	....s ordSetsId=0
	....f  s ordSetsId=$o(^User.DHCPENetOrdSetsI("LocVIP",locId,tmpLevel,sort,ordSetsId)) q:ordSetsId=""  d
	.....s objOrdSets=##class(User.DHCPENetOrdSets).%OpenId(ordSetsId)
	.....q:objOrdSets=""
	.....s tmpSex=objOrdSets.NOSSex
	.....q:(sex'="")&(tmpSex'=sex)
	.....s ^TMPMHC("OrdSets",pid,locId,tmpLevel,tmpSex,ordSetsId)=""
	.....s objOrdSets=""
	...
	..
	.
	s locId=""
	f  s locId=$o(^TMPMHC("OrdSets",pid,locId)) q:locId=""  d
	.s levelId=""
	.f  s levelId=$o(^TMPMHC("OrdSets",pid,locId,levelId)) q:levelId=""  d
	..s sexDesc=""
	..f  s sexDesc=$o(^TMPMHC("OrdSets",pid,locId,levelId,sexDesc)) q:sexDesc=""  d
	...s ordSetsId=""
	...f  s ordSetsId=$o(^TMPMHC("OrdSets",pid,locId,levelId,sexDesc,ordSetsId)) q:ordSetsId=""  d
	....d GetOrdSets
	...
	..
	.
	q strXml
	
GetOrdSets
	s objOrdSets=##class(User.DHCPENetOrdSets).%OpenId(ordSetsId)
	s activeFlag=objOrdSets.NOSActive
	q:activeFlag="N"
	s myObj=##class(HS.Temp.ExaminationPackages).%New()
	s myObj.packageAmt=objOrdSets.NOSPrice
	s myObj.packageDesc=objOrdSets.NOSDesc
	s myObj.levelId=levelId
	i levelId'=""  d
	.s myObj.levelDesc=$P($g(^DHCPEVIPLevel("VIP",levelId)),"^",2)
	s myObj.packageId=objOrdSets.NOSHisSetsID
	s myObj.ordSetsId=ordSetsId
	s:objOrdSets.NOSGIFlag="I" myObj.giFlag="个人"
	s sexDesc=objOrdSets.NOSSex
	s myObj.sexDesc=sexDesc
	s myObj.remark=objOrdSets.NOSRemak
	s ordSetsDesc=objOrdSets.NOSDesc
	i ordSetsDesc["过敏"  d
	.s myObj.ordSetsType="A"
	e  i ordSetsDesc["免疫"  d
	.s myObj.ordSetsType="I"
	e   d
	.s myObj.ordSetsType="N"
	.
	s nosLocId=objOrdSets.NOSLocID
	i nosLocId'=""  d
	.s myObj.locId=nosLocId
	.s myObj.locDesc=$p($g(^CTLOC(nosLocId)),"^",2)
	s sc=myObj.XMLExportToString(.XML,"ExaminationPackages")
	i '$$$ISERR(sc)  d
	.s strXml=strXml_XML
	.
	q
]]></Implementation>
</Method>

<Method name="GetSexIDByDesc">
<Description>
w ##class(HS.BL.ExaminationRegister).GetSexIDByDesc("男")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SexDesc</FormalSpec>
<Implementation><![CDATA[
	q:SexDesc="" ""
	s SexDesc=$TR(SexDesc,$C(0))
	q $O(^CT("SEX",0,"Desc",SexDesc,""))
]]></Implementation>
</Method>

<Method name="GetLocFlag">
<ClassMethod>1</ClassMethod>
<FormalSpec>Type,id,LocID</FormalSpec>
<Implementation><![CDATA[
	Quit:id="" ""
	s flag=1	
	i Type="ITEM" d
	.d ITEM(id)
	e  i Type="ORDSET" d
	.d ORDSET(id)	
	q flag

ITEM(ItemID)
	s:$O(^DHCPEST(+ItemID,"O",$p(ItemID,"||",2),"STORDL",0))="" flag=0
	s STORDLChildsub=0
	f  s STORDLChildsub=$O(^DHCPEST(+ItemID,"O",$p(ItemID,"||",2),"STORDL",STORDLChildsub)) q:(STORDLChildsub="")||(flag=0)  d
	.s STORDLLocDR=$p(^DHCPEST(+ItemID,"O",$p(ItemID,"||",2),"STORDL",STORDLChildsub),"^",1)
	.s:STORDLLocDR=LocID flag=0
	q 
ORDSET(SetID)
	s:'$D(^DHCPEDataEx("DHCPEBaseData","PEARCOS",SetID,"LOC")) flag=0
	s DepLoc=0                                                               
	f  s DepLoc=$o(^DHCPEDataEx("DHCPEBaseData","PEARCOS",SetID,"LOC",DepLoc))  q:(DepLoc="")||(flag=0)  d
	.s:DepLoc=LocID flag=0
	q
]]></Implementation>
</Method>

<Method name="OrdSetsItem">
<Description><![CDATA[
Descript:查找套餐明细
Creater:	ZhangDongmei
CreateDate:	2013-12-31
Table:
Input:套餐id
Output:	
Return：<ExaminationPackages></ExaminationPackages>
w ##class(HS.BL.ExaminationRegister).QueryPackages("")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[OrdSetsID:%String,&objPackage:HS.Temp.ExaminationPackages=""]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	
	s itemIds=""
	s today=+$h
	s dateChildId="0"
	s TItemStat="1"
	s pid=..OrderSetsItem(OrdSetsID,"",0)
	;按顺序取套餐明细
	;^TempDHCPEResultDiagnosisNewOrder(pid,STSort,STID,LocSort,LocID,OrderSort,num)
	/*
	s sortSub=""
	f  s sortSub=$o(^TempDHCPEResultDiagnosisNewOrder(pid,sortSub)) q:sortSub=""  d
	.s i=0
	.f  s i=$o(^TempDHCPEResultDiagnosisNewOrder(pid,sortSub,i)) q:i=""  d
	..s strDataItm=^TempDHCPEResultDiagnosisNewOrder(pid,sortSub,i)
	..s myItemId=$p(strDataItm,"^",1)
	..s myItemStr=^ARCIM($p(myItemId,"||",1),$p(myItemId,"||",2),1)
	..//s itemPrice=##class(web.UDHCJFPRICE).GetOrderPrice("","",myItemId,+$H,"","","","")
	..s itemPrice=##class(web.DHCPE.PreItemList).GetOrderPrice(myItemId)
	..s AccountAmount=+itemPrice
	..s myItemDesc=$p(myItemStr,"^",2)
	..q:myItemDesc["工作站"
	..s myObj=##class(HS.Temp.ExamPackageItem).%New()
	..s myObj.itemDesc=myItemDesc
	..s myObj.itemId=myItemId
	..s myObj.itemPrice=AccountAmount
	..d objPackage.PackageItemList.Insert(myObj)
	..s myObj=""
	.
	*/
	//^TempDHCPEResultDiagnosisNewOrder(pid,STSort,STID,LocSort,LocID,OrderSort,num)
	s stSort=""
	f  s stSort=$o(^TempDHCPEResultDiagnosisNewOrder(pid,stSort)) q:stSort=""  d
	.s stID=0
	.f  s stID=$o(^TempDHCPEResultDiagnosisNewOrder(pid,stSort,stID)) q:stID=""  d
	..s locSort=""
	..f  s locSort=$o(^TempDHCPEResultDiagnosisNewOrder(pid,stSort,stID,locSort)) q:locSort=""  d
	...s locID=0
	...f  s locID=$o(^TempDHCPEResultDiagnosisNewOrder(pid,stSort,stID,locSort,locID)) q:locID=""  d
	....s orderSort=""
	....f  s orderSort=$o(^TempDHCPEResultDiagnosisNewOrder(pid,stSort,stID,locSort,locID,orderSort)) q:orderSort=""  d
	.....s i=0
	.....f  s i=$o(^TempDHCPEResultDiagnosisNewOrder(pid,stSort,stID,locSort,locID,orderSort,i)) q:i=""  d
	......s strDataItm=^TempDHCPEResultDiagnosisNewOrder(pid,stSort,stID,locSort,locID,orderSort,i)
	......s myItemId=$p(strDataItm,"^",1)
	......s myItemStr=^ARCIM($p(myItemId,"||",1),$p(myItemId,"||",2),1)
	......//s itemPrice=##class(web.UDHCJFPRICE).GetOrderPrice("","",myItemId,+$H,"","","","")
	......s itemPrice=##class(web.DHCPE.PreItemList).GetOrderPrice(myItemId)
	......s AccountAmount=+itemPrice
	......s myItemDesc=$p(myItemStr,"^",2)
	......q:myItemDesc["工作站"
	......s myObj=##class(HS.Temp.ExamPackageItem).%New()
	......s myObj.itemDesc=myItemDesc
	......s myObj.itemId=myItemId
	......s myObj.itemPrice=AccountAmount
	......d objPackage.PackageItemList.Insert(myObj)
	......s myObj=""
	.....
	....
	...
	..
	.
	quit
]]></Implementation>
</Method>

<Method name="OrderSetsItem">
<Description>
Descript:套餐明细排序
Creater:	ZhangDongmei
CreateDate:	2014-2-19
Table:
Input:套餐id
Output:	
Return：pid
</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>ordSetsID:%String,pid:%String,num:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s itemIds=""
	s today=+$h
	s dateChildId="0"
	s TItemStat="1"
	i pid=""  d
	.s pid=..NewPid()
	s myItemSetId=ordSetsID
	f  s dateChildId=$o(^ARCOS(ordSetsID,"DATE",dateChildId))  q:dateChildId=""  d
	.s strData=^ARCOS(ordSetsID,"DATE",dateChildId)
	.q:(($p(strData,"^",1)>today)&&($p(strData,"^",2)<today))
	.s itemChildId="0"
	.f  s itemChildId=$o(^ARCOS(ordSetsID,"DATE",dateChildId,"ITM",itemChildId))  q:itemChildId=""  d
	..s strDataItm=$g(^ARCOS(ordSetsID,"DATE",dateChildId,"ITM",itemChildId))
	..s myItemId=$p(strDataItm,"^",1)
	..
	..;根据站点进行排序
	..s STID=$O(^DHCPEST(0,"STORD_ARCIM",myItemId,0))
	..q:STID=""
	..s STSort=$P(^DHCPEST(STID),"^",10)		;站点顺序
	..i STSort="" s STSort="9999"
	..s STOSub=$O(^DHCPEST(0,"STORD_ARCIM",myItemId,STID,0))
	..s OrderSort=$P(^DHCPEST(STID,"O",STOSub),"^",7)  ;体检大项顺序
	..s:OrderSort="" OrderSort="999999999"
	..s LocInfo=$G(^DHCPEStationOrder("Loc",myItemId)) 
	..i LocInfo="" d
	...s LocID="999999999"
	...s LocSort="999999999"
	..e  d
	...s LocID=$P(LocInfo,"^",1)
	...s LocSort=$P($G(^DHCPEST(+LocID,"STLOC",$P(LocID,"||",2))),"^",2)
	...i LocSort="" s LocSort="999999999"
	..s num=num+1
	..s sortSub=STSort_"|"_STID_"|"_LocSort_"|"_LocID_"|"_OrderSort
	..s ^TempDHCPEResultDiagnosisNewOrder(pid,STSort,STID,LocSort,LocID,OrderSort,num)=strDataItm
	.s SetsSub="0"
	.f  s SetsSub=$o(^ARCOS(ordSetsID,"DATE",dateChildId,"OS",SetsSub))  q:SetsSub=""  d
	..s SetsData=$g(^ARCOS(ordSetsID,"DATE",dateChildId,"OS",SetsSub))
	..s SetsID=$p(SetsData,"^",1)
	..do ..OrderSetsItem(SetsID,pid,num)
	..
	.
	q pid
]]></Implementation>
</Method>

<Method name="SaveRegister">
<Description>
Descript:保存体检预约信息
Creater:	ZhangDongmei
CreateDate:	2014-01-02
Table:User.DHCPENetPreRecord，DHC_PE_NetPreItemRecord
Input:登记号^姓名^性别^年龄^身份证号^状态^套餐id^预约的体检日期^调查记录id^缴费标志^体检预约登记ID^体检科室ID^时间段ID^电话^证件类型
Falg:  1 计算限额  0 不计算
Output:	
Return：rowid
w ##class(HS.BL.ExaminationRegister).SaveRegister("0000000054^宗宁^1^26.05753424657534247^370902198910291233^4^489^2015-11-16^^1^167^263^2018||27420^13793831010^I")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String="",Flag="1"</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-101^参数不能为空"
	s patientRegNo=$p(params,"^",1)
	s patientName=$p(params,"^",2)
	s sexId=$p(params,"^",3)
	s age=$p(params,"^",4)
	s idNo=$p(params,"^",5)
	s status=$p(params,"^",6)
	s ordSetId=$p(params,"^",7)
	s regExamDate=$p(params,"^",8)		
	s evaluationId=$p(params,"^",9)	
	s payFlag=+$p(params,"^",10)
	s preIAdmId=$p(params,"^",11)
	s locId=$p(params,"^",12)
	s preTimeId=$p(params,"^",13)
	s telNo=$p(params,"^",14)
	s datePmType=$p(params,"^",15)
	s levelDesc=$p(params,"^",16)
	s cardType=$p(params,"^",17)
	s preWay=$p(params,"^",18)
	q:patientName="" "-4^请准确填写您的姓名"
	q:idNo="" "-5^请准确填写您的身份证号"
	q:regExamDate="" "-6^请选择体检日期"
	s regExamDate=$zdh(regExamDate,3)
	s existId=..GetRegId(idNo)
	q:existId'="" "-7^该身份证已经存在预约记录，请核实身份证号"	
	i cardType=""  d
	.s cardType="身份证"
	s myObj=##class(User.DHCPENetPreRecord).%New()
	s myObj.NPRAge=age
	s myObj.NPRIDCard=idNo
	s myObj.NPRName=patientName
	s myObj.NPRPreDate=regExamDate
	s myObj.NPRRegNo=patientRegNo
	s myObj.NPRPayFlag=payFlag
	i $g(ordSetId)'=""  d
	.s myObj.NPRSetsDR=##class(User.ARCOrdSets).%OpenId(ordSetId)
	i levelDesc="" d
	.s levelId=$G(^DHCPEVIPLevel("VIPapprove"))
	.s levelDesc=$P(^DHCPEVIPLevel("VIP",levelId),"^",2)
	s myObj.NPRLevelDesc=levelDesc
	i $g(sexId)'=""  d
	.d myObj.NPRSexDRSetObjectId(sexId)
	s myObj.NPRStatus=status
	s myObj.NPRUpdateDate=+$h
	s myObj.NPRUpdateTime=$p($h,",",2)
	
	i evaluationId'=""  d
	.s myObj.NPROevaluationDR=##class(User.DHCHMOEvaluationRecord).%OpenId(evaluationId)
	;
	s myObj.NPRPreIADM=preIAdmId
	s myObj.NPRLocID=locId
	i preTimeId'=""  d
	.i datePmType="H"  d
	..s objTimeManger=##class(User.DHCPEPreHomeTimeInfo).%OpenId(preTimeId)
	..q:objTimeManger=""
	..s myObj.NPRPreTime=objTimeManger.PHStartTime
	..s myObj.NPRPreHomeTImeDR = objTimeManger
	.e  d
	..s objTimeManger=##class(User.DHCPEPreTimeManager).%OpenId(preTimeId)
	..q:objTimeManger=""
	..s myObj.NPRPreTime=objTimeManger.PHStartTime
	..s myObj.NPRPreTimeMangerDR=objTimeManger
	
	s myObj.NPRTelphoneNo=telNo
	s myObj.NPRCardType=cardType
	s myObj.NPRDatePmType = datePmType
	s validRet=""
	i Flag="1" d
	.s validRet=..ValidTimeManager(preTimeId,sexId)
	q:(validRet=0)&&(datePmType'="H")&&(Flag="1") "-10^剩余名额已满"
	s myObj.NPRPreWay=preWay
	s sc=myObj.%Save()
	q:$$$ISERR(sc) "-9^预约失败:"_$System.Status.GetErrorText(sc)
	s regId=myObj.%Id()
	q regId
]]></Implementation>
</Method>

<Method name="ValidTimeManager">
<Description>
校验是否满额(非团体) 0:满额   1：有剩余名额   wgy
w ##class(HS.BL.ExaminationRegister).ValidTimeManager("1||1",1)</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>PreTimeId,sexId</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s ret=0
	q:(PreTimeId="")||(sexId="") ret
	s objTimeManger=##class(User.DHCPEPreTimeManager).%OpenId(PreTimeId)
	q:objTimeManger="" ret
	s Num=0
	s regNum=0
	s:sexId="1" Num=objTimeManger.PTMNumMale
	s:sexId="2" Num=objTimeManger.PTMNumFemale
	s startTime=objTimeManger.PTMStartTime
	s endTime=objTimeManger.PTMEndTime
	s objTimeManger=""
	s PreManagerID=$p(PreTimeId,"||",1)
	s objManager=##class(User.DHCPEPreManager).%OpenId(PreManagerID)
	s date=objManager.PMDate
	s locId=objManager.PMLocDR.%Id()
	s levelID=objManager.PMVIPLevel
	s levelDesc=$P(^DHCPEVIPLevel("VIP",levelID),"^",2)
	s dateType=objManager.PMType
	s objManager=""
	s regCount=##class(web.DHCPE.NetPre.GetPreInfo).GetPreNum(date,locId,levelDesc,dateType,startTime,endTime,dateType,"") ;//计算已预约数
    s:sexId="1" regNum = $p(regCount,"-",1)
	s:sexId="2" regNum = $p(regCount,"-",2)
	s:(Num-regNum > 0) ret=1
	q ret
]]></Implementation>
</Method>

<Method name="UpdateRegisterDate">
<Description><![CDATA[
Descript:修改体检预约日期
Creater:	ZhangDongmei
CreateDate:	2014-02-13
Table:User.DHCPENetPreRecord
Input:<ExaminationRegRequest><regId></regId><regExamDate>预约的体检日期</regExamDate>
<detailId>预约排班明细ID</detailId><ordSetId></ordSetId></ExaminationRegRequest>
Output:	
Return：
w ##class(HS.BL.ExaminationRegister).UpdateRegisterDate("<Request><levelDesc>普通</levelDesc><gid></gid><regExamDate>2016-10-21</regExamDate><datePmType>I</datePmType><regId>1</regId><ordSetId>491</ordSetId><detailId>2690||29244</detailId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s ^zdm("QueryExaminationItem")=params
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s regId=$TR(request.regId,$c(0))
		s regExamDate=$TR(request.regExamDate,$c(0))
		s detailId=$TR(request.detailId,$c(0))
		s levelDesc=$TR(request.levelDesc,$c(0))
		s gid=$TR(request.gid,$c(0))
		s ordSetId=$TR(request.ordSetId,$c(0))		
		s datePmType=$TR(request.datePmType,$c(0))	
		s netItemStr=$TR(request.netItemStr,$c(0))
		s patientName=$TR(request.patientName,$c(0))		
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:regId="" "-4^参数不能为空"
	q:regExamDate="" "-6^请选择体检日期"
	s regExamDate=$zdh(regExamDate,3)
	s myObj=##class(User.DHCPENetPreRecord).%OpenId(regId)
	q:myObj="" "-11^记录无效"
	s:(datePmType="O") levelDesc="过期主场"
	s:levelDesc'="" myObj.NPRLevelDesc = levelDesc
	s status=myObj.NPRStatus
	i patientName'="" d
	.s myObj.NPRName=patientName
	e  d
	.s patientName=myObj.NPRName
	s hisRegId=myObj.NPRPreIADM
	q:status=2 "-7^撤销预约，不能修改"
	q:status=3 "-7^过期未在医院预约，不能修改"
	;q:status=4 "-7^已付费，请通过已付费渠道修改日期"
	q:status=5 "-7^已体检，不能修改"
	q:status=6 "-7^取消体检，不能修改"
	s SexNumCode = ""
	s SexNumCode = myObj.NPRSexDR.CTSEXCode
	s sexId=""
	s sexId=myObj.NPRSexDR.%Id()
	s LocIdNum = myObj.NPRLocID
	s TypeNum = myObj.NPRLevelDesc
	s:TypeNum="" TypeNum=$P(^DHCPEVIPLevel("VIP",$G(^DHCPEVIPLevel("VIPapprove"))),"^",2)
	s:(datePmType="O") TypeNum="过期主场"
	;w ##class(HS.BL.ExaminationRegister).GetShengYuNum("63679","普通","M","O","","263")
	s ShengYuNum = ..GetShengYuNum(regExamDate,TypeNum,SexNumCode,datePmType,gid,LocIdNum)
	;s ShengYuNum = ..GetShengYuNum(regExamDate,TypeNum,SexNumCode,datePmType,"",LocIdNum)
	q:ShengYuNum="false" "-999^剩余名额已被占用"
	q:(+ShengYuNum<0) ShengYuNum
	q:ShengYuNum'="true" "-666^验证剩余名额失败"
	TStart
	s $ZT="ErrorUpd"
	s endTime=""
	i (myObj.NPRPreDate'=regExamDate) d
	.s myObj.NPRPreDate=regExamDate

	.;s myObj.NPRPreDateFlag="1"
	s myObj.NPRUpdateDate=+$h
	s myObj.NPRUpdateTime=$p($h,",",2)
	s myObj.NPRDatePmType = datePmType
	i detailId'=""  d
	.if (datePmType="H")  do
	..s objHomeTimemanger=##class(User.DHCPEPreHomeTimeInfo).%OpenId(detailId)
	..q:objHomeTimemanger=""
	..s myObj.NPRPreHomeTImeDR=objHomeTimemanger
	..s endTime=objHomeTimemanger.PHEndTime
	..s myObj.NPRPreTime=objHomeTimemanger.PHEndTime
	.e  do
	..s objTimemanger=##class(User.DHCPEPreTimeManager).%OpenId(detailId)
	..q:objTimemanger=""
	..s myObj.NPRPreTimeMangerDR=objTimemanger
	..s endTime=objTimemanger.PTMEndTime
	..s myObj.NPRPreTime=objTimemanger.PTMEndTime
	
	i ordSetId'=""  d
	.q:status'=0  ;只有状态为0才能修改套餐
	.s myObj.NPRSetsDR=##class(User.ARCOrdSets).%OpenId(ordSetId)
	s vaildRet=..ValidTimeManager(detailId,sexId)
	q:(vaildRet=0)&&(datePmType'="H") "-11^剩余名额已满"
	s sc=myObj.%Save()
	i $$$ISERR(sc) trollback 
	q:$$$ISERR(sc) "-9^修改预约日期失败:"_$System.Status.GetErrorText(sc)
	s myObj=""
	;保存修改记录
	s strParam="<Request><regId>"_regId_"</regId><regExamDate>"_$zd(regExamDate,3)_"</regExamDate><detailId>"_detailId_"</detailId><datePmType>"_datePmType_"</datePmType><levelDesc>"_levelDesc_"</levelDesc></Request>"
	s ret=..AuditRegisterRecord(strParam)
	b ;ret1
	i ret'=0 trollback
	q:ret'=0 "-10^保存修改记录失败:"_ret
	;更新his预约日期
	i hisRegId'=""  d
	.s ret=##class(web.DHCPE.TransAdmInfo).UpdateAdmDate(hisRegId, $zd(regExamDate,4)_"^"_$g(endTime))
	b ;ret2
	i ret'=0 trollback
	q:ret'=0 "-11^更新his体检日期失败"
	
	i ($G(^DHCPESetting("DHCPE","SelfNetItem",LocIdNum))="Y"){
		;更新网上自选项目  netItemStr=医嘱ID~价格#医嘱ID~价格#医嘱ID~价格#     wgy
		s netRet=""
		s:hisRegId'="" netRet=..UpdateNetPreItem(hisRegId,netItemStr,1)
		s:hisRegId="" netRet=..UpdateNoPaidNetPreItem(regId,ordSetId, netItemStr)
		b ;wgy
		i netRet'=""  trollback  q netRet
	}
	
	
	i $tl>0 tcommit
	s str="<Request><patientIdNo></patientIdNo><patientName>"_patientName_"</patientName><regId>"_regId_"</regId></Request>"
	s retStr=..QueryRegRecord(str)
	
	q retStr
ErrorUpd
   s rtn=-100
   trollback
   q:$ze="" rtn
   q rtn_"^"_$ze
]]></Implementation>
</Method>

<Method name="QueryPaidRegRecord">
<Description><![CDATA[
Descript:查找已缴费患者的登记信息
Creater:	ZhangDongmei
CreateDate:	2013-01-02
HS10204
Table:
Input:<Request><patientRegNo>登记号</patientRegNo><locId>体检科室id</locId><peId>体检号</peId></Request>
Output:	
Return：<ExamRegRecord></ExamRegRecord>
w ##class(HS.BL.ExaminationRegister).QueryPaidRegRecord("<Request><patientRegNo>40000890</patientRegNo><locId>572</locId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s ^wgy("QueryPaidRegRecord")=params
 	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s patientRegNo=$TR(request.patientRegNo,$c(0))
		s locId=$TR(request.locId,$c(0))
		s peId=$TR(request.peId,$c(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:patientRegNo="" "-4^参数不能为空"
	q:locId="" "-5^参数不能为空"
	//姓名^性别^年龄^电话^体检号^*登记号*^体检日期^套餐描述^单位^VIP类型描述^部门^总金额^早餐描述^出片描述^特殊项目排队号^套餐ID^体检预约id^团体or个人^GID
	s patientInfo=##class(web.DHCPE.CRM.Gateway).GetPreRecord(patientRegNo,locId,peId)
	q:patientInfo="" ""
	s tempLevelDesc=$p(patientInfo,"^",10)
	s:tempLevelDesc'="" tempLevelDesc=$p(tempLevelDesc,$c(32),1)
	
	s myObj=##class(HS.Temp.ExamRegRecord).%New()
	s myObj.breakfastDesc=$p(patientInfo,"^",13)
	s myObj.companyDesc=$p(patientInfo,"^",9)
	s myObj.departmentDesc=$p(patientInfo,"^",11)
	s myObj.examRegNo=$p(patientInfo,"^",5)
	s myObj.levelDesc=tempLevelDesc
	s myObj.ordSetDesc=$p(patientInfo,"^",8)
	s myObj.ordSetId=$p(patientInfo,"^",16)
	s myObj.patientAge=$p(patientInfo,"^",3)
	s myObj.patientName=$p(patientInfo,"^",1)
	s myObj.patientRegNo=patientRegNo
	s myObj.phoneNo=$p(patientInfo,"^",4)
	s myObj.regExamDate=$p(patientInfo,"^",7)
	s myObj.reportDesc=$p(patientInfo,"^",14)
	s myObj.sexDesc=$p(patientInfo,"^",2)
	s myObj.totalAmount=$p(patientInfo,"^",12)
	s myObj.specialSeqNo=$p(patientInfo,"^",15)
	s myObj.regId=$p(patientInfo,"^",17)
	
	s pmType=$p(patientInfo,"^",18)
	s GAdmID=$p(patientInfo,"^",19)
	i GAdmID'="" d
	.s:$D(^User.DHCPEPreHomeInfoI("PGADMDrIndex",GAdmID)) pmType="H"
	s myObj.pmType=pmType
	s myObj.gid = GAdmID
	s myObj.locId = locId
	
	s PapmiRowId = ""
	s IdCard = ""
	s PhoneNo = ""
	s PapmiRowId = $o(^DHCPEPreIBI(0,"PAPMINo",patientRegNo,PapmiRowId))
	i PapmiRowId'=""  do 
	.s IdCard=$p(^DHCPEPreIBI(PapmiRowId),"^",9)
	.s PhoneNo = $p(^DHCPEPreIBI(PapmiRowId),"^",8)
	s myObj.idCard = IdCard
	s myObj.phoneNo = PhoneNo
	
	s sc=myObj.XMLExportToString(.XML,"ExamRegRecord")
	q XML
]]></Implementation>
</Method>

<Method name="QueryPaidRegRecordByPeId">
<Description><![CDATA[
Descript:根据体检编号查询病人基本信息
Creater:	zn
CreateDate:	2014-11-22
666666
Table:
Input:<Request><peId>登记号</peId></Request>
Output:	
Return：<ExamRegRecord></ExamRegRecord>
w ##class(HS.BL.ExaminationRegister).QueryPaidRegRecordByPeId("<Request><idCard>110102198308291167</idCard><peId>wpaajp2569</peId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s idCard = $TR(request.idCard,$c(0))	
		s peId=$TR(request.peId,$c(0))		
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:(peId="")||(idCard="") "-4^参数不能为空"
	s peId=$$ALPHAUP^SSUTIL4(peId)
	s idCard=$$ALPHAUP^SSUTIL4(idCard)
	s idLen = $length(idCard)
	i idLen = "15" do
	.s idCard = ##class(web.DHCPE.ImportGInfo).ID15to18(idCard)
	s PreIadm = ""
	s PreIadm = $o(^DHCPEPreIADM(0,"HPNo",peId,PreIadm))
	i PreIadm="" q "-5^体检号不存在"
	
	s EndDate=99999999
	s PreGADM=$P(^DHCPEPreIADM(PreIadm),"^",2)
	i PreGADM'="" d
	.s StartDate=$P(^DHCPEPreGADM(PreGADM),"^",2)
	.;q:StartDate<$ZDH("2017-02-04",3)
	.s EndDate=$P(^DHCPEPreGADM(PreGADM),"^",3)
	q:(EndDate>64342)&&(EndDate<+$H) "-8^已经过了团体预约日期"
	
	s PiadmDr = $p(^DHCPEPreIADM(PreIadm),"^",1)
	s locId = $p(^DHCPEPreIADM(PreIadm),"^",26)
	s paNo = $p(^DHCPEPreIBI(PiadmDr),"^",1)
	s idCardNo = $p(^DHCPEPreIBI(PiadmDr),"^",9)
	s idCardNo=$$ALPHAUP^SSUTIL4(idCardNo)
	s idCardNo=$replace(idCardNo,"　","")
	s idCardNoLen = $length(idCardNo)
	i idCardNoLen = "15" do
	.s idCardNo = ##class(web.DHCPE.ImportGInfo).ID15to18(idCardNo)
	q:idCard'=idCardNo "-6^体检号与身份证号不匹配"
	s input = "<Request><patientRegNo>"_paNo_"</patientRegNo><locId>"_locId_"</locId><peId>"_peId_"</peId></Request>"
	b ;input
	s xml = ..QueryPaidRegRecord(input)
	q:xml="" "-7^错误！请确认体检信息或体检状态。" 
	q xml
]]></Implementation>
</Method>

<Method name="QueryPumchCardIdRPeId">
<Description><![CDATA[
Descript:根据姓名、工号与医院查询员工的身份证号与体检号
666666
Table:
Input:<Request><patientName>姓名</patientName><empNo>工号</empNo><locId>院区</locId></Request>
Output:	
Return：<ExamRegRecord></ExamRegRecord>
w ##class(HS.BL.ExaminationRegister).QueryPumchCardIdRPeId("<Request><patientName>刘士勤</patientName><empNo>05540</empNo><locId>53</locId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s patientName = $TR(request.patientName,$c(0))
		s empNo=$TR(request.empNo,$c(0))		
		s locId = $TR(request.locId,$c(0))	
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:(patientName="")||(empNo="")||(locId="") "-4^参数不能为空"
	;s patientName=$$ALPHAUP^SSUTIL4(patientName)
	s Result = ##class(web.DHCPE.NetPre.GetPreInfo).GetHPNo(locId,empNo,patientName)
	s ResultNo = $p(Result,"^",1)
	q:(ResultNo'="0") Result
	s IdCard = $p(Result,"^",2)
	s PeId = $p(Result,"^",3)
	s xml = "<ExamRegRecord><idCard>"_IdCard_"</idCard><peId>"_PeId_"</peId></ExamRegRecord>" 
	q xml
]]></Implementation>
</Method>

<Method name="QueryRegRecord">
<Description><![CDATA[
Descript:查找网上预约登记记录
Input:<Request><patientIdNo>身份证号</patientIdNo><patientName>姓名</patientName><regId>预约id</regId><payFlag>缴费标志</payFlag><status>状态</status></Request>
Output:	
Return：<ExamRegRecord></ExamRegRecord>
w ##class(HS.BL.ExaminationRegister).QueryRegRecord("<Request><peId>PAAAR002581</peId><patientIdNo>530323199009060030</patientIdNo><payFlag>1</payFlag></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s patientIdNo=$TR(request.patientIdNo,$c(0))
		s regId=$TR(request.regId,$c(0))
		s payFlag=$TR(request.payFlag,$c(0))
		s status=$TR(request.status,$c(0))		
		s peId=$TR(request.peId,$c(0))
		s gid=$TR(request.gid,$c(0))
		s preWay=$TR(request.preWay,$c(0))		
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:(patientIdNo="")&(regId="") "-4^参数不能为空"
	s xmlStr=""
	
	
	i peId'=""  do
	.s PreIADMID = ""
	.s PreIADMID = $o(^DHCPEPreIADM(0,"HPNo",peId,PreIADMID))
	.i PreIADMID '= ""  do
	..s PreIADMID=" "_PreIADMID
	..s regId = $o(^User.DHCPENetPreRecordI("NPRPreIADMIndex",PreIADMID,regId))
	
	
	;add by wgy
	i (gid'="")&&(patientIdNo'="") d
	.s regNo=##class(web.DHCPE.PreIBaseInfo).GetRegNoByIDCard(patientIdNo)
	.q:regNo=""
	.s baseInfoId=$O(^DHCPEPreIBI(0,"PAPMINo",regNo,0))
	.s PreIADMID=""
	.s lastPreID=""
	.f  s PreIADMID=$O(^DHCPEPreIADM(0,"PIBI",baseInfoId,PreIADMID)) q:(PreIADMID="")||(lastPreID'="")  d
	..s preStatus=$P(^DHCPEPreIADM(PreIADMID),"^",8)
	..q:preStatus="CANCELPE" 
	..s preGid=$P(^DHCPEPreIADM(PreIADMID),"^",2)
	..q:preGid'=gid
	..s lastPreID=" "_PreIADMID
	
	.s:lastPreID'="" regId = $o(^User.DHCPENetPreRecordI("NPRPreIADMIndex",lastPreID,""))
	i regId'=""  d
	.s xmlStr=..GetRegRecord(regId,peId,preWay)

	q:(regId'="")||(gid'="") xmlStr
	q:patientIdNo="" "-5^身份证号不能为空"
	s regId=""
	f  s regId=$o(^User.DHCPENetPreRecordI("IDCardIndex", $zcvt(patientIdNo,"U"),regId)) q:(regId="")  d
	.s objRecord=##class(User.DHCPENetPreRecord).%OpenId(regId)
	.q:(payFlag'="")&(objRecord.NPRPayFlag'=payFlag)
	.q:(status'="")&(objRecord.NPRStatus'=status)
	.s XML=..GetRegRecord(regId,peId,preWay)
	.i XML'=""  d
	..s xmlStr=xmlStr_XML
	.
	q xmlStr
]]></Implementation>
</Method>

<Method name="CheckIfAppointed">
<Description><![CDATA[
Descript:判断某个人是否已经存在预约记录
Creater:	ZhangDongmei
CreateDate:	2013-02-27
Table:
Input:<Request><patientIdNo>身份证号</patientIdNo><patientName>姓名</patientName><locId>预约科室id</locId></Request>
Output:	
Return：0:没预约，1：可去预约历史修改，2：前台登记过预约，网站不能做任何操作，3：已缴费预约
w ##class(HS.BL.ExaminationRegister).CheckIfAppointed("<Request><patientRegNo>0000000054</patientRegNo><patientIdNo>370902198910291233</patientIdNo><locId>263</locId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s patientIdNo=$TR(request.patientIdNo,$c(0))
		s locId=$TR(request.locId,$c(0))	
		s patientRegNo=$TR(request.patientRegNo,$c(0))	
		s peId=$TR(request.peId,$c(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:patientIdNo="" "-4^身份证号不能为空"
	q:locId="" "-5^体检科室不能为空"
	s appFlag="0^尚未预约"
	s patientIdNo = $$ALPHAUP^SSUTIL4(patientIdNo)
	i peId'=""  do
	.s peId = $$ALPHAUP^SSUTIL4(peId)
	;标准版
	s ret=##class(web.DHCPE.NetPre.GetPreInfo).GetHisPreInfo(patientIdNo,locId,patientRegNo,peId)
	;s ret=##class(web.DHCPE.NetPre.GetPreInfo).GetHisPreInfo(patientIdNo,locId,patientRegNo,peId,gid)
	
	s status=..GetNetPreStatus(patientIdNo,locId,peId)
	b ;123
	i status'=-1  d
	.s appFlag="1^已经存在预约记录，可去预约历史修改"
	i (status=-1)&(ret=1)  d     
	.s appFlag="2^没经过网站预约，前台登记过预约且未缴费，不能再网上操作"
	i (status=-1)&(ret=2)  d
	.s appFlag="3^没经过网站预约，前台登记过预约且已缴费，可进行已缴费预约"
	;
	q appFlag
]]></Implementation>
</Method>

<Method name="GetNetPreStatus">
<Description>
Descript:取网站有效预约记录的状态
Creater:	ZhangDongmei
CreateDate:	2014-04-10
Table:
Input:身份证号
Output:	
Return：预约记录状态0：网上预约 1：医院已预约 2：撤销预约 3：过期未在医院预约 
4:his已付费 5:his已体检，6：取消体检，-1：没记录
w ##class(HS.BL.ExaminationRegister).GetNetPreStatus("370902198910291233","263","")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>patientIdNo:%String,locId:%String,PeId,Gid=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:patientIdNo="" "-4^身份证号不能为空"
	q:locId="" "-5^体检科室不能为空"
	s appFlag=-1
	;团体预约状态   add by wgy
	s gFlag=""

	i Gid'="" d
	.s gFlag=1
	.s regId=""
	.s exitFlag=0
	.f  s regId=$o(^User.DHCPENetPreRecordI("IDCardIndex", $zcvt(patientIdNo,"U"),regId)) q:(regId="")!(exitFlag=1)  d
	..s objRecord=##class(User.DHCPENetPreRecord).%OpenId(regId)
	..s status=objRecord.NPRStatus
	..s regLocId=objRecord.NPRLocID
	..s PreID=objRecord.NPRPreIADM
	..s preType=objRecord.NPRDatePmType
	..q:(locId'="")&(regLocId'=locId)
	..q:(status=2)!(status=3)!(status=5)!(status=6)
	..q:preType'="G"
	..q:PreID=""
	..s preGid=$p(^DHCPEPreIADM(PreID),"^",2)
	..q:Gid'=preGid
	..s exitFlag=1
	..s appFlag=status
	q:gFlag=1 appFlag
	;end
	
	
	if PeId=""  do
	.s exitFlag=0
	.s regId=""
	.f  s regId=$o(^User.DHCPENetPreRecordI("IDCardIndex", $zcvt(patientIdNo,"U"),regId)) q:(regId="")!(exitFlag=1)  d
	..s objRecord=##class(User.DHCPENetPreRecord).%OpenId(regId)
	..s status=objRecord.NPRStatus
	..s regLocId=objRecord.NPRLocID
	..q:(locId'="")&(regLocId'=locId)
	..q:(status=2)!(status=3)!(status=5)!(status=6)
	..s exitFlag=1
	..s appFlag=status
	e  do
	.s exitFlag=0
	.s regId=""
	.s PreID=""
	.s PreID=$O(^DHCPEPreIADM(0,"HPNo",PeId,PreID))
	.s PreID=" "_PreID
	.f  s regId=$o(^User.DHCPENetPreRecordI("NPRPreIADMIndex",PreID,regId)) q:(regId="")!(exitFlag=1)  d
	..s objRecord=##class(User.DHCPENetPreRecord).%OpenId(regId)
	..s status=objRecord.NPRStatus
	..s regLocId=objRecord.NPRLocID
	..q:(locId'="")&(regLocId'=locId)
	..q:(status=2)!(status=3)!(status=5)!(status=6)
	..s exitFlag=1
	..s appFlag=status
	
	q appFlag
]]></Implementation>
</Method>

<Method name="GetRegRecord">
<Description><![CDATA[
Descript:查找网上预约登记记录
Creater:	ZhangDongmei
CreateDate:	2013-02-19
Table:
Input:预约ID
Output:	
Return：<ExamRegRecord></ExamRegRecord>
w ##class(HS.BL.ExaminationRegister).GetRegRecord(2,"PTAAAD0007")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>regId:%String,peId,preWay</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	;s ^wgy=regId_"^"_peId
	q:(regId="") "-4^参数不能为空"
	//q:patientName="" "-5^姓名不能为空"
	s xmlStr=""
	s objRecord=##class(User.DHCPENetPreRecord).%OpenId(regId)
	q:objRecord="" ""
	s curPreWay=objRecord.NPRPreWay
	q:(preWay'="")&&(preWay'=curPreWay)
	s regNo = objRecord.NPRRegNo
	s locId = objRecord.NPRLocID
	s patientIdNo=objRecord.NPRIDCard
	s pmType="",gid="",patientInfo="",tempLevelDesc=""
	i (regNo'="")&&(locId'="")&&(patientIdNo="")  do
	.s patientInfo=##class(web.DHCPE.CRM.Gateway).GetPreRecord(regNo,locId)
	.i patientInfo'="" d
	..s pmType=$p(patientInfo,"^",18)
	..s gid = $p(patientInfo,"^",19)
	..s tempLevelDesc=$p(patientInfo,"^",10)
	..s:tempLevelDesc'="" tempLevelDesc=$p(tempLevelDesc,$c(32),1)
	s myObj=##class(HS.Temp.ExamRegRecord).%New()
	b
	i objRecord.NPRSetsDR  d
	.s myObj.ordSetDesc=objRecord.NPRSetsDR.ARCOSDesc
	.s myObj.ordSetId=objRecord.NPRSetsDR.%Id()
	s myObj.levelDesc=objRecord.NPRLevelDesc
	
	i myObj.levelDesc="" d
	.s myObj.levelDesc=tempLevelDesc
	s myObj.patientAge=objRecord.NPRAge
	s myObj.patientIdNo=objRecord.NPRIDCard
	s myObj.patientName=objRecord.NPRName
	s myObj.patientRegNo=objRecord.NPRRegNo
	s regExamDate=objRecord.NPRPreDate
	s myObj.regExamDate=$zd(regExamDate,3)
	;至少提前两天才能修改预约记录
	s curDate=+$h
	if regExamDate-curDate<2 do
	.s myObj.canModifyFlag="N"
	else  do
	.s myObj.canModifyFlag="Y"
	
	i objRecord.NPRSexDR d
	.s myObj.sexDesc=objRecord.NPRSexDR.CTSEXDesc
	s myObj.regId=regId
	s myObj.payFlag=objRecord.NPRPayFlag
	s myObj.status=objRecord.NPRStatus
	s preAdmId=objRecord.NPRPreIADM
	i preAdmId'=""  d
	.s myObj.peId=$P(^DHCPEPreIADM(preAdmId),"^",27)
	.s PEADMID=$o(^DHCPEIADM(0,"CRMADM",preAdmId,0))   //DHC_PE_IADM
	.i PEADMID'=""  d
	..s myObj.admId=$p(^DHCPEIADM(PEADMID),"^",1)
	.
	q:(peId'="")&&(myObj.peId'=peId) ""
	s myObj.preIADM=preAdmId
	i objRecord.NPRLocID'=""  d
	.s myObj.locId=objRecord.NPRLocID
	.s objLoc=##class(User.CTLoc).%OpenId(objRecord.NPRLocID)
	.s locDesc=objLoc.CTLOCDesc
	.i locDesc["-" s locDesc=$p(locDesc,"-",2)
	.s myObj.locDesc=locDesc
	.
	i objRecord.NPRPreTimeMangerDR  d
	.s startTime=objRecord.NPRPreTimeMangerDR.PTMStartTime
	.s:startTime'="" startTime=$zt(startTime,2)
	.s endTime=objRecord.NPRPreTimeMangerDR.PTMEndTime
	.s:endTime'="" endTime=$zt(endTime,2)
	.s myObj.regExamTime=startTime_"-"_endTime
	i objRecord.NPRPreHomeTImeDR  do
	.s startTime=objRecord.NPRPreHomeTImeDR.PHStartTime
	.s:startTime'="" startTime=$zt(startTime,2)
	.s endTime=objRecord.NPRPreHomeTImeDR.PHEndTime
	.s:endTime'="" endTime=$zt(endTime,2)
	.s myObj.regExamTime=startTime_"-"_endTime
	s myObj.pmType = objRecord.NPRDatePmType
	s myObj.gid = gid
	s myObj.preWay=objRecord.NPRPreWay
	;s myObj.preDateFlag=objRecord.NPRPreDateFlag
	s myObj.phoneNo=objRecord.NPRTelphoneNo
	s sc=myObj.XMLExportToString(.XML,"ExamRegRecord")
	q:$$$ISERR(sc) ""
	q XML
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// 根据身份证号查找网上预约id（未执行体检）^User.DHCPENetPreRecordI("IDCardIndex", $zcvt("11010419770905251x","U"))

]]></Content>
</UDLText>

<Method name="GetRegId">
<Description>
w ##class(HS.BL.ExaminationRegister).GetRegId("370902198910291233","")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>idNo:%String,name:%String="",Gid=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s existId=""
	
	;团体预约  add by wgy
	s gFlag=""

	i Gid'="" d
	.s gFlag=1
	.s regId=""
	.s exitFlag=0
	.f  s regId=$o(^User.DHCPENetPreRecordI("IDCardIndex", $zcvt(patientIdNo,"U"),regId)) q:(regId="")!(exitFlag=1)  d
	..s objRecord=##class(User.DHCPENetPreRecord).%OpenId(regId)
	..s status=objRecord.NPRStatus
	..s regLocId=objRecord.NPRLocID
	..s PreID=objRecord.NPRPreIADM
	..s preType=objRecord.NPRDatePmType
	..q:(locId'="")&(regLocId'=locId)
	..q:(status=2)!(status=3)!(status=5)!(status=6)
	..q:preType'="G"
	..q:PreID=""
	..s preGid=$p(^DHCPEPreIADM(PreID),"^",2)
	..q:Gid'=preGid
	..s exitFlag=1
	..s existId=regId
	q:gFlag=1 existId
	;end
	
	s tmpRegId=""
	f  s tmpRegId=$o(^User.DHCPENetPreRecordI("IDCardIndex", $zcvt(idNo,"U"),tmpRegId)) q:(tmpRegId="")!(existId'="")  d
	.s objRegRecord=##class(User.DHCPENetPreRecord).%OpenId(tmpRegId)
	.s tmpStatus=objRegRecord.NPRStatus
	.s tmpName=objRegRecord.NPRName
	.;q:tmpStatus'=0
	.q:(tmpStatus=2)||(tmpStatus=5)||(tmpStatus=3)||(tmpStatus=6)
	.//q:(name'="")&(tmpName'=name)
	.s existId=tmpRegId
	.
	q existId
]]></Implementation>
</Method>

<Method name="GetRegIdByRegNo">
<Description>
根据登记号查找网上预约id（未执行体检）^User.DHCPENetPreRecordI("RegNoIndex", $zcvt("11010419770905251x","U"))
w ##class(HS.BL.ExaminationRegister).GetRegIdByRegNo("370902198910291233")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>RegNo:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s existId=""
	s tmpRegId=""
	f  s tmpRegId=$o(^User.DHCPENetPreRecordI("RegNoIndex", $zcvt(RegNo,"U"),tmpRegId)) q:(tmpRegId="")!(existId'="")  d
	.s objRegRecord=##class(User.DHCPENetPreRecord).%OpenId(tmpRegId)
	.s tmpStatus=objRegRecord.NPRStatus
	.q:(tmpStatus=2)||(tmpStatus=5)||(tmpStatus=3)||(tmpStatus=6)
	.s existId=tmpRegId
	q existId
]]></Implementation>
</Method>

<Method name="QueryAvailRegCount">
<Description><![CDATA[
Descript:查找某一段时间内每天的可预约数
Creater:	ZhangDongmei
CreateDate:	2013-01-02
Table:
Input:<Request><startExamDate>开始日期</startExamDate><endExamDate>截止日期</endExamDate>
<locId>体检科室id</locId><levelDesc>套餐类型描述</levelDesc><pmType>预约类型：1</pmType><gid>团体ID：1</gid></Request>
Output:	
Return：<ExamRegRecord></ExamRegRecord>
w ##class(HS.BL.ExaminationRegister).QueryAvailRegCount("<Request><sex>男</sex><startExamDate>2018-06-13</startExamDate><pmType>I</pmType><levelDesc>普通</levelDesc><endExamDate>2018-06-15</endExamDate><locId>370</locId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s startDate=$TR(request.startExamDate,$c(0))
		s endDate=$TR(request.endExamDate,$c(0))
		s locId=$TR(request.locId,$c(0))
		s levelDesc	=$TR(request.levelDesc,$c(0))
		s pmType=$TR(request.pmType,$c(0))
		s sex=$TR(request.sex,$c(0))
		s gid=$TR(request.gid,$c(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:(startDate="")||(endDate="")||(locId="")||(sex="") "-4^参数不能为空"
	s levelId=##class(web.DHCPE.VIPLevel).GetVIPIDByDesc(levelDesc)
	s:levelId="" levelId=$G(^DHCPEVIPLevel("VIPapprove"))
	q:levelId="" "-51^VIP等级不能为空"
	s levelDesc=$P(^DHCPEVIPLevel("VIP",levelId),"^",2)
	q:pmType="" "-52^预约类型不能为空"
	s retStr=""
	s pmType=$$ALPHAUP^SSUTIL4(pmType)
	i locId'="" s locDesc=$p(^CTLOC(locId),"^",2)
	s endDate=$zdh(endDate,3)
	s startDate=$zdh(startDate,3)
	
	
	f date=startDate:1:endDate  d
	.s myObj=##class(HS.Temp.ExamAvailDate).%New()
	.s myObj.examDate=$zd(date,3)
	.s myObj.examLocId=locId
	.s myObj.examLocDesc=$g(locDesc)
	.s id=0
	.s totalCount=0
	.s totalRegCount=0
	.s strPreManagerID=""
	.i pmType="O"  do
	..s levelId=4
	.f  s id=$o(^User.DHCPEPreManagerI("LocDateIndex",locId,date,levelId,pmType,id)) q:id=""  d
	..s objManager=##class(User.DHCPEPreManager).%OpenId(id)
	..;s level=objManager.PMVIPLevel
	..;q:(levelId'="")&(level'=levelId)
	..;s type=objManager.PMType
	..;q:(pmType'="")&(type'=pmType)
	
		
	..s MaleNum = objManager.PMNumMale
	..s FemaleNum = objManager.PMNumFemale
	..s Num=""
	..i sex="M" s Num=objManager.PMNumMale
	..i sex="F" s Num=objManager.PMNumFemale
	
	..i Num=""  s Num=objManager.PMNum
	
	..;i objManager.PMNum=""  d
	..i Num=""  d
	...s totalCount=totalCount+0
	..e  d
	...;s totalCount=totalCount+objManager.PMNum
	...s totalCount=totalCount+Num
	
	..i strPreManagerID=""  d
	...s strPreManagerID=id
	..e  d
	...s strPreManagerID=strPreManagerID_","_id
	
	..s regCount=##class(web.DHCPE.NetPre.GetPreInfo).GetPreNum(date,locId,$g(levelDesc),pmType,"","",pmType,"") ;//计算已预约数
	..s regMaleNum = $p(regCount,"-",1)
	..s regFemaleNum = $p(regCount,"-",2)
	..i sex="M"  s totalRegCount=totalRegCount+regMaleNum
	..i sex="F"  s totalRegCount=totalRegCount+regFemaleNum
	
	
	
	.s availCount=totalCount-totalRegCount
	.i totalCount=0  d
	..s myObj.status="不可约"
	.e  d
	..i availCount<=0  d
	...s myObj.status="已约满"
	..e  d
	...s myObj.status="可预约"
	.s advanceRegDate=0 //提前预约天数
	.s:$G(^DHCPESetting("DHCPE","AdvRegDate",locId)) advanceRegDate=^DHCPESetting("DHCPE","AdvRegDate",locId)
	.i date<((+$h)+advanceRegDate)  d
	..s availCount=0  
	..s myObj.status="已过期"
	.
	.s tommorow=+$h+1
	.s curTime=$p($h,",",2)
	.;i (date=tommorow)&(curTime>$zth("15:00:00",3))  d
	.;.s availCount=0  //3点以后不能约第二天的
	.;.s myObj.status="已过期"
	
	.s vipDay=..GetFuthureThreeDay()
	.s firDay=$p(vipDay,"^",1)
	.s secDay=$p(vipDay,"^",2)
	.s thrDay=$p(vipDay,"^",3)
	
	.i (date=firDay)||(date=secDay)||(date=thrDay)  d
	..s availCount=0
	..s myObj.status="不可约"
	
	.;过期主场：当前日期大于主场日期后才可以预约
	.;i pmType="O" d
	.;.s lastHomeID=##class(web.DHCPE.PreHome).GetLastHomeIDByGADM(gid)
	.;.s lastHomeDate=$lg(^User.DHCPEPreHomeInfoD(lastHomeID),10)
	.;.i (+$h<=lastHomeDate)&&(date>lastHomeDate) d
	.;..s availCount=0
	.;..s myObj.status="不可约"
	.i gid'="" d
	..s GEndDate=$P(^DHCPEPreGADM(gid),"^",3)
	..i (GEndDate'="")&&(date>GEndDate) d
	...q:(GEndDate<64343) //2017-03-01之前的不做限制
	...s availCount=0
	...s myObj.status="不可约"
	
	
	.s myObj.availRegCount=availCount
	.s myObj.totalCount=totalCount
	.s myObj.regCount=totalRegCount
	.s myObj.strID=strPreManagerID
	.i pmType="I"  do
	..s myObj.datePmType="I"
	.i pmType="G"  do
	..s myObj.datePmType="G"
	.i pmType="O"  do
	..s myObj.datePmType="O"
	
	.;s myObj.otherLocId=..GetExaminationLoc(locId)
	.s sc=myObj.XMLExportToString(.XML,"ExamAvailDate")
	.i '$$$ISERR(sc)  d
	..s retStr=retStr_XML
	
	
	q retStr
]]></Implementation>
</Method>

<Method name="GetFuthureThreeDay">
<Description>
w ##class(HS.BL.ExaminationRegister).GetFuthureThreeDay()</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>beginDate:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s:(beginDate="") beginDate=+$h
	s firDay=beginDate+1
	s endDay=beginDate+100
	s firDayFlag=""
	s secDayFlag=""
	s thirdDayFlag=""
	
	s firDayFlag1="1"
	s secDayFlag1="1"
	s thirdDayFlag1="1"
	
	s manaId=""
	f date=firDay:1:endDay q:(firDayFlag'="")&&(secDayFlag'="")&&(thirdDayFlag'="")  d
	.s manaId=$o(^User.DHCPEPreManagerI("LocDateIndex","231",date,"2","I",manaId))
	.q:(manaId="")
	.s:(firDayFlag'="") firDayFlag1="2"
	.s:(secDayFlag'="") secDayFlag1="2"
	.s manaObj=##class(User.DHCPEPreManager).%OpenId(manaId)
	.s manaMaleNum = manaObj.PMNumMale
	.s manaFemaleNum = manaObj.PMNumFemale
	.i (manaMaleNum'="")||(manaFemaleNum'="")  do
	..s:(firDayFlag="") firDayFlag=date
	..q:(firDayFlag'="")&&(firDayFlag1="1")
	..s:(secDayFlag="") secDayFlag=date
	..q:(secDayFlag'="")&&(secDayFlag1="1")
	..s:(thirdDayFlag="") thirdDayFlag=date
	q firDayFlag_"^"_secDayFlag_"^"_thirdDayFlag
]]></Implementation>
</Method>

<Method name="QueryAvailRegTimeCount">
<Description><![CDATA[
Descript:查找某一段时间内每天分时段的可预约数
Creater:	ZhangDongmei
CreateDate:	2014-02-25
Table:
Input:<Request><strID>7</strID><sex>M</sex><pmType>H</pmType></Request>
Output:	
Return：<ExamRegRecord></ExamRegRecord>
w ##class(HS.BL.ExaminationRegister).QueryAvailRegTimeCount("<Request><sex>M</sex><pmType>H</pmType><levelDesc>普通</levelDesc><strID>1064</strID><locId>263</locId><date>2015-07-02</date><datePmType>O</datePmType></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s strID=$TR(request.strID,$c(0))
		s sex=$TR(request.sex,$c(0))
		s pmType=$TR(request.pmType,$c(0))
		s date=$TR(request.date,$c(0))
		s datePmType=$TR(request.datePmType,$c(0))
		s locId=$TR(request.locId,$c(0))
		s levelDesc=$TR(request.levelDesc,$c(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:(strID="")||(date="")||(pmType="")||(sex="")||(locId="") "-5^参数不能为空"
	s retStr=""
	s len=$L(strID,",")
	i datePmType="H" do
	.f i=1:1:len   d
	..s preID=$p(strID,",",i)
	..q:preID=""
	
	..s objPreManager=##class(User.DHCPEPreHomeInfo).%OpenId(preID)
	..;s startDate=objPreManager.PGADMHomeBeginDate
	..;s endDate=objPreManager.PGADMHomeEndDate
	..s regDate=$zdh(date,3)
	..s chl=0
	..f  s chl=$o(^User.DHCPEPreHomeInfoD(preID,"PGTimeInfo",chl)) q:chl=""  d
	...s detailID=preID_"||"_chl
	...s objTime=##class(User.DHCPEPreHomeTimeInfo).%OpenId(detailID)
	
	...s myObj=##class(HS.Temp.ExamAvailDate).%New()
	...s startTime=objTime.PHStartTime
	...s endTime=objTime.PHEndTime
	...s:startTime'="" myObj.startTime=$zt(startTime,2)
	...s:endTime'="" myObj.endTime=$zt(endTime,2)
	...i sex="M" s totalCount=objTime.PHNumMale
	...i sex="F" s totalCount=objTime.PHNumFemale

	...s regCount=##class(web.DHCPE.NetPre.GetPreInfo).GetPreNum(regDate,locId,$g(levelDesc),pmType,startTime,endTime,"H",preID) ;//计算已预约数
	...i sex="M" s regCount = $p(regCount,"-",1)
	...i sex="F" s regCount = $p(regCount,"-",2)
	...s myObj.availRegCount=totalCount-regCount
	...s myObj.detailID=detailID
	...s myObj.datePmType="H"
	...s myObj.sexDesc = sexDesc
	...s sc=myObj.XMLExportToString(.XML,"ExamAvailTime")
	...i '$$$ISERR(sc)  d
	....s retStr=retStr_XML
	
	
	e  do
	.f i=1:1:len   d
	..s preID=$p(strID,",",i)
	..q:preID=""
	..s objPreManager=##class(User.DHCPEPreManager).%OpenId(preID)
	..s regDate=objPreManager.PMDate
	..s regLocId=objPreManager.PMLocDR.%Id()
	..s levelId=objPreManager.PMVIPLevel
	..s:levelId'="" levelDesc=$P(^DHCPEVIPLevel("VIP",levelId),"^",2)
	..s pmType=objPreManager.PMType
	..s chl=0
	..s balance = 0
	..f  s chl=$o(^User.DHCPEPreManagerD(preID,"PMTimeChild",chl)) q:chl=""  d
	...s detailID=preID_"||"_chl
	...s objTime=##class(User.DHCPEPreTimeManager).%OpenId(detailID)
	...
	...s myObj=##class(HS.Temp.ExamAvailDate).%New()
	...s startTime=objTime.PTMStartTime
	...s endTime=objTime.PTMEndTime
	...s:startTime'="" myObj.startTime=$zt(startTime,2)
	...s:endTime'="" myObj.endTime=$zt(endTime,2)
	...i sex="M" s totalCount=objTime.PTMNumMale
	...i sex="F" s totalCount=objTime.PTMNumFemale
	...i totalCount=""  s totalCount = objTime.PTMNum
	...;s totalCount=objTime.PTMNum
	...s regCount=##class(web.DHCPE.NetPre.GetPreInfo).GetPreNum(regDate,regLocId,$g(levelDesc),pmType,startTime,endTime,pmType,preID) ;//计算已预约数
	...i sex="M" s regCount = $p(regCount,"-",1)
	...i sex="F" s regCount = $p(regCount,"-",2)
	...s myObj.availRegCount=totalCount-regCount
	
	...i balance < 0  do
	....s balance = totalCount-regCount+balance
	...e  do
	....s balance = totalCount-regCount
	...i balance < 0  do
	....s myObj.availRegCount=0
	...e  do
	....s myObj.availRegCount = balance
	
	...s myObj.detailID=detailID
	...s myObj.datePmType=datePmType
	...s myObj.sexDesc = sex
	...s sc=myObj.XMLExportToString(.XML,"ExamAvailTime")
	...i '$$$ISERR(sc)  d
	....s retStr=retStr_XML
	.
	q retStr
]]></Implementation>
</Method>

<Method name="AuditRegisterRecord">
<Description><![CDATA[
Descript:修改日期记录（已缴费）
Creater:	ZhangDongmei
CreateDate:	2014-01-02
Table:User.DHCPEModifyDateRecord
Input:<Request><regId>体检预约id</regId><regExamDate>预约日期</regExamDate>
<detailId>预约排班明细ID</detailId></Request>
Output:	
Return：0^成功
w ##class(HS.BL.ExaminationRegister).AuditRegisterRecord("<Request><regExamDate>2014-01-04</regExamDate><regId>20480</regId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-102^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s regId=$TR(request.regId,$c(0))
		s regExamDate=$TR(request.regExamDate,$c(0))
		s detailId=$TR(request.detailId,$c(0))
		s datePmType=$TR(request.datePmType,$c(0))
		s levelDesc=$TR(request.levelDesc,$c(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:regId="" "-4^参数不能为空"
	q:regExamDate="" "-6^请选择体检日期"
	s regExamDate=$zdh(regExamDate,3)
	s objReg=##class(User.DHCPENetPreRecord).%OpenId(regId)
	q:objReg="" "-12^体检登记记录不存在"
	s myObj=##class(User.DHCPEModifyDateRecord).%New()
	s hisRegId=objReg.NPRPreIADM
	i hisRegId'=""  d
	.s objHisReg=##class(User.DHCPEPreIADM).%OpenId(hisRegId)
	.s myObj.MDRPreIADMDR=objHisReg
	s myObj.MDRCheckDate=regExamDate
	s myObj.MDRUpdateDate=+$h
	s myObj.MDRNetPreRecordDR=objReg
	i detailId'=""  d
	.i datePmType="H" do
	..s myObj.NPRPreHomeTimeDR=##class(User.DHCPEPreHomeTimeInfo).%OpenId(detailId)
	.e  do
	..s myObj.NPRPreTimeMangerDR=##class(User.DHCPEPreTimeManager).%OpenId(detailId)
	
	i myObj.NPRPreHomeTimeDR  d
	.s endTime=myObj.NPRPreHomeTimeDR.PHEndTime
	i myObj.NPRPreTimeMangerDR  d
	.s endTime=myObj.NPRPreTimeMangerDR.PTMEndTime
	s sc=myObj.%Save()
	q:$$$ISERR(sc) "-10^操作失败:"_$System.Status.GetErrorText(sc)
	q 0
]]></Implementation>
</Method>

<Method name="QueryPaidAppRecord">
<Description><![CDATA[
Descript:查找已缴费患者的预约信息
Creater:	ZhangDongmei
CreateDate:	2014-02-13
Table:
Input:<Request><patientRegNo>登记号</patientRegNo><locId>体检科室id</locId></Request>
Output:	
Return：<ExamRegRecord></ExamRegRecord>
w ##class(HS.BL.ExaminationRegister).QueryPaidAppRecord("<Request><patientRegNo>TEZT1014</patientRegNo><locId>53</locId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s patientRegNo=$TR(request.patientRegNo,$c(0))
		s locId=$TR(request.locId,$c(0))		
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:patientRegNo="" "-4^参数不能为空"
	q:locId="" "-5^参数不能为空"
	//姓名^性别^年龄^电话^体检号^*登记号*^体检日期^套餐描述^单位^VIP类型描述^部门^总金额^早餐描述^出片描述^特殊项目排队号^套餐ID^体检预约id
	s patientInfo=##class(web.DHCPE.CRM.Gateway).GetPreRecord(patientRegNo,locId)
	q:patientInfo="" ""
	s tempLevelDesc=$p(patientInfo,"^",10)
	s:tempLevelDesc'="" tempLevelDesc=$p(tempLevelDesc,$c(32),1)
	s regId=$p(patientInfo,"^",17)
	q:regId="" ""
	s id=$o(^User.DHCPEModifyDateRecordI("PreIADMIndex", regId,0))
	q:id="" ""
	s objReg=##class(User.DHCPEModifyDateRecord).%OpenId(id)
	q:objReg="" ""
	s myObj=##class(HS.Temp.ExamRegRecord).%New()
	s myObj.breakfastDesc=$p(patientInfo,"^",13)
	s myObj.companyDesc=$p(patientInfo,"^",9)
	s myObj.departmentDesc=$p(patientInfo,"^",11)
	s myObj.examRegNo=$p(patientInfo,"^",5)
	s myObj.levelDesc=tempLevelDesc
	s myObj.ordSetDesc=$p(patientInfo,"^",8)
	s myObj.ordSetId=$p(patientInfo,"^",16)
	s myObj.patientAge=$p(patientInfo,"^",3)
	s myObj.patientName=$p(patientInfo,"^",1)
	s myObj.patientRegNo=$p(patientInfo,"^",6)
	s myObj.phoneNo=$p(patientInfo,"^",4)
	s myObj.regExamDate=$zd(objReg.MDRCheckDate,3)
	s myObj.reportDesc=$p(patientInfo,"^",14)
	s myObj.sexDesc=$p(patientInfo,"^",2)
	s myObj.totalAmount=$p(patientInfo,"^",12)
	s myObj.specialSeqNo=$p(patientInfo,"^",15)
	s myObj.regId=$p(patientInfo,"^",17)
	s sc=myObj.XMLExportToString(.XML,"ExamRegRecord")
	q XML
]]></Implementation>
</Method>

<Method name="SaveRegisterRecord">
<Description><![CDATA[
Descript:保存体检预约信息（未缴费）
Creater:	ZhangDongmei
CreateDate:	2014-02-17
Table:User.DHCPENetPreRecord，DHC_PE_NetPreItemRecord
Input:<Request><patientName>姓名</patientName><sexDesc>性别：男，女</sexDesc>
<patientDob>出生日期</patientDob><patientIdNo>身份证号</patientIdNo>
<cardType>证件类型</cardType>
<telephoneNo>手机号</telephoneNo><locId></locId><detailId>预约排班明细ID</detailId>
<regStatus>状态:0：网上预约,1：医院已预约,2：撤销预约,3：过期未在医院预约</regStatus>
<ordSetId>套餐id</ordSetId><regExamDate>预约的体检日期</regExamDate>
<occupation>职业</occupation><education>学历</education><marriage>婚姻状况</marriage>
<listResult>主题与内容关联id^结果选项ID^结果值^结果录入值,主题与内容关联id^结果选项ID^结果值^结果录入值</listResult></Request>
<netItemStr>项目ID~价格@项目ID~价格@</netItemStr></Request>
Output:	
Return：0^成功
w ##class(HS.BL.ExaminationRegister).SaveRegisterRecord("<Request><levelDesc>普通</levelDesc><patientRegNo>0000000171</patientRegNo><patientIdNo>370902200001014319</patientIdNo><patientName>慕容伍</patientName><sexDesc>男</sexDesc><telephoneNo>15838888888</telephoneNo><regStatus>0</regStatus><patientDob>1990-01-01</patientDob><regExamDate>2018-06-15</regExamDate><locId>370</locId><datePmType>I</datePmType><ordSetId>2</ordSetId><detailId>487||7152</detailId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s ^wgy=params
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s patientRegNo=$TR(request.patientRegNo,$c(0))
		s patientName=$TR(request.patientName,$c(0))
		s sexDesc=$TR(request.sexDesc,$c(0))
		s dob=$TR(request.patientDob,$c(0))
		s idNo=$TR(request.patientIdNo,$c(0))
		s telNo=$TR(request.telephoneNo,$c(0))
		s status=$TR(request.regStatus,$c(0))
		s ordSetId=$TR(request.ordSetId,$c(0))
		s regExamDate=$TR(request.regExamDate,$c(0))
		s occupation=$TR(request.occupation,$c(0))
		s education=$TR(request.education,$c(0))
		s marriage=$TR(request.marriage,$c(0))
		s locId=$TR(request.locId,$c(0))
		s detailId=$TR(request.detailId,$c(0))
		s levelDesc=$TR(request.levelDesc,$c(0))
		s cardType=$TR(request.cardType,$c(0))
		s datePmType=$TR(request.datePmType,$c(0))
		s listResult=request.listResult
		s netItemStr=$TR(request.netItemStr,$c(0))
		s preWay=$TR(request.preWay,$c(0))		
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	i (patientRegNo'="")
	{
		//$g(id)		_"^"_PIBIPAPMINo_"^"_PIBIName	_"^"_PIBISexDR	_"^"_PIBISexDRName	_"^"_PIBIDOB	_"^"_PIBIPatTypeDR	_"^"_	PIBIPatTypeDRName		_"^"_PIBITel1	_"^"_PIBITel2	_"^"_PIBIMobilePhone	_"^"_PIBIIDCard	_"^"_PIBIVocation			_"^"_PIBIPosition_"^"_PIBICompany	 _"^"_PIBIPostalcode_"^"_PIBIAddress     _"^"_PIBINation		_"^"_PIBIEmail	_"^"_PIBIMarriedDR	_"^"_PIBIMarriedDRName	_"^"_PIBIBloodDR	_"^"_PIBIBloodDRName		_"^"_PIBIUpdateDate	_"^"_PIBIUpdateUserDR	_"^"_PIBIUpdateUserDRName
		s Strings=##class(web.DHCPE.PreIBaseInfo).GetHISIBaseInfo("","","^"_patientRegNo_"^")
		q:Strings="" "-4^登记号无效"
		s:patientName="" patientName=$p(Strings,"^",3)
		s:sexDesc="" sexDesc=$p(Strings,"^",5)
		s PIBIDOB=$p(Strings,"^",6)
		i PIBIDOB'="" d
		.s:dob="" dob=$ZD($zdh(PIBIDOB),3)
		s:idNo="" idNo=$p(Strings,"^",12)
		s PIBITel=$p(Strings,"^",9)
		s:telNo="" telNo=PIBITel
	}
	q:patientName="" "-4^请准确填写您的姓名"
	q:idNo="" "-5^请准确填写您的身份证号"
	q:regExamDate="" "-6^请选择体检日期"
	q:preWay="" "-6^预约途径不能为空"
	s:sexDesc'="" sexId=$o(^CT("SEX",0,"Desc",$$ALPHAUP^SSUTIL4(sexDesc),0))
	s existId=##class(HS.BL.ExaminationRegister).GetRegId(idNo)
	q:existId'="" "-7^该身份证已经存在未执行的预约记录，请核实身份证号"
	s:(levelDesc="") levelDesc=$p($g(^DHCPEVIPLevel("VIP",orderVipLevel)),"^",2)
	
	;保存调查问卷
	s err=""
	s evaluationId = ""
	i listResult'=""  d
	.s data=idNo_"^"_patientName_"^"_$g(sexId)_"^"_dob_"^"_telNo_"^"_occupation_"^"_education_"^"_marriage
	.b ;dataExam
	.s evaluationId=##class(HS.BL.ExaminationQuestion).SaveExamQuestionResult(data,listResult)
	.i +evaluationId<=0  s err=evaluationId
	.
	i err'="" q err
	s NumDate = $zdh(regExamDate,3)
	s:(sexDesc="男") SexNumCode="M"
	s:(sexDesc="女") SexNumCode="F"
	;w ##class(HS.BL.ExaminationRegister).GetShengYuNum("63679","普通","M","O","","263")
	s:(datePmType="O") levelDesc="过期主场"
	s ShengYuNum = ..GetShengYuNum(NumDate,levelDesc,SexNumCode,datePmType,"",locId)
	q:ShengYuNum'="true" "-999^剩余名额已被占用"
	
	TS
	;保存体检预约记录
	i dob'=""  d
	.s age=(+$h-$zdh(dob,3))/365
	e  d
	.s age=""
	s sexId=$O(^CT("SEX",0,"Desc",sexDesc,""))
	s data=patientRegNo_"^"_patientName_"^"_$g(sexId)_"^"_age_"^"_idNo_"^"_status_"^"_ordSetId_"^"_regExamDate_"^"_evaluationId_"^^^"_locId_"^"_detailId_"^"_telNo_"^"_datePmType_"^"_levelDesc_"^身份证^"_preWay
	b ;data
	s regId=..SaveRegister(data)
	b ;regId
	i +regId<=0  tro  q "-11^保存预约信息失败："_$P(regId,"^",2)
	
	i ($G(^DHCPESetting("DHCPE","SelfNetItem",locId))="Y") {
		;更新网上自选项目
		s ret=..UpdateNoPaidNetPreItem(+regId,ordSetId,netItemStr)
		b ;ret
		i ret'=""  tro  q "-22^保存网上自选项目失败"
	}

	s str="<Request><patientIdNo></patientIdNo><patientName>"_patientName_"</patientName><regId>"_regId_"</regId></Request>"
	s retStr=..QueryRegRecord(str)
	Tc
	q retStr
]]></Implementation>
</Method>

<Method name="getPatientIdByIdNo">
<ClassMethod>1</ClassMethod>
<FormalSpec>idNo:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:idNo="" ""
	
	s regPatientId=$o(^MHC.Store.RegisterPatientI("idNoIndex"," "_idNo,""))
	q:regPatientId="" ""
	s myObj=##class(MHC.Store.RegisterPatient).%OpenId(regPatientId)
	q:myObj="" ""
	s patientId=myObj.patientId
	d myObj.%Close()
	
	q patientId
]]></Implementation>
</Method>

<Method name="SaveRegisterRecordPaid">
<Description><![CDATA[
Descript:保存体检预约信息（已缴费）
Creater:	ZhangDongmei
CreateDate:	2014-02-17
Table:
Input:<Request><regId>体检预约id</regId><regExamDate>预约日期</regExamDate>
<telephoneNo>手机号</telephoneNo><occupation>职业</occupation><education>学历</education>
<marriage>婚姻状况</marriage><locId></locId><detailId>预约排班明细ID</detailId>
<listResult><QuestionResult><subjectID>主题ID</subjectID><detailID>细项ID</detailID><optionsID>结果选项ID</optionsID>
<resultValue>结果值</resultValue></QuestionResult></listResult></Request>
Output:	
Return：0^成功
w ##class(HS.BL.ExaminationRegister).SaveRegisterRecordPaid("<Request><telephoneNo>13793831010</telephoneNo><occupation></occupation><regStatus>0</regStatus><marriage></marriage><education></education><patientName>宗宁</patientName><levelDesc>普通</levelDesc><sexDesc>男</sexDesc><regExamDate>2016-10-24</regExamDate><patientDob></patientDob><locId>263</locId><datePmType>I</datePmType><regId>167</regId><ordSetId>489</ordSetId><detailId>2711||29301</detailId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s regId=$TR(request.regId,$c(0))
		s telNo=$TR(request.telephoneNo,$c(0))
		s regExamDate=$TR(request.regExamDate,$c(0))
		s occupation=$TR(request.occupation,$c(0))
		s education=$TR(request.education,$c(0))
		s marriage=$TR(request.marriage,$c(0))
		s locId=$TR(request.locId,$c(0))
		s levelDesc=$TR(request.levelDesc,$c(0))
		s detailId=$TR(request.detailId,$c(0))
		s listResult=request.listResult	
		s datePmType=request.datePmType	
		s netItemStr=$TR(request.netItemStr,$C(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	
	q:regId="" "-6^系统错误"
	q:regExamDate="" "-6^请选择体检日期"
	s ordSetId=##class(web.DHCPE.Query.IAdmItemStatus).GetArcSetDesc(regId,"Y")
	s objReg=##class(User.DHCPEPreIADM).%OpenId(regId)
	s patientName=objReg.PIADMPIBIDR.PIBIName
	s idNo=objReg.PIADMPIBIDR.PIBIIDCard
	s sexId=objReg.PIADMPIBIDR.PIBISexDR
	s patNo=objReg.PIADMPIBIDR.PIBIPAPMINo
	s dob=objReg.PIADMPIBIDR.PIBIDOB
	s:dob'="" dob=$zd(dob,3)
	i telNo'=""  d
	.s telNo=objReg.PIADMPIBIDR.PIBITel1
	.s:telNo="" telNo=objReg.PIADMPIBIDR.PIBITel2
	.s:telNo="" telNo=objReg.PIADMPIBIDR.PIBIMobilePhone
	i occupation'=""  d
	.s occupation=objReg.PIADMPIBIDR.PIBIVocation
	.i occupation'=""  d
	..s objOccupation=##class(User.CTOccupation).%OpenId(occupation)
	..s occupation=objOccupation.CTOCCDesc
	.
	i marriage'=""  d
	.s marriage=objReg.PIADMPIBIDR.PIBIMarriedDR
	.i marriage'=""  d
	..s objMarrial=##class(User.CTMarital).%OpenId(marriage)
	..s marriage=objMarrial.CTMARDesc
	.
	;
	s evaluationId=""
	s error=""
	i listResult'=""  d
	.s data=idNo_"^"_patientName_"^"_$g(sexId)_"^"_dob_"^"_telNo_"^"_occupation_"^"_education_"^"_marriage
	.s evaluationId=##class(HS.BL.ExaminationQuestion).SaveExamQuestionResult(data,listResult)
	.i +evaluationId<=0 s error=evaluationId
	.
	q:error'="" error
	;
	s NumDate = $zdh(regExamDate,3)
	s sexDesc = $P($G(^CT("SEX",sexId)),"^",2)
	s SexNumCode=""
	s:(sexDesc="男") SexNumCode="1"
	s:(sexDesc="女") SexNumCode="2"
	s:(levelDesc="") levelDesc="普通"
	;w ##class(HS.BL.ExaminationRegister).GetShengYuNum("63679","普通","M","O","","263")
	s:(datePmType="O") levelDesc="过期主场"
	s ShengYuNum = ..GetShengYuNum(NumDate,levelDesc,SexNumCode,datePmType,"",locId)
	q:ShengYuNum'="true" "-999^剩余名额已被占用"
	i dob'=""  d
	.s age=(+$h-$zdh(dob,3))/365
	e  d
	.s age=""
	tstart
	s $ZT="ErrorHandle"
	s data=patNo_"^"_patientName_"^"_$g(sexId)_"^"_age_"^"_idNo_"^"_"4"_"^"_ordSetId_"^"_regExamDate_"^"_evaluationId_"^1^"_regId_"^"_locId_"^"_detailId_"^"_telNo_"^"_datePmType_"^"_levelDesc
	s preRegId=..SaveRegister(data)
	i +preRegId<=0 trollback  q "-11^保存预约信息失败："_$P(preRegId,"^",2)		//保存预约信息失败
	s data="<Request><regId>"_preRegId_"</regId><regExamDate>"_regExamDate_"</regExamDate><datePmType>"_datePmType_"</datePmType></Request>"
	s ret=..AuditRegisterRecord(data)
	i ret'=0 trollback  q ret
	;更新his预约日期
	s endTime=""
	i detailId'=""  d
	.i datePmType="H" do
	..s objTimemanger=##class(User.DHCPEPreHomeTimeInfo).%OpenId(detailId)
	..q:objTimemanger=""
	..s endTime=objTimemanger.PHEndTime
	.e  do
	..s objTimemanger=##class(User.DHCPEPreTimeManager).%OpenId(detailId)
	..q:objTimemanger=""
	..s endTime=objTimemanger.PTMEndTime
	.
	s ret=##class(web.DHCPE.TransAdmInfo).UpdateAdmDate(regId, $zd($zdh(regExamDate,3),4)_"^"_$g(endTime))
	i ret'=0 trollback
	q:ret'=0 "-11^更新his体检日期失败"
	;更新网上自选项目  netItemStr=医嘱ID~价格#医嘱ID~价格#医嘱ID~价格#     wgy
	i ($G(^DHCPESetting("DHCPE","SelfNetItem",locId))="Y") {
		s updateNetRet=..UpdateNetPreItem(regId,netItemStr,1)
		i updateNetRet'=""  trollback  q updateNetRet
	}
	
	i $TL>0 tcommit
	
	s str="<Request><regId>"_preRegId_"</regId></Request>"
	s ret=..QueryRegRecord(str)
	
	
	q ret
ErrorHandle
	s rtn=-100
	trollback
	q:$ze="" rtn
	q rtn_"^"_$ze
]]></Implementation>
</Method>

<Method name="SaveRegisterRecordWithoutQus">
<Description><![CDATA[
Descript:保存体检预约信息(团体预约，没有调查问卷)
Creater:	zongning
CreateDate:	2014-11-17
Table:
Input:<Request><regId>体检预约id</regId><regExamDate>预约日期</regExamDate>
<telephoneNo>手机号</telephoneNo><occupation>职业</occupation><education>学历</education>
<marriage>婚姻状况</marriage><locId></locId><detailId>预约排班明细ID</detailId>
<listResult><QuestionResult><subjectID>主题ID</subjectID><detailID>细项ID</detailID><optionsID>结果选项ID</optionsID>
<resultValue>结果值</resultValue></QuestionResult></listResult></Request>
Output:	
Return：0^成功
w ##class(HS.BL.ExaminationRegister).SaveRegisterRecordWithoutQus("<Request><telephoneNo>null</telephoneNo><patientName>测试</patientName><levelDesc>普通</levelDesc><gid></gid><regExamDate>2015-11-19</regExamDate><locId>231</locId><datePmType>I</datePmType><regId></regId><detailId>6||16</detailId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s ^wgy("SaveRegisterRecordWithoutQus")=params
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s regId=$TR(request.regId,$c(0))
		s telNo=$TR(request.telephoneNo,$c(0))
		s regExamDate=$TR(request.regExamDate,$c(0))
		s occupation=$TR(request.occupation,$c(0))
		s education=$TR(request.education,$c(0))
		s marriage=$TR(request.marriage,$c(0))
		s levelDesc=$TR(request.levelDesc,$c(0))
		s locId=$TR(request.locId,$c(0))
		s detailId=$TR(request.detailId,$c(0))
		s listResult=request.listResult	
		s datePmType=request.datePmType	
		s netItemStr=$TR(request.netItemStr,$C(0))
		s preWay=$TR(request.preWay,$C(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:regId="" "-6^预约ID不能为空"
	q:regExamDate="" "-6^请选择体检日期"
	q:preWay="" "-6^预约途径不能为空"
	s ordSetId=##class(web.DHCPE.Query.IAdmItemStatus).GetArcSetDesc(regId,"Y")
	s:ordSetId["+" ordSetId = $p(ordSetId,"+",1)
	s objReg=##class(User.DHCPEPreIADM).%OpenId(regId)
	s patientName=objReg.PIADMPIBIDR.PIBIName
	s idNo=objReg.PIADMPIBIDR.PIBIIDCard
	s sexId=objReg.PIADMPIBIDR.PIBISexDR
	s patNo=objReg.PIADMPIBIDR.PIBIPAPMINo
	s dob=objReg.PIADMPIBIDR.PIBIDOB
	s GroupId = objReg.PIADMPGADMDR
	s gidNum = ""
	s:(objReg.PIADMPGADMDR '= "") gidNum = objReg.PIADMPGADMDR.%Id()
	s NumDate = $zdh(regExamDate,3)
	
	s sexDesc = $P($G(^CT("SEX",sexId)),"^",2)
	s SexNumCode=""
	s:(sexDesc="男") SexNumCode="M"
	s:(sexDesc="女") SexNumCode="F"
	s:(levelDesc="") levelDesc="普通"
	s:(datePmType="O") levelDesc="过期主场"
	s ShengYuNum = ..GetShengYuNum(NumDate,levelDesc,SexNumCode,datePmType,gidNum,locId)
	q:ShengYuNum'="true" "-999^剩余名额已被占用"
	s:dob'="" dob=$zd(dob,3)
	s:telNo="null" telNo=""
	i telNo=""  d
	.s telNo=objReg.PIADMPIBIDR.PIBITel1
	.s:telNo="" telNo=objReg.PIADMPIBIDR.PIBITel2
	.s:telNo="" telNo=objReg.PIADMPIBIDR.PIBIMobilePhone
	i occupation=""  d
	.s occupation=objReg.PIADMPIBIDR.PIBIVocation
	.i occupation'=""  d
	..s objOccupation=##class(User.CTOccupation).%OpenId(occupation)
	..s occupation=objOccupation.CTOCCDesc
	.
	i marriage=""  d
	.s marriage=objReg.PIADMPIBIDR.PIBIMarriedDR
	.i marriage'=""  d
	..s objMarrial=##class(User.CTMarital).%OpenId(marriage)
	..s marriage=objMarrial.CTMARDesc

	i dob'=""  d
	.s age=(+$h-$zdh(dob,3))/365
	e  d
	.s age=""
	tstart
	s $ZT="ErrorHandle"
	s data=patNo_"^"_patientName_"^"_$g(sexId)_"^"_age_"^"_idNo_"^"_"4"_"^"_ordSetId_"^"_regExamDate_"^"_""_"^1^"_regId_"^"_locId_"^"_detailId_"^"_telNo_"^"_datePmType_"^"_levelDesc_"^身份证^"_preWay
	b ;123
	s preRegId=..SaveRegister(data)
	b ;234
	i +preRegId<=0 trollback  q "-11^保存预约信息失败:"_$P(preRegId,"^",2)		//保存预约信息失败
	s data="<Request><regId>"_preRegId_"</regId><regExamDate>"_regExamDate_"</regExamDate><datePmType>"_datePmType_"</datePmType></Request>"
	s ret=..AuditRegisterRecord(data)
	i ret'=0 trollback  q ret
	;更新his预约日期
	s endTime=""
	i detailId'=""  d
	.i datePmType="H" do
	..s objTimemanger=##class(User.DHCPEPreHomeTimeInfo).%OpenId(detailId)
	..q:objTimemanger=""
	..s endTime=objTimemanger.PHEndTime
	.e  do
	..s objTimemanger=##class(User.DHCPEPreTimeManager).%OpenId(detailId)
	..q:objTimemanger=""
	..s endTime=objTimemanger.PTMEndTime
	.
	s ret=##class(web.DHCPE.TransAdmInfo).UpdateAdmDate(regId, $zd($zdh(regExamDate,3),4)_"^"_$g(endTime))
	i ret'=0 trollback
	q:ret'=0 "-11^更新his体检日期失败"
	;更新网上自选项目  netItemStr=医嘱ID~价格#医嘱ID~价格#医嘱ID~价格#     wgy
	i ($G(^DHCPESetting("DHCPE","SelfNetItem",locId))="Y") {
		s updateNetRet=..UpdateNetPreItem(regId,netItemStr,1)
		i updateNetRet'=""  trollback  q updateNetRet
	}
	
	i $TL>0 tcommit
	
	s str="<Request><regId>"_preRegId_"</regId></Request>"
	s ret=..QueryRegRecord(str)
	
	
	q ret
ErrorHandle
	s rtn=-100
	trollback
	q:$ze="" rtn
	q rtn_"^"_$ze
]]></Implementation>
</Method>

<Method name="GetLatestExamUserInfo">
<Description><![CDATA[
Descript:根据身份证号取最近一次体检信息
Creater:	ZhangDongmei
CreateDate:	2014-03-14
Table:
Input:<Request><patientIdNo>身份证号</patientIdNo></Request>
Output:	
Return：
w ##class(HS.BL.ExaminationRegister).GetLatestExamUserInfo("<Request><patientIdNo>123456789054683851</patientIdNo></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params=""
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	i $$$ISERR(sc)  q "-1^读取参数错误:"_$System.Status.GetErrorText(sc)
	d reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	while reader.Next(.request,.sc){
		s patientIdNo=$TR(request.patientIdNo,$c(0))
	}
	i $$$ISERR(sc)  q "-2^解析参数错误:"_$System.Status.GetErrorText(sc)
	q:$g(patientIdNo)="" "-3^参数不能为空"
	s cardNo=$$ALPHAUP^SSUTIL4(patientIdNo)
	s netPreId=""
	s tmpPreId=""
	f  s tmpPreId=$o(^User.DHCPENetPreRecordI("IDCardIndex",cardNo,tmpPreId),-1)  q:(tmpPreId="")!(netPreId'="")  d
	.s objRecord=##class(User.DHCPENetPreRecord).%OpenId(tmpPreId)
	.s payStatus=objRecord.NPRPayFlag
	.q:payStatus="1"
	.s netPreId=tmpPreId
	.
	q:netPreId="" ""
	s objRecord=##class(User.DHCPENetPreRecord).%OpenId(netPreId)
	s myObj=##class(HS.Temp.UserInfo).%New()
	s myObj.userName=objRecord.NPRName
	i objRecord.NPROevaluationDR  d
	.i objRecord.NPROevaluationDR.QOBaseInfoDR  d
	..s dobDate=objRecord.NPROevaluationDR.QOBaseInfoDR.BIDOB
	..s:dobDate'="" dobDate=$zd(dobDate,3)
	..s myObj.dobDate=dobDate
	..i objRecord.NPROevaluationDR.QOBaseInfoDR.BICNationDR  d
	...s myObj.nationDesc=objRecord.NPROevaluationDR.QOBaseInfoDR.BICNationDR.CTDesc
	..
	.i objRecord.NPROevaluationDR.QCEducationDR  d
	..s myObj.education=objRecord.NPROevaluationDR.QCEducationDR.CTDesc
	.i objRecord.NPROevaluationDR.QCOccupationDR  d
	..s myObj.occupation=objRecord.NPROevaluationDR.QCOccupationDR.CTDesc
	.i objRecord.NPROevaluationDR.QCMaritalDR  d
	..s myObj.marriage=objRecord.NPROevaluationDR.QCMaritalDR.CTDesc
	i objRecord.NPRSexDR  d
	.s myObj.sexDesc=objRecord.NPRSexDR.CTSEXDesc
	s myObj.telephoneNo=objRecord.NPRTelphoneNo
	s sc=myObj.XMLExportToString(.XML,"UserInfo")
	i $$$ISERR(sc)  q "-11^获取内容失败:"_$System.Status.GetErrorText(sc)
	q XML
]]></Implementation>
</Method>

<Method name="GetRequestInfo">
<Description><![CDATA[
Descript:根据参数信息返回对应的描述
Creater:	ZhangDongmei
CreateDate:	2014-03-24
Table:
Input:<Request><locId>科室id</locId><detailId>预约时间段id</detailId><ordSetId>套餐id</ordSetId></Request>
Output:	
Return：
]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params=""
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	i $$$ISERR(sc)  q "-1^读取参数错误:"_$System.Status.GetErrorText(sc)
	d reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	while reader.Next(.request,.sc){
		s locId=$TR(request.locId,$c(0))
		s detailId=$TR(request.detailId,$c(0))
		s ordSetId=$TR(request.ordSetId,$c(0))
		s datePmType=$TR(request.datePmType,$c(0))
	}
	i $$$ISERR(sc)  q "-2^解析参数错误:"_$System.Status.GetErrorText(sc)
	s locDesc=""
	i locId'=""  d
	.s objLoc=##class(User.CTLoc).%OpenId(locId)
	.q:objLoc=""
	.s locDesc=objLoc.CTLOCDesc
	.
	i datePmType="H" do
	.s timeRange=""
	.i detailId'=""  d
	..s objDetail=##class(User.DHCPEPreHomeTimeInfo).%OpenId(detailId)
	..q:objDetail=""
	..s startTime=objDetail.PHStartTime
	..s:startTime'="" startTime=$zt(startTime,2)
	..s endTime=objDetail.PHEndTime
	..s:endTime'="" endTime=$zt(endTime,2)
	..s timeRange=startTime_"-"_endTime
	e  do
	.s timeRange=""
	.i detailId'=""  d
	..s objDetail=##class(User.DHCPEPreTimeManager).%OpenId(detailId)
	..q:objDetail=""
	..s startTime=objDetail.PTMStartTime
	..s:startTime'="" startTime=$zt(startTime,2)
	..s endTime=objDetail.PTMEndTime
	..s:endTime'="" endTime=$zt(endTime,2)
	..s timeRange=startTime_"-"_endTime

	s ordSetDesc=""
	i ordSetId'=""  d
	.s peNetOrdSetsId=$o(^User.DHCPENetOrdSetsI("HisSetsIndex",ordSetId,0))
	.q:peNetOrdSetsId=""
	.s objOrdSets=##class(User.DHCPENetOrdSets).%OpenId(peNetOrdSetsId)
	.q:objOrdSets=""
	.s ordSetDesc=objOrdSets.NOSDesc
	.
	s myObj=##class(HS.Temp.ExamRegRecord).%New()
	s myObj.locDesc=locDesc
	s myObj.ordSetDesc=ordSetDesc
	s myObj.regExamTime=timeRange
	s myObj.datePmType=datePmType
	s sc=myObj.XMLExportToString(.XML,"ExamRegRecord")
	i $$$ISERR(sc)  q "-11^获取内容失败:"_$System.Status.GetErrorText(sc)
	q XML
]]></Implementation>
</Method>

<Method name="NewPid">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	q $I(^MHCHS("ExamReg"))
]]></Implementation>
</Method>

<Method name="QueryHomeAvailRegCount">
<Description><![CDATA[
Descript:查找某一段时间内  主场  的可预约数
Creater:	zongning
CreateDate:	2014-10-24
Table:
Input:<Request><startExamDate>开始日期</startExamDate><endExamDate>截止日期</endExamDate>
<locId>体检科室id</locId><levelDesc>套餐类型描述</levelDesc><pmType>预约类型：1</pmType><gid>团体ID：1</gid></Request>
Output:	
Return：<ExamRegRecord></ExamRegRecord>
w ##class(HS.BL.ExaminationRegister).QueryHomeAvailRegCount("<Request><sex>M</sex><startExamDate>2015-06-29</startExamDate><pmType>G</pmType><levelDesc>普通</levelDesc><gid>20</gid><endExamDate>2015-08-02</endExamDate><locId>263</locId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s startDate=$TR(request.startExamDate,$c(0))
		s endDate=$TR(request.endExamDate,$c(0))
		s locId=$TR(request.locId,$c(0))
		s levelDesc	=$TR(request.levelDesc,$c(0))
		s pmType=$TR(request.pmType,$c(0))
		s sex=$TR(request.sex,$c(0))
		s gid=$TR(request.gid,$c(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:(startDate="")||(endDate="") "-4^参数不能为空"
	q:locId="" "-5^参数不能为空"
	s levelId=##class(web.DHCPE.VIPLevel).GetVIPIDByDesc(levelDesc)
	q:levelId="" "-51^套餐级别不能为空"
	q:pmType="" "-52^套餐类型不能为空"
	s retStr=""
	s pmType=$$ALPHAUP^SSUTIL4(pmType)
	i locId'="" s locDesc=$p(^CTLOC(locId),"^",2)
	s endDate=$zdh(endDate,3)
	s startDate=$zdh(startDate,3)
	s LastHomeID=##class(web.DHCPE.PreHome).GetLastHomeIDByGADM(gid)
	w LastHomeID,!
	q:LastHomeID="" retStr  ;非主场返回空
	s HomeType=""
	i LastHomeID'="" d
	.s HomeType=$LG(^User.DHCPEPreHomeInfoD(LastHomeID),11)
	.s gid=$LG(^User.DHCPEPreHomeInfoD(LastHomeID),2)  ;如果HomeType="C" gid设置为了合同对应的ID
	s RegFlag = "false"
	
	
	f date=startDate:1:endDate  d
	.s myObj=##class(HS.Temp.ExamAvailDate).%New()
	.s myObj.examDate=$zd(date,3)
	.s myObj.examLocId=locId
	.s myObj.examLocDesc=$g(locDesc)
	.s id=0
	.s totalCount=0
	.s totalRegCount=0
	.s strPreManagerID=""


	.s Num = ""	
	.i (gid'="")  do
	..s GHomeId = ""
	
	..;f  s GHomeId = $o(^User.DHCPEPreHomeInfoI("PGADMDrIndex",gid,GHomeId)) q:GHomeId=""  do
	
	..f  s GHomeId = $o(^User.DHCPEPreHomeInfoI("DateRPGADMDrIndex",gid,date,GHomeId)) q:GHomeId=""  do
	...s CurHomeType=$LG(^User.DHCPEPreHomeInfoD(GHomeId),11)
	...q:CurHomeType'=HomeType
	...s strPreManagerID=""
	...s strPreManagerID=GHomeId
	...i sex="M" s Num = $LG(^User.DHCPEPreHomeInfoD(GHomeId),5)
	...i sex="F" s Num = $LG(^User.DHCPEPreHomeInfoD(GHomeId),6)
	...s regCount=##class(web.DHCPE.NetPre.GetPreInfo).GetPreNum(date,locId,$g(levelDesc),pmType,"","","H",GHomeId) ;//计算已预约数
	...s regMaleNum = $p(regCount,"-",1)
	...s regFemaleNum = $p(regCount,"-",2)
	...i sex="M" s totalRegCount=totalRegCount+regMaleNum
	...i sex="F" s totalRegCount=totalRegCount+regFemaleNum
	
	..;i objManager.PMNum=""  d
	..i Num=""  d
	...s totalCount=totalCount+0
	..e  d
	...;s totalCount=totalCount+objManager.PMNum
	...s totalCount=totalCount+Num
	
	
	.s availCount=totalCount-totalRegCount
	.s:availCount<0 availCount=0
	.i totalCount=0  d
	..s myObj.status="不可约"
	.e  d
	..i availCount=0  d
	...s myObj.status="已约满"
	..e  d
	...s myObj.status="可预约"
	
	.s advanceRegDate=0 //提前预约天数
	.s:$G(^DHCPESetting("DHCPE","AdvRegDate",locId)) advanceRegDate=^DHCPESetting("DHCPE","AdvRegDate",locId)
	.i date<((+$h)+advanceRegDate)  d
	..s availCount=0  
	..s myObj.status="已过期"
	.
	.s tommorow=+$h+1
	.s curTime=$p($h,",",2)
	.i (date=tommorow)&(curTime>$zth("15:00:00",3))  d
	..s availCount=0  //3点以后不能约第二天的
	..s myObj.status="已过期"
	.i myObj.status = "可预约" s RegFlag = "true"
	.s myObj.availRegCount=availCount
	.s myObj.totalCount=totalCount
	.s myObj.regCount=totalRegCount
	.s myObj.strID=strPreManagerID
	.s myObj.datePmType="H"
	.;s myObj.otherLocId=..GetExaminationLoc(locId)
	.s sc=myObj.XMLExportToString(.XML,"ExamAvailDate")
	.i '$$$ISERR(sc)  d
	..s retStr=retStr_XML
	q retStr
]]></Implementation>
</Method>

<Method name="QueryHomeFirAvailDate">
<Description><![CDATA[
Descript:查询主场团体第一个可以预约的日期
Table:
Input:
Output:	
Return：<ExamRegRecord></ExamRegRecord>
w ##class(HS.BL.ExaminationRegister).QueryHomeFirAvailDate("<Request><sex>M</sex><pmType>H</pmType><levelDesc>普通</levelDesc><gid>2020</gid><locId>572</locId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s locId=$TR(request.locId,$c(0))
		s levelDesc	=$TR(request.levelDesc,$c(0))
		s pmType=$TR(request.pmType,$c(0))
		s sex=$TR(request.sex,$c(0))
		s gid=$TR(request.gid,$c(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:locId="" "-5^体检科室不能为空"
	s levelId=##class(web.DHCPE.VIPLevel).GetVIPIDByDesc(levelDesc)
	q:levelId="" "-51^VIP等级不能为空"
	q:pmType="" "-52^预约类型不能为空"
	s retStr=""
	s pmType=$$ALPHAUP^SSUTIL4(pmType)
	i locId'="" s locDesc=$p(^CTLOC(locId),"^",2)
	s RegFlag = "false"
	
	s FirstHomeDate = ""
	s LastHomeDate = ""	
	s HomeInfoRowId = ""
	
	s LastHomeID=##class(web.DHCPE.PreHome).GetLastHomeIDByGADM(gid)
	q:LastHomeID="" ""  ;非主场返回空
	
	s HomeType=""
	i LastHomeID'="" d
	.s HomeType=$LG(^User.DHCPEPreHomeInfoD(LastHomeID),11)
	.s gid=$LG(^User.DHCPEPreHomeInfoD(LastHomeID),2)  ;如果HomeType="C" gid设置为了合同对应的ID
	f  s HomeInfoRowId = $o(^User.DHCPEPreHomeInfoI("PGADMDrIndex",gid,HomeInfoRowId)) q:HomeInfoRowId=""  do
	.;s StartDate = $LG(^User.DHCPEPreHomeInfoD(HomeInfoRowId),3)
	.;s EndDate = $LG(^User.DHCPEPreHomeInfoD(HomeInfoRowId),4)
	.s CurHomeType=$LG(^User.DHCPEPreHomeInfoD(HomeInfoRowId),11)
	.q:CurHomeType'=HomeType
	.i sex="M" s Num = $LG(^User.DHCPEPreHomeInfoD(HomeInfoRowId),5)
	.i sex="F" s Num = $LG(^User.DHCPEPreHomeInfoD(HomeInfoRowId),6)
	.s date = $LG(^User.DHCPEPreHomeInfoD(HomeInfoRowId),10)
	.q:(date<+$h)
	.s totalRegCount = 0
	.s totalCount = 0
	.i Num=""  d
	..s totalCount=totalCount+0
	.e  d
	..s totalCount=totalCount+Num
	
	.w:(date="63756") date_"^"_locId_"^"_levelDesc_"^"_pmType_"^"_HomeInfoRowId,!
	.s regCount=##class(web.DHCPE.NetPre.GetPreInfo).GetPreNum(date,locId,$g(levelDesc),pmType,"","","H",HomeInfoRowId) ;//计算已预约数
	.s regMaleNum = $p(regCount,"-",1)
	.s regFemaleNum = $p(regCount,"-",2)
	.i sex="M" s totalRegCount=totalRegCount+regMaleNum
	.i sex="F" s totalRegCount=totalRegCount+regFemaleNum
	
	.s status = ""
	.s availCount=totalCount-totalRegCount
	.s:(availCount<0) availCount=0
	.i totalCount=0  d
	..s status="不可约"
	.e  d
	..i availCount<=0  d
	...s status="已约满"
	..e  d
	...s status="可预约"
	.i date<=+$h  d
	..s availCount=0  //今天及今天以前不能再预约
	..s status="已过期"
	
	.s tommorow=+$h+1
	.s curTime=$p($h,",",2)
	.i (date=tommorow)&(curTime>$zth("15:00:00",3))  d
	..s availCount=0  //3点以后不能约第二天的
	..s status="已过期"

	
	.i status="可预约" do
	..i RegFlag = "false"  do
	...s FirstHomeDate = date
	...s LastHomeDate=date
	..s RegFlag = "true"
	..i date>LastHomeDate s LastHomeDate=date
	
	.i RegFlag = "true"  do
	..i date<FirstHomeDate s FirstHomeDate = date


	s RetDate = ""
	i RegFlag = "true"  do
	.s FirstHomeDate = $zd(FirstHomeDate,3)
	.s LastHomeDate = $zd(LastHomeDate,3)
	.;s RetDate = "<ExamHomeFirstAvaDate><avaDate>"_FirstHomeDate_"</avaDate><regFlag>"_RegFlag_"</regFlag></ExamHomeFirstAvaDate>"
	.s RetDate="<ExamHomeAvaDate><FirstAvaDate>"_FirstHomeDate_"</FirstAvaDate><LastAvaDate>"_LastHomeDate_"</LastAvaDate></ExamHomeAvaDate>"
	q RetDate
]]></Implementation>
</Method>

<Method name="DeleteRecord">
<Description><![CDATA[
d ##class(HS.BL.ExaminationRegister).DeleteRecord("<Request><regId>1</regId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s regId=$TR(request.regId,$c(0))
		s idCard=$TR(request.idCard,$c(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:regId="" "-5^参数不能为空"
	q:idCard="" "-5^身份证号不能为空"
	
	set sc = ##class(User.DHCPENetPreRecord).%DeleteId(regId)
	if $system.Status.IsError(sc) {            //检查删除是否成功
   		d $system.OBJ.DisplayError(sc) 
   		set ret=-6
	}
	else{
		set ret=0
	}
	q:ret<0
	;s QuestionId = ""
	;f  s QuestionId = $o(^User.DHCHMOBaseInfoI("BIIDCardIndex"," "_idCard,QuestionId)) q:QuestionId=""  do
	.;i QuestionId'="" do
	..;d ##class(User.DHCHMOBaseInfo).%DeleteId(QuestionId)
	
	quit ret
]]></Implementation>
</Method>

<Method name="GetShengYuNum">
<Description><![CDATA[
Descript:查询预约余额
Creater:	zongning
CreateDate:	2014-12-10
Table:
Input:
Output:	
Return：<ExamRegRecord></ExamRegRecord>
w ##class(HS.BL.ExaminationRegister).GetShengYuNum("63679","普通","M","O","","263")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>date,levelDesc,sex,dateType,gid,locId</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	;s ^wgy("test")=date_","_levelDesc_","_sex_","_dateType_","_gid_","_locId
	q:(date="") "-4^参数不能为空"
	q:(levelDesc="") "-4^参数不能为空"
	q:(sex="") "-4^参数不能为空"
	q:(dateType="") "-4^参数不能为空"
	q:(locId="") "-4^参数不能为空"
	
	s Num = 0
	s totalRegCount=0
	s id = ""
	s levelId=##class(web.DHCPE.VIPLevel).GetVIPIDByDesc(levelDesc)
	
	i (dateType="H")&&(gid'="") do
	.s GHomeId = ""
	.s GHomeId=##class(web.DHCPE.PreHome).GetHomeIDByGADM(gid,date)
	.i sex="M" s Num = $LG(^User.DHCPEPreHomeInfoD(GHomeId),5)
	.i sex="F" s Num = $LG(^User.DHCPEPreHomeInfoD(GHomeId),6)
	.s regCount=##class(web.DHCPE.NetPre.GetPreInfo).GetPreNum(date,locId,$g(levelDesc),dateType,"","","H",GHomeId) ;//计算已预约数
	.s regMaleNum = $p(regCount,"-",1)
	.s regFemaleNum = $p(regCount,"-",2)
	.i sex="M" s totalRegCount=totalRegCount+regMaleNum
	.i sex="F" s totalRegCount=totalRegCount+regFemaleNum
	
	
	e  do
	.f  s id=$o(^User.DHCPEPreManagerI("LocDateIndex",locId,date,levelId,dateType,id)) q:id=""  d
	..s objManager=##class(User.DHCPEPreManager).%OpenId(id)
	..i sex="M" s Num=objManager.PMNumMale
	..i sex="F" s Num=objManager.PMNumFemale
	
	.s regCount=##class(web.DHCPE.NetPre.GetPreInfo).GetPreNum(date,locId,levelDesc,dateType,"","",dateType,"") ;//计算已预约数
	.s regMaleNum = $p(regCount,"-",1)
	.s regFemaleNum = $p(regCount,"-",2)
	.i sex="M" s totalRegCount=totalRegCount+regMaleNum
	.i sex="F" s totalRegCount=totalRegCount+regFemaleNum
	q:(Num-totalRegCount > 0) "true"
	q:(Num-totalRegCount <= 0) "false"
]]></Implementation>
</Method>

<Method name="UpdateSexCodeById">
<Description>
d ##class(HS.BL.ExaminationRegister).UpdateSexCodeById()</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	s rowId=0
	f  s rowId = $o(^PAPER(rowId)) q:(rowId="")||(rowId="DHC")  do
	.s obj = ##class(User.PAPatMas).%OpenId(rowId)
	.s idCard = obj.PAPMIID
	.;s idCard = $p(^PAPER(rowId,"ALL"),"^",9)
	.i idCard'=""  do
	..s index = $Extract(idCard,$length(idCard)-1,$length(idCard)-1)
	..s baifenhao = index#2
	..i baifenhao=0  d obj.PAPMISexDRSetObjectId(2)
	..i baifenhao'=0  d obj.PAPMISexDRSetObjectId(1)
	..s sc=obj.%Save()
]]></Implementation>
</Method>

<Method name="GroupReservation">
<Description><![CDATA[
w ##class(HS.BL.ExaminationRegister).GroupReservation("<Request><gouprHpCode>aaap</gouprHpCode><groupCode>G00000017</groupCode><pageNo>1</pageNo></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s groupCode=$TR(request.groupCode,$c(0))
		s gouprHpCode=$TR(request.gouprHpCode,$c(0))
		s pageNo=$TR(request.pageNo,$c(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:(groupCode="")||(pageNo="")||(gouprHpCode="") "-201^参数不能为空！"
	s baseInfoRowId = $o(^DHCPEPreGBI(0,"Code",groupCode,""))
	q:(baseInfoRowId="") "-201^团体ID有误！"
	s gn = $p(^DHCPEPreGBI(baseInfoRowId),"^",2)
	s checkTure = ""
	s gidVal=""
	f  s gidVal = $o(^DHCPEPreGADM(0,"PGBI",baseInfoRowId,gidVal)) q:(gidVal="")||(checkTure="true")  do
	.s gid = gidVal
	.s hpCode = $p(^DHCPEPreGADM(gid),"^",24)
	.s hpCode=$$ALPHAUP^SSUTIL4(hpCode)
	.s gouprHpCode=$$ALPHAUP^SSUTIL4(gouprHpCode)
	.q:(hpCode'=gouprHpCode)
	.s checkTure="true"
	q:(gid="") "-999^团体ID或团体代码有误！"
	q:(checkTure'="true") "-999^团体ID或团体代码有误！"
	
	s initGid = gid
	
	
	//没有主场需求的医院去掉  20170427
	;s LastHomeID=""
	;s LastHomeID=##class(web.DHCPE.PreHome).GetLastHomeIDByGADM(gid)
	;q:LastHomeID="" ""  ;非主场返回空
	;s HomeType=""
	;i LastHomeID'="" d
	;.s HomeType=$LG(^User.DHCPEPreHomeInfoD(LastHomeID),11)
	;.s gid=$LG(^User.DHCPEPreHomeInfoD(LastHomeID),2)  ;如果HomeType="C" gid设置为了合同对应的ID
	
	s retStr=""
	s totalNum = 0
	i (pageNo<=1)  d
	.s totalNum = ..GetReserveTotalNum(gid)
	b ;wgy
	s ret=0
	i (pageNo<=1)  d
	.s ret=..CreatePageInfo(gid)
	q:ret'=0 "-5^无预约信息！"
	
	
	
	;s totalNum = 0
	;s HomeInfoRowId = ""
	;f  s HomeInfoRowId = $o(^User.DHCPEPreHomeInfoI("PGADMDrIndex",gid,HomeInfoRowId)) q:HomeInfoRowId=""  do
	;f  s HomeInfoRowId = $o(^GroupReservationPage("Page",gid,pageNo,HomeInfoRowId)) q:HomeInfoRowId=""  do
	;.s CurHomeType=$LG(^User.DHCPEPreHomeInfoD(HomeInfoRowId),11)
	;.q:CurHomeType'=HomeType
	;.s dayTotalNum=0,totalNetNum=0,totalHisNum=0
	;.s MNum = $LG(^User.DHCPEPreHomeInfoD(HomeInfoRowId),5)
	;.s FNum = $LG(^User.DHCPEPreHomeInfoD(HomeInfoRowId),6)
	;.s dayTotalNum = MNum + FNum
	;.s Date = $LG(^User.DHCPEPreHomeInfoD(HomeInfoRowId),10)
	;.s formatDate = $zd(Date,3)
	
	;add by  wgy
	s pageInfo=$G(^GroupReservationPage("Page",gid,pageNo))
	q:pageInfo="" "-6^页码错误，请检查"
	s startDate=$p(pageInfo,"^",1)
	s endDate=$p(pageInfo,"^",2)
	b ;1
	s Date=$O(^GroupReservationDate("Date",gid,startDate),-1)
	f  s Date = $O(^GroupReservationDate("Date",gid,Date)) q:(Date="")||(Date>endDate)  d
	.s formatDate = $zd(Date,3)
	.s dayTotalNum=0,totalNetNum=0,totalHisNum=0
	.s dayTotalNum=..GetPMNumByDate("",Date,"","G","") ;暂不考虑VIP等级
	
	
	.s AdmTime = ""
	.f  s AdmTime=$o(^DHCPEIADM(0,"AdmDateTime",Date,AdmTime)) q:AdmTime=""  d
	..s AdmID=""
	..f  s AdmID=$O(^DHCPEIADM(0,"AdmDateTime",Date,AdmTime,AdmID)) q:AdmID=""  d
	...s Status=$P(^DHCPEIADM(AdmID),"^",8)
	...;q:(Status'="ARRIVED")&&(Status'="REGISTERED")
	...;q:(Date<+$H)&&(Status'="ARRIVED")
	...s PreADMID=$P(^DHCPEIADM(AdmID),"^",4)
	...;s LocFlag=##class(web.DHCPE.PreCommon).GetLocFlag("PreADM",PreADMID)
	...;q:LocFlag="1"
	...s GADMID=$P(^DHCPEPreIADM(PreADMID),"^",2)
	...q:(GADMID'=initGid)
	
	
	
	...s StatusVal=$P(^DHCPEPreIADM(PreADMID),"^",8)
	...s PeDateVal = $P(^DHCPEPreIADM(PreADMID),"^",4)
	...q:(PeDateVal<=+$H)&&(StatusVal'="ARRIVED")&&('$D(^User.DHCPENetPreRecordI("NPRPreIADMIndex"," "_PreADMID)))
	
	
	
	...s PIBIID=$P(^DHCPEPreIADM(PreADMID),"^",1)
	...;s Sex=$P(^DHCPEPreIBI(PIBIID),"^",3)
	...;s SexStr="1"
	...;s:Sex=$P($G(^DHCPESetting("DHCPE","DefPatientType")),"^",4) SexStr="2"
	...;s VIPLevel=$P(^DHCPEPreIADM(PreADMID),"^",18)
	...;i VIPLevel="" s VIPLevel=$G(^DHCPEVIPLevel("VIPapprove"))
	...s NetRecordID=$O(^User.DHCPENetPreRecordI("NPRPreIADMIndex"," "_PreADMID,0))
	...i $D(^User.DHCPENetPreRecordI("NPRPreIADMIndex"," "_PreADMID)) d  ;网上人数
	....s totalNetNum = totalNetNum + 1
	...e  d
	....s totalHisNum = totalHisNum + 1
	
	.;网上预约，但前台未登记的情况
	.s netID=""
	.f  s netID=$O(^User.DHCPENetPreRecordI("PreDateIndex",Date,netID)) q:netID=""  d
	..s netStatus=$lg(^User.DHCPENetPreRecordD(netID),7)
	..q:(netStatus'="1")&&(netStatus'="4")
	..s netPreIADM=$lg(^User.DHCPENetPreRecordD(netID),13)
	..s hisStatus=$P(^DHCPEPreIADM(netPreIADM),"^",8)
	..q:hisStatus'="PREREG"
	..s netGid=$P(^DHCPEPreIADM(netPreIADM),"^",2)
	..q:netGid'=initGid
	..s totalNetNum = totalNetNum + 1
	
	.s myObj=##class(HS.Temp.GroupReservation).%New()
	.s myObj.hisNum = totalHisNum
	.s myObj.netNum = totalNetNum
	.s myObj.reservationDate = formatDate
	.s myObj.dayTotalNum = dayTotalNum
	.;s myObj.totalNum = totalNum
	.;s myObj.gid = initGid
	.s sc=myObj.XMLExportToString(.XML,"GroupReservation")
	.i '$$$ISERR(sc)  d
	..s retStr=retStr_XML
	
	s nextPageExistFlg = "303"
	s nextPageNo = pageNo + 1
	s:$d(^GroupReservationPage("Page",gid,nextPageNo)) nextPageExistFlg = "1029"
	
	q "<total>"_nextPageExistFlg_"</total><totalNum>"_totalNum_"</totalNum><gid>"_initGid_"</gid><groupName>"_gn_"</groupName>"_retStr
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// 获取某天的限制预约人数   by wgy

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// w ##class(HS.BL.ExaminationRegister).GetPMNumByDate("","","","","")

]]></Content>
</UDLText>

<Method name="GetPMNumByDate">
<ClassMethod>1</ClassMethod>
<FormalSpec>locId,date,levelId,pmType,sexCode</FormalSpec>
<Implementation><![CDATA[
	s totalNum=0
	s:locId="" locId=263
	s:date="" date=+$h
	s tempLevel=""
	f  s tempLevel=$o(^User.DHCPEPreManagerI("LocDateIndex",locId,date,tempLevel)) q:tempLevel=""  d
	.q:(levelId'="")&&(tempLevel'=levelId)
	.s tempPmType=""
	.f  s tempPmType=$o(^User.DHCPEPreManagerI("LocDateIndex",locId,date,tempLevel,tempPmType)) q:tempPmType=""  d
	..q:(pmType'="")&&(tempPmType'=pmType)
	..s preManagerId=""
	..f  s preManagerId=$o(^User.DHCPEPreManagerI("LocDateIndex",locId,date,tempLevel,tempPmType,preManagerId)) q:preManagerId=""  d
	...s objManager=##class(User.DHCPEPreManager).%OpenId(preManagerId)	
	...s Num=""
	...s:sexCode="1" Num=objManager.PMNumMale
	...s:sexCode="2" Num=objManager.PMNumFemale
    ...s:sexCode="" Num=objManager.PMNumFemale+objManager.PMNumMale
    ...s totalNum=totalNum+Num
	q totalNum
]]></Implementation>
</Method>

<Method name="GetReservationDetail">
<Description><![CDATA[
d ##class(HS.BL.ExaminationRegister).GetReservationDetail("<Request><gid>20</gid><date>2015-07-16</date></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s gid=$TR(request.gid,$c(0))
		s Date=$TR(request.date,$c(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:(gid="")||(Date="") "-201^参数不能为空！"
	s retStr=""
	s Date = $zdh(Date,3)
	s AdmTime = ""
	f  s AdmTime=$o(^DHCPEIADM(0,"AdmDateTime",Date,AdmTime)) q:AdmTime=""  d
	.s AdmID=""
	.f  s AdmID=$O(^DHCPEIADM(0,"AdmDateTime",Date,AdmTime,AdmID)) q:AdmID=""  d
	..s Status=$P(^DHCPEIADM(AdmID),"^",8)
	..s PreADMID=$P(^DHCPEIADM(AdmID),"^",4)
	..;s LocFlag=##class(web.DHCPE.PreCommon).GetLocFlag("PreADM",PreADMID)
	..;q:LocFlag="1"
	..s GADMID=$P(^DHCPEPreIADM(PreADMID),"^",2)
	..q:(GADMID'=gid)
	
	..s StatusVal=$P(^DHCPEPreIADM(PreADMID),"^",8)
	..s PeDateVal = $P(^DHCPEPreIADM(PreADMID),"^",4)
	..q:(PeDateVal<=+$H)&&(StatusVal'="ARRIVED")&&('$D(^User.DHCPENetPreRecordI("NPRPreIADMIndex"," "_PreADMID)))
	..q:(PeDateVal>+$H)&&(StatusVal="REGISTERED")&&('$D(^User.DHCPENetPreRecordI("NPRPreIADMIndex"," "_PreADMID)))
	..s PaadmDr = $P(^DHCPEIADM(AdmID),"^",1)
	..s PaPatMasDr = $P(^PAADM(PaadmDr),"^",1)
	..s Name = $P(^PAPER(PaPatMasDr,"ALL"),"^",1)
	..s PIBIID=$P(^DHCPEPreIADM(PreADMID),"^",1)
	..s Sex=$P(^DHCPEPreIBI(PIBIID),"^",3)
	..s PAPMINo= $P(^DHCPEPreIBI(PIBIID),"^",1)
	..s PIADMHPNo=$P(^DHCPEPreIADM(PreADMID),"^",27)
	..s sexDesc = $P($G(^CT("SEX",Sex)),"^",2)
	..s NetRecordID=$O(^User.DHCPENetPreRecordI("NPRPreIADMIndex"," "_PreADMID,0))
	..s PreType = ""
	..i $D(^User.DHCPENetPreRecordI("NPRPreIADMIndex"," "_PreADMID)) d  ;网上人数
	...s PreType="net"  //网上预约的
	..e  d
	...s PreType="his"  //his现场办理的
	
	..s myObj=##class(HS.Temp.ReservationDetail).%New()
	..s myObj.name = Name
	..s myObj.sexDesc = sexDesc
	..s myObj.preType = PreType
	..s myObj.pAPMINo=PAPMINo
	..s myObj.pIADMHPNo=PIADMHPNo
	
	..s sc=myObj.XMLExportToString(.XML,"ReservationDetail")
	..i '$$$ISERR(sc)  d
	...s retStr=retStr_XML
	.;网上预约，但前台未登记的情况
	s netID=""
	f  s netID=$O(^User.DHCPENetPreRecordI("PreDateIndex",Date,netID)) q:netID=""  d
	.s netStatus=$lg(^User.DHCPENetPreRecordD(netID),7)
	.q:(netStatus'="1")&&(netStatus'="4")
	.s netPreIADM=$lg(^User.DHCPENetPreRecordD(netID),13)
	.s hisStatus=$P(^DHCPEPreIADM(netPreIADM),"^",8)
	.q:hisStatus'="PREREG"
	.s netGid=$P(^DHCPEPreIADM(netPreIADM),"^",2)
	.q:netGid'=gid
	.s Name=$lg(^User.DHCPENetPreRecordD(netID),3)
	.s sexDR=$lg(^User.DHCPENetPreRecordD(netID),4)
	.s sexDesc = $P($G(^CT("SEX",sexDR)),"^",2)
	.s PAPMINo=$lg(^User.DHCPENetPreRecordD(netID),2)
	.s PIADMHPNo=$P(^DHCPEPreIADM(netPreIADM),"^",27)
	.s myObj=##class(HS.Temp.ReservationDetail).%New()
	.s myObj.name = Name
	.s myObj.sexDesc = sexDesc
	.s myObj.preType = "net"
	.s myObj.pAPMINo=PAPMINo
	.s myObj.pIADMHPNo=PIADMHPNo
	.s sc=myObj.XMLExportToString(.XML,"ReservationDetail")
	.i '$$$ISERR(sc)  d
	..s retStr=retStr_XML
	q retStr
]]></Implementation>
</Method>

<Method name="CreatePageInfo">
<Description>
w ##CLASS(HS.BL.ExaminationRegister).CreatePageInfo("20")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>gid:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	k ^GroupReservationPage("Page",gid)
	s count = 0
	s page = 1
	s result = 1
	s startDate=""
	s endDate=""
	s date=""
	f  s date = $O(^GroupReservationDate("Date",gid,date)) q:date=""  d
	.s result = 0
	.s:startDate="" startDate=date
	.s endDate=date
	.s count=count+1
	.i count>=30  do
	..s ^GroupReservationPage("Page",gid,page) =startDate_"^"_endDate
	..s count=0
	..s page=page+1
	..s startDate=""
	i count>0 d
	.s ^GroupReservationPage("Page",gid,page) =startDate_"^"_endDate	
	q result
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
/*ClassMethod GetReserveTotalNum(gid As %String, initGid As %String, HomeType As %String) As %String
{
	s totalNum = 0
	s HomeInfoRowId = ""
	f  s HomeInfoRowId = $o(^User.DHCPEPreHomeInfoI("PGADMDrIndex",gid,HomeInfoRowId)) q:HomeInfoRowId=""  do
	.s CurHomeType=$LG(^User.DHCPEPreHomeInfoD(HomeInfoRowId),11)
	.q:CurHomeType'=HomeType
	.s dayTotalNum=0,totalNetNum=0,totalHisNum=0
	.s Date = $LG(^User.DHCPEPreHomeInfoD(HomeInfoRowId),10)
	.s formatDate = $zd(Date,3)	
	
	.s AdmTime = ""
	.f  s AdmTime=$o(^DHCPEIADM(0,"AdmDateTime",Date,AdmTime)) q:AdmTime=""  d
	..s AdmID=""
	..f  s AdmID=$O(^DHCPEIADM(0,"AdmDateTime",Date,AdmTime,AdmID)) q:AdmID=""  d
	...s Status=$P(^DHCPEIADM(AdmID),"^",8)
	...;q:(Status'="ARRIVED")&&(Status'="REGISTERED")
	...;q:(Date<+$H)&&(Status'="ARRIVED")
	...s PreADMID=$P(^DHCPEIADM(AdmID),"^",4)
	...;s LocFlag=##class(web.DHCPE.PreCommon).GetLocFlag("PreADM",PreADMID)
	...;q:LocFlag="1"
	...s GADMID=$P(^DHCPEPreIADM(PreADMID),"^",2)
	...q:(GADMID'=initGid)
	...s totalNum = totalNum + 1
	
	q totalNum
}*/
]]></Content>
</UDLText>

<Method name="GetReserveTotalNum">
<Description>
w ##CLASS(HS.BL.ExaminationRegister).GetReserveTotalNum(109)</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>gid:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	k ^GroupReservationDate("Date",gid)
	s totalNum = 0
	s AdmID=""
	f  s AdmID=$O(^DHCPEPreIADM(0,"PGADM",gid,AdmID)) q:AdmID=""  d
	.s Status=$P(^DHCPEPreIADM(AdmID),"^",8)
	.s PeDate = $P(^DHCPEPreIADM(AdmID),"^",4)
	
	.;没有主场需求的医院注释代码  并通过设置^GroupReservationDate收集团体预约日期  by wgy
	.;s reserveDate=""
	.;s:(PeDate<=+$H)&&(Status="ARRIVED") totalNum = totalNum + 1
	.;s:(PeDate>+$H)&&(Status'="ARRIVED") totalNum = totalNum + 1
	.;i (PeDate<=+$H)&&(Status'="ARRIVED") do
	.;.s:($D(^User.DHCPENetPreRecordI("NPRPreIADMIndex"," "_AdmID))) totalNum = totalNum + 1

	.i (Status="ARRIVED")||((PeDate>+$H)&&(Status="REGISTERED")) d 
	..s totalNum = totalNum + 1
	..d CollectDateInfo
	.i (Status'="ARRIVED")&&($D(^User.DHCPENetPreRecordI("NPRPreIADMIndex"," "_AdmID))) do
	..s totalNum = totalNum + 1
	..d CollectNetPreDate
	q totalNum
CollectDateInfo
	s id=$o(^DHCPEIADM(0,"CRMADM",AdmID,""))
	i id'="" d
	.s reserveDate=$p(^DHCPEIADM(id),"^",5)
	.i '$g(^GroupReservationDate("Date",gid,reserveDate)) d
	..s ^GroupReservationDate("Date",gid,reserveDate)="1"
	q
CollectNetPreDate
	s netPreID=$O(^User.DHCPENetPreRecordI("NPRPreIADMIndex"," "_AdmID,0))
	i netPreID'="" d
	.s netPreDate=$lg(^User.DHCPENetPreRecordD(netPreID),9)
	.i '$g(^GroupReservationDate("Date",gid,netPreDate)) d
	..s ^GroupReservationDate("Date",gid,netPreDate)="1"
	q
]]></Implementation>
</Method>

<Method name="GroupNoReservation">
<Description><![CDATA[
w ##class(HS.BL.ExaminationRegister).GroupNoReservation("<Request><gouprHpCode>aaag</gouprHpCode><groupCode>G00000006</groupCode><pageNo>1</pageNo></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s groupCode=$TR(request.groupCode,$c(0))
		s gouprHpCode=$TR(request.gouprHpCode,$c(0))
		s pageNo=$TR(request.pageNo,$c(0))
		s name=$TR(request.name,$c(0))
		s departName=$TR(request.departName,$c(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:(groupCode="")||(pageNo="")||(gouprHpCode="") "201^参数不能为空！"
	s baseInfoRowId = $o(^DHCPEPreGBI(0,"Code",groupCode,""))
	q:(baseInfoRowId="") "201^团体ID有误！"
	s gn = $p(^DHCPEPreGBI(baseInfoRowId),"^",2)
	s checkTure = ""
	s gidVal=""
	f  s gidVal = $o(^DHCPEPreGADM(0,"PGBI",baseInfoRowId,gidVal)) q:(gidVal="")||(checkTure="true")  do
	.s gid = gidVal
	.s hpCode = $p(^DHCPEPreGADM(gid),"^",24)
	.s hpCode=$$ALPHAUP^SSUTIL4(hpCode)
	.s gouprHpCode=$$ALPHAUP^SSUTIL4(gouprHpCode)
	.q:(hpCode'=gouprHpCode)
	.s checkTure="true"
	q:(gid="") "999^团体ID或团体代码有误！"
	q:(checkTure'="true") "999^团体ID或团体代码有误！"
	
	s retStr = ""
	
	s ret=0
	s retCode = 0
	s noReserveNum = 0
	i (pageNo<=1)  d
	.s ret=..NoReservationPageInfo(gid,name,departName)
	.s retCode = $p(ret,"^",1)
	.s noReserveNum = $p(ret,"^",2)
	q:retCode'=0 "-100^无成员信息！"
	
	s PreADMID = ""
	f  s PreADMID = $o(^NoReservationPage("Page",gid,pageNo,PreADMID)) q:PreADMID=""  do
	.s PIBIID=$P(^DHCPEPreIADM(PreADMID),"^",1)
	.s Name = $P(^DHCPEPreIBI(PIBIID),"^",2)
	.q:(name'="")&&'(Name[name)
	.s DepartName = $P(^DHCPEPreIBI(PIBIID),"^",11)
	.q:(departName'="")&&'(DepartName[departName)
	.s Sex=$P(^DHCPEPreIBI(PIBIID),"^",3)
	.s sexDesc = $P($G(^CT("SEX",Sex)),"^",2)
	.s PAPMINo= $P(^DHCPEPreIBI(PIBIID),"^",1)
	.s PIADMHPNo=$P(^DHCPEPreIADM(PreADMID),"^",27)
	
	.s myObj=##class(HS.Temp.ReservationDetail).%New()
	.s myObj.name = Name
	.s myObj.sexDesc = sexDesc
	.s myObj.deparName = DepartName
	.s myObj.pAPMINo=PAPMINo
	.s myObj.pIADMHPNo=PIADMHPNo
	
	.s sc=myObj.XMLExportToString(.XML,"ReservationDetail")
	.i '$$$ISERR(sc)  d
	..s retStr=retStr_XML
	
	s nextPageExistFlg = "303"
	s nextPageNo = pageNo + 1
	s:$d(^NoReservationPage("Page",gid,nextPageNo)) nextPageExistFlg = "1029"
	
	q "<total>"_nextPageExistFlg_"</total><totalNum>"_noReserveNum_"</totalNum><gid>"_gid_"</gid><groupName>"_gn_"</groupName>"_retStr
	
	;^DHCPEPreIADM(0,"PGADM",,)
]]></Implementation>
</Method>

<Method name="NoReservationPageInfo">
<Description>
w ##CLASS(HS.BL.ExaminationRegister).NoReservationPageInfo("24")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>gid:%String,name:%String="",departName:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	k ^NoReservationPage("Page",gid)
	s noReserveNum = 0
	s count = 0
	s page = 1
	s result = 1
	s rowId = ""
	f  s rowId = $O(^DHCPEPreIADM(0,"PGADM",gid,rowId)) q:rowId=""  d
	
	.s PIBIID=$P(^DHCPEPreIADM(rowId),"^",1)
	.s Name = $P(^DHCPEPreIBI(PIBIID),"^",2)
	.s DepartName = $P(^DHCPEPreIBI(PIBIID),"^",11)
	.q:(name'="")&&'(Name[name)
	.q:(departName'="")&&'(DepartName[departName)
		
	.s Status=$P(^DHCPEPreIADM(rowId),"^",8)
	.q:(Status="CANCELPE")||(Status="ARRIVED")
	.s PeDate = $P(^DHCPEPreIADM(rowId),"^",4)
	.q:((PeDate>=+$H))&&(Status="REGISTERED")
	.q:($D(^User.DHCPENetPreRecordI("NPRPreIADMIndex"," "_rowId)))
	.s result = 0
	.s noReserveNum = noReserveNum + 1
	.s ^NoReservationPage("Page",gid,page,rowId) = gid_"^"_page_"^"_rowId
	.s count=count+1
	.i count>=10  do
	..s count=0
	..s page=page+1
	q result_"^"_noReserveNum
]]></Implementation>
</Method>

<Method name="CheckRegNoAndIdCard">
<Description><![CDATA[
w ##CLASS(HS.BL.ExaminationRegister).CheckRegNoAndIdCard("<Request><patientRegNo>13122165</patientRegNo><idCard>210902198008093027</idCard></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s patientRegNo=$TR(request.patientRegNo,$c(0))
		s idCard=$TR(request.idCard,$c(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:(patientRegNo="")||(idCard="") "201^参数不能为空！"
	s idCard=$$ALPHAUP^SSUTIL4(idCard)
	s papmiDr = ""
	s resultCode = ""
	s papmiDr=$o(^PAPERi("PAPMI_PatNo",$$ALPHAUP^SSUTIL4(patientRegNo),""))
	s:papmiDr="" resultCode="1"
	q:(resultCode'="") "-202^登记号不存在"
	s activeFlg = $p(^PAPER(papmiDr,"PAT",1),"^",6)
	s:(activeFlg="N") resultCode="2"
	q:(resultCode'="") "-203^登记号未激活"
	s patientIdNo=$p($g(^PAPER(papmiDr,"PAT",3)),"^",6)
	i patientIdNo'="" do
	.s patientIdNo=$$ALPHAUP^SSUTIL4(patientIdNo)
	s:(patientIdNo'="")&(patientIdNo'=idCard) resultCode="3"
	s:(patientIdNo="")&(idCard'="") resultCode="3"
	q:(resultCode'="") "-204^登记号与身份证号不匹配"

	
	q resultCode
]]></Implementation>
</Method>

<Method name="GetHisPreItemList">
<Description><![CDATA[
Descript:获取HIS已选项目（已缴费）
Creater:	王国营
CreateDate:	2017-05-02
Table:DHC_PE_PreIOrdItem
Input:体检号   科室ID
Output:	
Return：
w ##class(HS.BL.ExaminationRegister).GetHisPreItemList("<Request><peId>PTAAAP0001</peId><locId>263</locId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s peId=$TR(request.peId,$c(0))
		s locId=$TR(request.locId,$c(0))
		s netItemStr=$TR(request.netItemStr,$c(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:(peId="")||(locId="") "-201^参数不能为空！"
	s preAdmId=$o(^DHCPEPreIADM(0,"HPNo",peId,""))
	q:preAdmId="" "-4^体检号不存在"
	s oldLocId=$p(^DHCPEPreIADM(preAdmId),"^",26)
	q:oldLocId'=locId "-5^体检号与科室不对应"
	s flag=0
	s:netItemStr'="" flag=1
	s:netItemStr'="" netItemStr=..RemoveSetsItem("",netItemStr)
	s retStr=""
	s setsFee=""
	s temSetsIDStr=""
	s sub=0
	f  s sub=$o(^DHCPEPreIADM(preAdmId,"ORDITEM",sub))  q:sub=""  d
	.s peOrdItemId=preAdmId_"||"_sub
	.s myObj=##class(HS.Temp.PeOrdItem).%New()
	.s ItemStatus=$p(^DHCPEPreIADM(preAdmId,"ORDITEM",sub),"^",16)
	.q:ItemStatus'="1"
	.s ItemMastId=$p(^DHCPEPreIADM(preAdmId,"ORDITEM",sub),"^",1)
	.s myObj.hisItemId=ItemMastId
	.s crmoId=$O(^DHCPECRMO(0,"CRMORI",peOrdItemId,""))
	.s payFlag=""
	.s:crmoId'="" payFlag=$P(^DHCPECRMO(crmoId),"^",4)
	.s:(payFlag'="")&&(("NP||OC")'[payFlag) myObj.payFlag="Y"
	
	.s myObj.preType=$p(^DHCPEPreIADM(preAdmId,"ORDITEM",sub),"^",18)
	.s myObj.price=$p(^DHCPEPreIADM(preAdmId,"ORDITEM",sub),"^",14)
	.s ordEnt=$p(^DHCPEPreIADM(preAdmId,"ORDITEM",sub),"^",2)
	
	.i ordEnt'="" d
	..s myObj.setsFlag="Y"
	..s setsID=$p(^DHCPEPreIADM($p(ordEnt,"||",1),"ORDENT",$p(ordEnt,"||",2)),"^",1)
	..q:temSetsIDStr[setsID
	..s temSetsIDStr=temSetsIDStr_setsID_"^"
	..s setsFee=setsFee+$p(^DHCPEPreIADM($p(ordEnt,"||",1),"ORDENT",$p(ordEnt,"||",2)),"^",7)

	.s myObj.itemDesc=$p($G(^ARCIM($p(ItemMastId,"||",1),$p(ItemMastId,"||",2),1)),"^",2)
    .s VIPLevelId=$G(^DHCPEDataEx("DHCPEStationOrder","VIPLevelType",ItemMastId))
    .i VIPLevelId'="" d 
    ..s VIPLevel=$p($G(^DHCPEVIPLevel("VIP",VIPLevelId)),"^",2)
    ..s myObj.levelId=VIPLevelId
    ..s myObj.levelDesc=VIPLevel
	.s sexId=$G(^DHCPEDataEx("DHCPEStationOrder","Sex",ItemMastId))
    .i sexId'="" d 
    ..s myObj.sexCode=$p($G(^CT("SEX",sexId)),"^",1)
    ..s myObj.sexDesc=$p($G(^CT("SEX",sexId)),"^",2)
	
	.s stId=0
	.f  s stId=$o(^DHCPEST(stId))  q:stId=""  d
	..s stSub=0
	..f  s stSub=$o(^DHCPEST(0,"STORD_ARCIM",ItemMastId,stId,stSub))  q:stSub=""  d
	...s myObj.stationId=stId
	...s myObj.stationDesc=$p(^DHCPEST(stId),"^",2)
	...s myObj.content=$p(^DHCPEST(stId,"O",stSub),"^",9)
	.//上一步过来的
	.q:(flag=1)&&(myObj.payFlag'="Y")&&(myObj.setsFlag'="Y")&&(myObj.preType="N")
	.i flag=1 d
	..s:myObj.payFlag="Y" netItemStr=$Replace(netItemStr,myObj.hisItemId_"^","")
	..s:myObj.setsFlag="Y" netItemStr=$Replace(netItemStr,myObj.hisItemId_"^","")
	.s sc=myObj.XMLExportToString(.XML,"PeOrdItem")
	.i '$$$ISERR(sc)  d
	..s retStr=retStr_XML
	//添加网上编辑的项目
	i netItemStr'="" d
	.f i=1:1:$L(netItemStr,"^") d
	..s itemId=$P(netItemStr,"^",i)
	..s myObj=##class(HS.Temp.PeOrdItem).%New()
	..s myObj.hisItemId=itemId
	..s myObj.itemDesc=$p($G(^ARCIM($p(itemId,"||",1),$p(itemId,"||",2),1)),"^",2)
	..s PatFeeType=""
    ..i locId'="" d
    ...s PatFeeType=$G(^DHCPEDataEx("DHCPEStationOrder","SpecialItem",itemId,locId))
	..s price=##class(web.DHCPE.Handle.ARCItmMast).GetItmPrice(itemId,"","","","","","","","",PatFeeType)
	..s:$f(price,".")=2 price="0"_price
	..s myObj.price=price
	..s myObj.payFlag="N"
	..s myObj.preType="N"
	..s VIPLevelId=$G(^DHCPEDataEx("DHCPEStationOrder","VIPLevelType",itemId))
    ..i VIPLevelId'="" d 
    ...s VIPLevel=$p($G(^DHCPEVIPLevel("VIP",VIPLevelId)),"^",2)
    ...s myObj.levelId=VIPLevelId
    ...s myObj.levelDesc=VIPLevel
	..s sexId=$G(^DHCPEDataEx("DHCPEStationOrder","Sex",itemId))
    ..i sexId'="" d 
    ...s myObj.sexCode=$p($G(^CT("SEX",sexId)),"^",1)
    ...s myObj.sexDesc=$p($G(^CT("SEX",sexId)),"^",2)
    ..s stId=0
	..f  s stId=$o(^DHCPEST(stId))  q:stId=""  d
	...s stSub=0
	...f  s stSub=$o(^DHCPEST(0,"STORD_ARCIM",itemId,stId,stSub))  q:stSub=""  d
	....s myObj.stationId=stId
	....s myObj.stationDesc=$p(^DHCPEST(stId),"^",2)
	....s myObj.content=$p(^DHCPEST(stId,"O",stSub),"^",9)
	..s sc=myObj.XMLExportToString(.GXML,"PeOrdItem")
	..i '$$$ISERR(sc)  d
	...s retStr=retStr_GXML
	
	
	s:setsFee'="" retStr="<setsFee>"_setsFee_"</setsFee>"_retStr
	q retStr
]]></Implementation>
</Method>

<Method name="GetNetAvailItemList">
<Description><![CDATA[
Descript:获取网上可选项目
Creater:	王国营
CreateDate:	2017-05-02
Table:DHC_PE_StationOrder
Input:
Output:	
Return：
w ##class(HS.BL.ExaminationRegister).GetNetAvailItemList("<Request><itemDesc>心电图</itemDesc></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	s locId=""
	s levelId=""
	s sex=""
	if (params'="") {
		s reader=##class(%XML.Reader).%New()
		s sc=reader.OpenString(params)
		if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
		do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
		if reader.Next(.request,.sc){
			s levelDesc=$TR(request.levelDesc,$c(0))
			s sex=$TR(request.sex,$c(0))
			s locId=$TR(request.locId,$c(0))
			s peId=$TR(request.peId,$c(0))
			s itemDesc=$TR(request.itemDesc,$c(0))
		}else{
			if $$$ISERR(sc) q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
		}
	}
	s retStr=""
	s stId=0
	f  s stId=$o(^DHCPEST(stId))  q:stId=""  d
	.s stSub=0
	.f  s stSub=$o(^DHCPEST(stId,"O",stSub))  q:stSub=""  d
	..s data=^DHCPEST(stId,"O",stSub)
	..s netFlag=$p(data,"^",8)
	..q:netFlag'="Y"
	..s ARCIMDR=$p(data,"^",1)
	..s ARCIMDRDesc=$p($G(^ARCIM($p(ARCIMDR,"||",1),$p(ARCIMDR,"||",2),1)),"^",2)
	..q:(itemDesc'="")&&(ARCIMDRDesc'[itemDesc)
	..s EffDate=$p(^ARCIM($p(ARCIMDR,"||",1),$p(ARCIMDR,"||",2),7),"^",1)
	..i EffDate="" s EffDate=+$H+1
	..q:EffDate<+$H
	
	..s itemCategoryId=$G(^DHCPEDataEx("DHCPEStationOrder","ItemCategory",ARCIMDR))
	..q:itemCategoryId=""
	..s itemCategoryDesc=$p($g(^DHCPENetItemCategory(itemCategoryId)),"^",2)
	..s itemCategorySort=$p($g(^DHCPENetItemCategory(itemCategoryId)),"^",3)
	
	..s VIPLevelId=$G(^DHCPEDataEx("DHCPEStationOrder","VIPLevelType",ARCIMDR))
	..s VIPLevelDesc=""
	..s:VIPLevelId'="" VIPLevelDesc=$p($g(^DHCPEVIPLevel(VIPLevelId)),"^",2)
	..q:(VIPLevelId'="")&&(levelDesc'="")&&(VIPLevelDesc'=levelDesc)
	..s sexId=$G(^DHCPEDataEx("DHCPEStationOrder","Sex",ARCIMDR))
	..s sexCode=""
	..s:sexId'="" sexCode=$p($G(^CT("SEX",sexId)),"^",1)
	..q:(sexId'="")&&(sex'="")&&(sexCode'=sex)
	..s myObj=##class(HS.Temp.PeOrdItem).%New()
	..s myObj.stationId=stId
	..s myObj.stationDesc=$p(^DHCPEST(stId),"^",2)
	..s myObj.itemCategoryId=itemCategoryId
	..s myObj.itemCategoryDesc=itemCategoryDesc
	..s myObj.itemCategorySort=itemCategorySort
	..s myObj.content=$p(^DHCPEST(stId,"O",stSub),"^",9)
	..s myObj.hisItemId=ARCIMDR
	..s myObj.itemDesc=ARCIMDRDesc
	
	..s vPatFeeType=""
	..s preAdmId=""
	..i peId'="" d
	...s preAdmId=$o(^DHCPEPreIADM(0,"HPNo",peId,""))
	...q:preAdmId=""
	...s vVIPID=##class(web.DHCPE.PreCommon).GetVIPLevel("Pre",preAdmId)
 	...s vVIPID=$P(vVIPID,"^",1)
 	...s vPatFeeType=$G(^DHCPEDataEx("DHCPEPreIADM","ADMFeeType",preAdmId))
 	..s PatFeeType=""
    ..i locId'="" d
    ...s PatFeeType=$G(^DHCPEDataEx("DHCPEStationOrder","SpecialItem",ARCIMDR,locId))
	..i PatFeeType="" s PatFeeType=vPatFeeType
	..s myObj.price=##class(web.DHCPE.Handle.ARCItmMast).GetItmPrice(ARCIMDR,"","","","","","","",preAdmId,PatFeeType)
	..i VIPLevelId'="" d
	...s myObj.levelId=VIPLevelId
    ...s myObj.levelDesc=VIPLevelDesc
    ..i sexId'="" d
    ...s myObj.sexCode=$p($G(^CT("SEX",sexId)),"^",1)
    ...s myObj.sexDesc=$p($G(^CT("SEX",sexId)),"^",2)
    
    ..s sc=myObj.XMLExportToString(.XML,"PeOrdItem")
	..i '$$$ISERR(sc)  d
	...s retStr=retStr_XML
	q retStr
]]></Implementation>
</Method>

<Method name="UpdateNetPreItem">
<Description>
Descript:更新网上自选项目（团体或个人已缴费预约）
Creater:	王国营
CreateDate:	2017-5-5
Table:DHC_PE_PreIOrdItem
Input:netItemStr=医嘱ID~价格#医嘱ID~价格#医嘱ID~价格#  
Output:	
Return：
w ##class(HS.BL.ExaminationRegister).UpdateNetPreItem(1006,"1889||1~20#8850||1~30#8958||1~23#",1)						</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>PreAdmId,NetItemStr,UserID:%String=1</FormalSpec>
<Implementation><![CDATA[
	s retInfo=""
	;先刪除
	s existStr=""
	s deleteStr=""
	s $zt="ErrHandle"
	s preItemSub=0 
	f  s preItemSub=$o(^DHCPEPreIADM(PreAdmId,"ORDITEM",preItemSub))  q:preItemSub=""  d
	.q:($d(^DHCPEPreIADM(PreAdmId,"ORDITEM",preItemSub))=0)||($d(^DHCPEPreIADM(PreAdmId,"ORDITEM",preItemSub))=10)
	.s ItemStatus=$p(^DHCPEPreIADM(PreAdmId,"ORDITEM",preItemSub),"^",16)
	.q:ItemStatus'="1"
	.s preType=$p(^DHCPEPreIADM(PreAdmId,"ORDITEM",preItemSub),"^",18)
	.q:preType'="N"
	.s ItemMastId=$p(^DHCPEPreIADM(PreAdmId,"ORDITEM",preItemSub),"^",1)
	.s:(NetItemStr'[ItemMastId)||(NetItemStr="") deleteStr=deleteStr_ItemMastId_"#"_PreAdmId_"||"_preItemSub_"^"
	.s:(NetItemStr[(ItemMastId_"~")) existStr=existStr_ItemMastId_"^"
	i deleteStr'="" d
	.s deleteNum=$l(deleteStr,"^")
	.f i=1:1:deleteNum-1 d
	..q:retInfo'=""
	..s delRet=##class(web.DHCPE.PreItemList).IDeleteItem(PreAdmId,"PERSON",$p($p(deleteStr,"^",i),"#",2))
	..i delRet'="" d 
	...s retInfo="-16^删除体检项目失败^"_delRet
	;再插入
	i NetItemStr'="" d
	.s addNum=$l(NetItemStr,"@")
	.f i=1:1:addNum-1 d
	..q:retInfo'=""
	..s addItemId=$p($p(NetItemStr,"@",i),"~",1)
	..q:existStr[addItemId
	..s addRet=##class(web.DHCPE.PreItemList).IInsertItem(PreAdmId,"PERSON","ADD",addItemId,"",UserID)
	..i addRet'="" d
	...s retInfo="-17^插入体检项目失败^"_addRet
	..i addRet=""  d  
	...;将刚插入的项目预约类型改为网上预约 N
	...s newSub=0
	...f  s newSub=$o(^DHCPEPreIADM(0,"ItmMast",addItemId,PreAdmId,newSub)) q:newSub=""  d
	....q:'$d(^DHCPEPreIADM(PreAdmId,"ORDITEM",newSub))
	....q:$p(^DHCPEPreIADM(PreAdmId,"ORDITEM",newSub),"^",16)'=1
	....s newPreItemId=PreAdmId_"||"_newSub
	....s obj=##class(User.DHCPEPreIOrdItem).%OpenId(newPreItemId)
	....s obj.PIOIPreType="N"
	....s sc=obj.%Save()
	....i $$$ERROR(sc) d
	.....s retInfo="-18^更新项目预约类型失败^"_$System.Status.GetErrorText(sc)
	q:retInfo'="" retInfo
	
	
	s status=$p($g(^DHCPEPreIADM(PreAdmId)),"^",8)
	if (status="REGISTERED"){
		;确认加项医嘱
		s confirmRet=##class(web.DHCPE.TransAdmInfo).ConfirmAddOrdItem(PreAdmId,UserID)
		s:confirmRet'="" retInfo="-19^确认加项失败^"_confirmRet
	}else{
		;登记
		s registerRet= ##class(web.DHCPE.DHCPEIAdm).UpdateIADMInfo(PreAdmId, 2,0,UserID,0)
		s:registerRet'=0 retInfo="-20^登记失败^"_registerRet
	}
	q retInfo
ErrHandle
	s rtn="-100^更新网上自选项目失败"
	q:$ze="" rtn
	q rtn_"^"_$ze
]]></Implementation>
</Method>

<Method name="GetNoPaidNetPreItemList">
<Description><![CDATA[
Descript:获取网上自选项目（未缴费）
Creater:	王国营
CreateDate:	2017-05-07
Table:DHC_PE_NetPreRecord DHC_PE_NetPreItemRecord
Input:
Output:	
Return：
w ##class(HS.BL.ExaminationRegister).GetNoPaidNetPreItemList("<Request><regId></regId><ordSetId>8</ordSetId><locId>263</locId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s regId=$TR(request.regId,$c(0))
		s locId=$TR(request.locId,$c(0))
		s ordSetId=$TR(request.ordSetId,$c(0))
		s netItemStr=$TR(request.netItemStr,$c(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:locId="" "-201^科室代码不能为空！"
	s retStr=""
	s itemIds=""
	s $zt="ErrHandle"
	s setsFee=""
	s flag=0 //上一步返回的标记  1表示从上一步返回
	s:netItemStr'="" flag=1
	s:netItemStr'="" netItemStr=..RemoveSetsItem(ordSetId,netItemStr)
	;取套餐内的项目
	i ordSetId'="" d
	.s netSetsID=$O(^User.DHCPENetOrdSetsI("HisSetsIndex",ordSetId,""))
	.q:netSetsID=""
	.s setsFee=$lg(^User.DHCPENetOrdSetsD(netSetsID),4)
	.s setsFactFee=..GetSetsFactPrice(ordSetId,locId)
	.s:setsFactFee<setsFee setsFee=setsFactFee
	
	.s itemIds=##class(web.DHCPE.Handle.ARCOrdSets).GetItemIdsBySet(ordSetId)
	.q:itemIds=""
	.s itemIds=itemIds_"^"
	.;医嘱ID#1^医嘱ID#1    #1表示套餐项目
	.s itemIds=$Replace(itemIds,"^","#1^")	
	
	s:netItemStr'="" itemIds=itemIds_netItemStr_"^"
	i (ordSetId="")&&(flag=1) d
	.s deMustId=""
	.f  s deMustId=$O(^DHCPEDataEx("DHCPEStationOrder","MustCheck",deMustId)) q:deMustId=""  d
	..s deMustFlag=^DHCPEDataEx("DHCPEStationOrder","MustCheck",deMustId)
	..q:deMustFlag'="Y"
	..s itemIds=$Replace(itemIds,deMustId_"^","")
	
	
	
	;取DHC_PE_NetPreItemRecord记录
	i (regId'="")&&(flag=0) d
	.s netRecordObj=##class(User.DHCPENetPreRecord).%OpenId(regId)
	.q:netRecordObj=""
	.s status=netRecordObj.NPRStatus
	.q:status'=0
	.s currLocId=netRecordObj.NPRLocID
	.q:currLocId'=locId
	.s recordSub=0
	.f  s recordSub=$O(^User.DHCPENetPreRecordD(regId,"NPRPreItemRecord",recordSub)) q:recordSub=""  d
	..s itemIds=itemIds_$lg(^User.DHCPENetPreRecordD(regId,"NPRPreItemRecord",recordSub),2)_"^"
	
	
	
	i itemIds'="" d
	.s itemCount=$l(itemIds,"^")
	.f i=1:1:itemCount-1 d
	..s itemId=$p(itemIds,"^",i)
	..s setsFlag="N"  //套餐标记
	..i itemId["#1" d
	...s itemId=$p(itemId,"#",1)
	...s setsFlag="Y"
	..s myObj=##class(HS.Temp.PeOrdItem).%New()
	..s myObj.hisItemId=itemId
	..s myObj.itemDesc=$p($G(^ARCIM($p(itemId,"||",1),$p(itemId,"||",2),1)),"^",2)
	..s PatFeeType=""
    ..i locId'="" d
    ...s PatFeeType=$G(^DHCPEDataEx("DHCPEStationOrder","SpecialItem",itemId,locId))
	..s price=##class(web.DHCPE.Handle.ARCItmMast).GetItmPrice(itemId,"","","","","","","","",PatFeeType)
	..s:$f(price,".")=2 price="0"_price
	..s myObj.price=price
	..s myObj.payFlag="N"
	..s myObj.preType="N"
	..s myObj.setsFlag=setsFlag
	..s VIPLevelId=$G(^DHCPEDataEx("DHCPEStationOrder","VIPLevelType",itemId))
    ..i VIPLevelId'="" d 
    ...s VIPLevel=$p($G(^DHCPEVIPLevel("VIP",VIPLevelId)),"^",2)
    ...s myObj.levelId=VIPLevelId
    ...s myObj.levelDesc=VIPLevel
	..s sexId=$G(^DHCPEDataEx("DHCPEStationOrder","Sex",itemId))
    ..i sexId'="" d 
    ...s myObj.sexCode=$p($G(^CT("SEX",sexId)),"^",1)
    ...s myObj.sexDesc=$p($G(^CT("SEX",sexId)),"^",2)
    ..s stId=0
	..f  s stId=$o(^DHCPEST(stId))  q:stId=""  d
	...s stSub=0
	...f  s stSub=$o(^DHCPEST(0,"STORD_ARCIM",itemId,stId,stSub))  q:stSub=""  d
	....s myObj.stationId=stId
	....s myObj.stationDesc=$p(^DHCPEST(stId),"^",2)
	....s myObj.content=$p(^DHCPEST(stId,"O",stSub),"^",9)
	..s sc=myObj.XMLExportToString(.XML,"PeOrdItem")
	..i '$$$ISERR(sc)  d
	...s retStr=retStr_XML
	
	//没有任何 项目时，取必选项目
	i (itemIds="")||((flag=1)&&(ordSetId="")) d
	.s mustId=""
	.f  s mustId=$O(^DHCPEDataEx("DHCPEStationOrder","MustCheck",mustId)) q:mustId=""  d
	..s mustFlag=^DHCPEDataEx("DHCPEStationOrder","MustCheck",mustId)
	..q:mustFlag'="Y"
	..s myObj=##class(HS.Temp.PeOrdItem).%New()
	..s myObj.mustFlag="Y"
	..s myObj.hisItemId=mustId
	..s myObj.itemDesc=$p($G(^ARCIM($p(mustId,"||",1),$p(mustId,"||",2),1)),"^",2)
	..s PatFeeType=""
    ..i locId'="" d
    ...s PatFeeType=$G(^DHCPEDataEx("DHCPEStationOrder","SpecialItem",mustId,locId))
	..s price=##class(web.DHCPE.Handle.ARCItmMast).GetItmPrice(mustId,"","","","","","","","",PatFeeType)
	..s:$f(price,".")=2 price="0"_price
	..s myObj.price=price
	..s myObj.payFlag="N"
	..s myObj.preType="N"
	..s VIPLevelId=$G(^DHCPEDataEx("DHCPEStationOrder","VIPLevelType",mustId))
    ..i VIPLevelId'="" d 
    ...s VIPLevel=$p($G(^DHCPEVIPLevel("VIP",VIPLevelId)),"^",2)
    ...s myObj.levelId=VIPLevelId
    ...s myObj.levelDesc=VIPLevel
	..s sexId=$G(^DHCPEDataEx("DHCPEStationOrder","Sex",mustId))
    ..i sexId'="" d 
    ...s myObj.sexCode=$p($G(^CT("SEX",sexId)),"^",1)
    ...s myObj.sexDesc=$p($G(^CT("SEX",sexId)),"^",2)
    ..s stId=0
	..f  s stId=$o(^DHCPEST(stId))  q:stId=""  d
	...s stSub=0
	...f  s stSub=$o(^DHCPEST(0,"STORD_ARCIM",mustId,stId,stSub))  q:stSub=""  d
	....s myObj.stationId=stId
	....s myObj.stationDesc=$p(^DHCPEST(stId),"^",2)
	....s myObj.content=$p(^DHCPEST(stId,"O",stSub),"^",9)
	..s sc=myObj.XMLExportToString(.XML,"PeOrdItem")
	..i '$$$ISERR(sc)  d
	...s retStr=retStr_XML
	
	s:setsFee'="" retStr="<setsFee>"_setsFee_"</setsFee>"_retStr
	q retStr
ErrHandle
	s rtn="-100^获取项目失败"
	q:$ze="" rtn
	q rtn_"^"_$ze
]]></Implementation>
</Method>

<Method name="GetSetsFactPrice">
<Description>
获取套餐实际价格
w ##class(HS.BL.ExaminationRegister).GetSetsFactPrice(8,263)</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>OrdSetID,LocID</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s retPrice=0
	q:OrdSetID="" retPrice
	s itemIds=##class(web.DHCPE.Handle.ARCOrdSets).GetItemIdsBySet(OrdSetID)
	q:itemIds="" retPrice
	f i=1:1:$l(itemIds,"^") d
	.s itemID=$p(itemIds,"^",i)
	.s PatFeeType=""
    .i LocID'="" d
    ..s PatFeeType=$G(^DHCPEDataEx("DHCPEStationOrder","SpecialItem",itemID,LocID))
	.s price=##class(web.DHCPE.Handle.ARCItmMast).GetItmPrice(itemID,"","","","","","","","",PatFeeType)
	.s retPrice=retPrice+price
	q retPrice
]]></Implementation>
</Method>

<Method name="UpdateNoPaidNetPreItem">
<Description>
Descript:更新网上自选项目（未缴费）
Creater:	王国营
CreateDate:	2017-05-07
Table:DHC_PE_NetPreRecord DHC_PE_NetPreItemRecord
Input:
Output:	
Return：
w ##class(HS.BL.ExaminationRegister).UpdateNoPaidNetPreItem(1,8,"803||1~4.5@1966||1~0.64@")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>NetRecordId,OrdSetId,netItemStr</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:NetRecordId="" "-1^网上预约ID不能为空"
	q:(OrdSetId="")&&(netItemStr="") "-2^请选择体检项目"
	s ItemIds=..RemoveSetsItem(OrdSetId,netItemStr)
	q:+ItemIds<0 ItemIds
	s retInfo=..UpdateNoPaidNetPreItem1(NetRecordId,ItemIds)
	q retInfo
]]></Implementation>
</Method>

<Method name="RemoveSetsItem">
<Description>
将自选项目中属于套餐的项目剔除,并过滤掉价格  套餐ID为空时只过滤掉价格
Creater:	王国营
CreateDate:	2017-05-07
Input: OrdSetId:套餐ID   netItemStr: "项目ID~价格@项目ID~价格@项目ID~价格@" 
Output:	"项目ID^项目ID^项目ID"
Return：
w ##class(HS.BL.ExaminationRegister).RemoveSetsItem("","803||1~4.5@1966||1~0.64@1089||1~6.81@1889||1  ~3.85@8866||1~225@9894||1~20@10296||1~80@")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>OrdSetId,netItemStr</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s flag=0
	i OrdSetId'="" d
	.s:netItemStr="" flag=1
	.q:netItemStr=""
	.s ordSetItemIds=##class(web.DHCPE.Handle.ARCOrdSets).GetItemIdsBySet(OrdSetId)
	.q:ordSetItemIds=""
	.s ordSetItemIds=..RemoveRepeatedItem(ordSetItemIds)
	.f i=1:1:$l(ordSetItemIds,"^") d
	..q:flag=1
	..s ordSetItemId=$p(ordSetItemIds,"^",i)
	..;  netItemStr="1966||1~20#13339||1~30#13340||1~20#"
	..s:netItemStr'[ordSetItemId flag=1 
	..;将netItemStr中属于套餐的项目剔除
	..s sPos=$f(netItemStr,ordSetItemId)
	..s ePos=$f(netItemStr,"@",sPos)
	..s tempStr=$e(netItemStr,sPos-$l(ordSetItemId),ePos-1)
	..s netItemStr=$replace(netItemStr,tempStr,"")
	q:flag=1 "-3^网上自选项目与套餐内容不匹配！"
	s ItemIds=""
	i netItemStr'="" d
	.f i=1:1:$l(netItemStr,"@")-1 d
	..s tempStr=$p(netItemStr,"@",i)
	..i ItemIds'="" d
	...s ItemIds=ItemIds_"^"_$p(tempStr,"~",1)
	..i ItemIds="" d
	...s ItemIds=$p(tempStr,"~",1)
	q ItemIds
]]></Implementation>
</Method>

<Method name="RemoveRepeatedItem">
<Description>
去重   wgy
w ##class(HS.BL.ExaminationRegister).RemoveRepeatedItem("3003||1^3003||1^3003||1^3003||1^03||1")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>ItemIds</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s retVal="^"
	q:ItemIds="" ""
	f i=1:1:$l(ItemIds,"^") d
	.s temId=$p(ItemIds,"^",i)
	.;前后^界定医嘱ID的开始与结束
	.q:retVal[("^"_temId_"^")  
	.s retVal=retVal_temId_"^"
	q $e(retVal,2,($l(retVal)-1))
]]></Implementation>
</Method>

<Method name="UpdateNoPaidNetPreItem1">
<ClassMethod>1</ClassMethod>
<FormalSpec>NetRecordId,ItemIds</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s retInfo=""
	s existStr=""
	s deleteStr=""
	s $zt="ErrHandle"
	s sub=0
	;先刪除
	TS
	f  s sub=$O(^User.DHCPENetPreRecordD(NetRecordId,"NPRPreItemRecord",sub)) q:sub=""  d
	.s itemId=$lg(^User.DHCPENetPreRecordD(NetRecordId,"NPRPreItemRecord",sub),2)
	.s:(ItemIds'[itemId)||(ItemIds="") deleteStr=deleteStr_itemId_"#"_NetRecordId_"||"_sub_"^"
	.s:(ItemIds[itemId) existStr=existStr_itemId_"^"
	i deleteStr'="" d
	.s deleteNum=$l(deleteStr,"^")
	.f i=1:1:deleteNum-1 d
	..q:retInfo'=""
	..s sc=##class(User.DHCPENetPreItemRecord).%DeleteId($p($p(deleteStr,"^",i),"#",2))
	..i $$$ISERR(sc) d 
	...s retInfo="-16^删除体检项目失败^"_$System.Status.GetErrorText(sc)
	;再插入
	i ItemIds'="" d
	.s addNum=$l(ItemIds,"^")
	.f i=1:1:addNum d
	..q:retInfo'=""
	..s addItemId=$p(ItemIds,"^",i)
	..q:existStr[addItemId
	..s netItemObj=##class(User.DHCPENetPreItemRecord).%New(NetRecordId)
	..d netItemObj.NPIRParRefSetObjectId(NetRecordId)
	..d netItemObj.NPIRItemDRSetObjectId(addItemId)
	..s sc=netItemObj.%Save()
	..i $$$ISERR(sc) d 
	...s retInfo="-17^插入体检项目失败^"_$System.Status.GetErrorText(sc)
	i retInfo'="" TRO
	e  TC

	q retInfo
ErrHandle
	s rtn="-100^更新网上自选项目失败^"_retInfo
	TRO
	q:$ze="" rtn
	q rtn_"^"_$ze
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// w ##class(HS.BL.ExaminationRegister).WgyTest("HS10314", "<Request><patientIdNo>371083199003285512</patientIdNo></Request>")

]]></Content>
</UDLText>

<Method name="WgyTest">
<ClassMethod>1</ClassMethod>
<FormalSpec>RequestCode:%String,RequestXML:%String</FormalSpec>
<Implementation><![CDATA[
	/*s PreAdmId=1034
	TS
	&SQL(Update SQLUSER.DHC_PE_PreIOrdItem set PIOI_PreType="N"
		where PIOI_ParRef = :PreAdmId)
	TC
	q SQLCODE*/
	s obj=##class(WgyWs.PublicServiceSoap).%New()
	q obj.RequestSubmit(RequestCode,RequestXML)
]]></Implementation>
</Method>

<Method name="GroupNoPaidInfoCheck">
<Description><![CDATA[
Descript:团体未缴费信息验证
Creater:	王国营
CreateDate:	2017-05-12
Table:DHC_PE_PreGBaseInfo  DHC_PE_PreGADM
Input:
Output:	
Return：
w ##class(HS.BL.ExaminationRegister).GroupNoPaidInfoCheck("<Request><gouprHpCode>aaag</gouprHpCode><groupCode>G00000006</groupCode><locId>263</locId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s groupCode=$TR(request.groupCode,$c(0))
		s gouprHpCode=$TR(request.gouprHpCode,$c(0))
		s locId=$TR(request.locId,$c(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:(groupCode="")||(gouprHpCode="")||(locId="") "201^参数不能为空！"
	s baseInfoRowId = $o(^DHCPEPreGBI(0,"Code",groupCode,""))
	q:(baseInfoRowId="") "201^团体代码有误！"
	s gn = $p(^DHCPEPreGBI(baseInfoRowId),"^",2)
	s checkTure = ""
	s setsMust=0
	s gidVal=""
	f  s gidVal = $o(^DHCPEPreGADM(0,"PGBI",baseInfoRowId,gidVal)) q:(gidVal="")||(checkTure="true")  do
	.s gid = gidVal
	.s hpCode = $p(^DHCPEPreGADM(gid),"^",24)
	.s hpCode=$$ALPHAUP^SSUTIL4(hpCode)
	.s gouprHpCode=$$ALPHAUP^SSUTIL4(gouprHpCode)
	.q:(hpCode'=gouprHpCode)
	.s curLocId=$p(^DHCPEPreGADM(gid),"^",23)
	.q:(locId'=curLocId)
	.s status=$P(^DHCPEPreGADM(gid),"^",6)
	.q:status="CANCELPREREG"
	.s NetSetsMust=$G(^DHCPEDataEx("DHCPEPreGADM","NetSetsMust",gid))
	.s:NetSetsMust=1 setsMust=1
	.s checkTure="true"
	q:(gid="") "999^团体代码或验证码有误！"
	q:(checkTure'="true") "999^团体代码或验证码有误！"
	q "<groupName>"_gn_"</groupName><gid>"_gid_"</gid>"_"<setsMust>"_setsMust_"</setsMust>"
]]></Implementation>
</Method>

<Method name="GetHISUserInfoByIdCard">
<Description><![CDATA[
Descript:根据身份证号获取HIS基本信息
Creater:	王国营
CreateDate:	2017-05-15
Table:
Input:<Request><patientIdNo>身份证号</patientIdNo></Request>
Output:	
Return：
w ##class(HS.BL.ExaminationRegister).GetHISUserInfoByIdCard("<Request><patientIdNo>123456789054683851</patientIdNo></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-3^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	i $$$ISERR(sc)  q "-1^读取参数错误:"_$System.Status.GetErrorText(sc)
	d reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	while reader.Next(.request,.sc){
		s patientIdNo=$TR(request.patientIdNo,$c(0))
	}
	i $$$ISERR(sc)  q "-2^解析参数错误:"_$System.Status.GetErrorText(sc)
	q:$g(patientIdNo)="" "-3^参数不能为空"
	s cardNo=$$ALPHAUP^SSUTIL4(patientIdNo)
	s inString="^^^"_cardNo
	//	1		       登记号 2		      姓名 3		    性别编码4       性别 5		     生日 6		  客人类型编码 7		 	客人类型 8				电话号码9		电话号码10			移动电话 11			身份证号 12			      职业 13				14		            15			    16				      17		    	      18			         19				20			 			21				      血型 22			    23						日期 24				更新人编码 25		26		27     28      29        30        31        32              33          34         35               36                   37
	//PAPMIRowId	_"^"_RegNo		_"^"_PAPMIName	_"^"_PAPMISexDR	_"^"_PAPMISexDRName	_"^"_PAPMIDOB_"^"_PAPERSocialStatusDR_"^"_PAPERSocialStatusDRName	_"^"_""_		"^"_""			_"^"_PAPERTelH			_"^"_PAPMIID	_"^"_PAPMIPatCategoryDRName	_"^"_""			 _"^"_PAPERStName	 _"^"_PAPERZipDRName_"^"_PAPMIsecondphone_"^"_PAPERNationDRName	_"^"_PAPEREmail	_"^"_PAPERMaritalDR	_"^"_PAPERMaritalDRName	_"^"_PAPERBloodTypeDR_"^"_PAPERBloodTypeDRName	_"^"_""				_"^"_""					_"^"_""_"^"_""_"^"_Age_"^"_HCPDR_"^"_HCRDR_"^"_HCADR_"^"_HCADesc_"^"_CardNo_"^"_VIPLevel_"^"_MedicareCode_"^"_edcucationDesc_"^"_occupationDesc
	s userInfo=##class(web.DHCPE.PreIBaseInfo).GetHISIBaseInfo("","",inString)
	q:userInfo="" ""
	s myObj=##class(HS.Temp.UserInfo).%New()
	s myObj.dobDate=$p(userInfo,"^",6)
	s myObj.hisRegId=$p(userInfo,"^",1)
	s myObj.sexDesc=$p(userInfo,"^",5)
	s myObj.education=$p(userInfo,"^",36)
	s myObj.idCardNo=$p(userInfo,"^",12)
	s myObj.marriage=$p(userInfo,"^",21)
	s myObj.occupation=$p(userInfo,"^",37)
	s myObj.patientRegNo=$p(userInfo,"^",2)
	s myObj.telephoneNo=$p(userInfo,"^",11)
	s myObj.userName=$p(userInfo,"^",3)
	s sc=myObj.XMLExportToString(.XML,"UserInfo")
	i $$$ISERR(sc)  q "-11^获取内容失败:"_$System.Status.GetErrorText(sc)
	q XML
]]></Implementation>
</Method>

<Method name="GetHISIBaseInfo">
<Description>
根据身份证号从HIS获取患者信息
w ##class(HS.BL.ExaminationRegister).GetHISIBaseInfo("370830199008062270")
</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>IDCard</FormalSpec>
<Implementation><![CDATA[
	q:IDCard="" ""
	s PAPMIRowId=""
	s PAPMIRowId=$O(^PAPERi("PAPMI_ICPPBC",IDCard_"Z",PAPMIRowId))
	Q:(""=PAPMIRowId) ""
    s PAPMIName=$p($g(^PAPER(PAPMIRowId,"ALL")),"^",1)
    s RegNo=$p($g(^PAPER(PAPMIRowId,"PAT",1)),"^",1)
    s PAPMISexDR=$p($g(^PAPER(PAPMIRowId,"ALL")),"^",7)
    
    i PAPMISexDR="" s PAPMISexDR=$p($g(^DHCPESetting("DHCPE","DefPatientType")),"^",2)
    i (""'=PAPMISexDR)  d  		//CT_Sex	CTSEX_Desc
	.s PAPMISexDRName=$p($G(^CT("SEX",PAPMISexDR)),"^",2)
	e  d
	.s PAPMISexDRName=""
	
	// 身份证号 PA_PatMas.{PAPMI_ID}
	s PAPMIID=$P($G(^PAPER(PAPMIRowId,"PAT",3)),"^",6)
	// 身份证号 PA_PatMas.{PAPMI_ID}
	i PAPMIID="" s PAPMIID=$p($g(^PAPER(PAPMIRowId,"ALL")),"^",9)
    // 生日 PA_PatMas.{PAPMI_DOB}
	s PAPMIDOB=$p($g(^PAPER(PAPMIRowId,"ALL")),"^",6)
	s Age=""
	i PAPMIDOB'="" s Age=##class(web.DHCDocCommon).GetAgeDescNew($zd(PAPMIDOB,3),"")
	i (""'=PAPMIDOB) s PAPMIDOB=$ZD(PAPMIDOB,3)	
	
	
	
	//移动电话 PA_Person.{PAPER_TelH}
	s PAPERTelH=$p($g(^PAPER(PAPMIRowId,"PER",1)),"^",11)
    
   
	
	// 婚姻状况 PA_Person.{ PAPER_Marital_DR }
	s PAPERMaritalDR=$p($g(^PAPER(PAPMIRowId,"PER",2)),"^",3)
	// 婚姻状况 CT_Marital.{ CTMAR_Desc }
	s PAPERMaritalDRName=""
	s:(""'=PAPERMaritalDR) PAPERMaritalDRName=$p($g(^CT("MAR",PAPERMaritalDR)),"^",2)
	
	
	
	//学历  add by wgy
	s edcucationDR=$p($g(^PAPER(PAPMIRowId,"PER",2)),"^",5)
	s edcucationDesc=""
	s:edcucationDR'="" edcucationDesc=$p($g(^CT("EDU",edcucationDR)),"^",2)
	//职业  add  by wgy 
	s occupationDR=$p($g(^PAPER(PAPMIRowId,"PER",2)),"^",6)
	s occupationDesc=""
	s:occupationDR'="" occupationDesc=$p($g(^CT("OCC",occupationDR)),"^",2)
	
	s Data=PAPMIRowId	_"^"_RegNo		_"^"_PAPMIName	_"^"_PAPMISexDRName	_"^"_PAPMIDOB_"^"_PAPERTelH			_"^"_PAPMIID	_"^"_PAPERMaritalDRName	_"^"_edcucationDesc_"^"_occupationDesc
	
	q Data
]]></Implementation>
</Method>

<Method name="SaveGroupNoRegisterRecord">
<Description><![CDATA[
Descript:保存体检预约信息（团体  his未预约）
Creater:	王国营
CreateDate:	2017-05-15
Input:<Request><patientName>姓名</patientName><sexDesc>性别：男，女</sexDesc>
<patientDob>出生日期</patientDob><patientIdNo>身份证号</patientIdNo>
<cardType>证件类型</cardType>
<telephoneNo>手机号</telephoneNo><locId></locId><detailId>预约排班明细ID</detailId>
<regStatus>状态:0：网上预约,1：医院已预约,2：撤销预约,3：过期未在医院预约</regStatus>
<ordSetId>套餐id</ordSetId><regExamDate>预约的体检日期</regExamDate>
<occupation>职业</occupation><education>学历</education><marriage>婚姻状况</marriage>
<listResult>主题与内容关联id^结果选项ID^结果值^结果录入值,主题与内容关联id^结果选项ID^结果值^结果录入值</listResult>
<netItemStr>项目ID~价格@项目ID~价格@</netItemStr></Request>
Output:	
Return：0^成功
w ##class(HS.BL.ExaminationRegister).SaveGroupNoRegisterRecord("<Request><telephoneNo>13111111111</telephoneNo><occupation>国家公务员</occupation><regStatus>0</regStatus><marriage>已婚</marriage><education>研究生</education><cardType>身份证</cardType><patientName>成龙</patientName><levelDesc>普通</levelDesc><sexDesc>男</sexDesc><patientRegNo></patientRegNo><patientIdNo>370101198801010439</patientIdNo><regExamDate>2017-5-24</regExamDate><patientDob>1988-09-10</patientDob><locId>263</locId><datePmType>G</datePmType><regId></regId><ordSetId>8</ordSetId><detailId>2711||29301</detailId><gid>112</gid><netItemStr>803||1~4.5#1966||1~0.64#1089||1~6.81#1889||1  ~3.85#8866||1~225#9894||1~20#10296||1~80#</netItemStr></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	;s ^wgy("SaveGroupNoRegisterRecord")=params
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s patientName=$TR(request.patientName,$c(0))
		s sexDesc=$TR(request.sexDesc,$c(0))
		s dob=$TR(request.patientDob,$c(0))
		s idNo=$TR(request.patientIdNo,$c(0))
		s telNo=$TR(request.telephoneNo,$c(0))
		s status=$TR(request.regStatus,$c(0))
		s ordSetId=$TR(request.ordSetId,$c(0))
		s regExamDate=$TR(request.regExamDate,$c(0))
		s occupation=$TR(request.occupation,$c(0))
		s education=$TR(request.education,$c(0))
		s marriage=$TR(request.marriage,$c(0))
		s locId=$TR(request.locId,$c(0))
		s detailId=$TR(request.detailId,$c(0))
		s levelDesc=$TR(request.levelDesc,$c(0))
		s cardType=$TR(request.cardType,$c(0))
		s datePmType=$TR(request.datePmType,$c(0))
		s listResult=request.listResult
		s netItemStr=$TR(request.netItemStr,$c(0))
		s gid=$TR(request.gid,$c(0))
		s patientRegNo=$TR(request.patientRegNo,$c(0))
				
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:gid="" "-22^团体预约ID不能为空"
	q:patientName="" "-4^请准确填写您的姓名"
	q:idNo="" "-5^请准确填写您的身份证号"
	q:regExamDate="" "-6^请选择体检日期"
	;s regExamDate=$zdh(regExamDate,3)
	i sexDesc="1" s sexDesc = "男"
	i sexDesc="2" s sexDesc = "女"
	s:sexDesc'="" sexId=$o(^CT("SEX",0,"Desc",$$ALPHAUP^SSUTIL4(sexDesc),0))
	s existId=##class(HS.BL.ExaminationRegister).GetRegId(idNo)
	q:existId'="" "-7^该身份证已经存在未执行的预约记录，请核实身份证号"
	
	s orderObjId = ""
	;s orderDesc = ""
	i ordSetId'="" d
	.s orderObjId = $o(^User.DHCPENetOrdSetsI("HisSetsIndex",ordSetId,orderObjId))
	.s objOrdSets=##class(User.DHCPENetOrdSets).%OpenId(orderObjId)
	.s orderDesc = objOrdSets.NOSDesc
	.s orderVipLevel = objOrdSets.NOSVIPLevel
	.i (levelDesc="")&&(orderVipLevel'="") d
	..s levelDesc=$p($g(^DHCPEVIPLevel("VIP",orderVipLevel)),"^",2)
	s:(levelDesc="") levelDesc="普通"
	
	;
	;保存调查问卷
	s err=""
	s evaluationId = ""
	i listResult'=""  d
	.s data=idNo_"^"_patientName_"^"_$g(sexId)_"^"_dob_"^"_telNo_"^"_occupation_"^"_education_"^"_marriage
	.b ;dataExam
	.s evaluationId=##class(HS.BL.ExaminationQuestion).SaveExamQuestionResult(data,listResult)
	.i +evaluationId<=0  s err=evaluationId
	.
	i err'="" q err
	s NumDate = $zdh(regExamDate,3)
	s:(sexDesc="男") SexNumCode="1"
	s:(sexDesc="女") SexNumCode="2"
	s:(levelDesc="") levelDesc="普通"
	;w ##class(HS.BL.ExaminationRegister).GetShengYuNum("63679","普通","M","O","","263")
	s:(datePmType="O") levelDesc="过期主场"
	s ShengYuNum = ..GetShengYuNum(NumDate,levelDesc,SexNumCode,datePmType,"",locId)
	q:ShengYuNum'="true" "-999^剩余名额已被占用"
	
	
	s rtn=""
	;保存体检预约记录
	TS
	S $ZT="ErrHandle"
	i dob'=""  d
	.s age=(+$h-$zdh(dob,3))/365
	e  d
	.s age=""
	s data="^"_patientName_"^"_$g(sexId)_"^"_age_"^"_idNo_"^"_status_"^"_ordSetId_"^"_regExamDate_"^"_evaluationId_"^^^"_locId_"^"_detailId_"^"_telNo_"^"_datePmType_"^"_levelDesc
	s regId=..SaveRegister(data)
	b ;regId
	i +regId<=0  s rtn="-11^保存预约信息失败:"_$P(regId,"^",2) tro  q rtn
	
	;更新DHC_PE_NetPreRecord DHC_PE_NetPreItemRecord
	s ret=..UpdateNoPaidNetPreItem(+regId,ordSetId,netItemStr)
	i ret'=""  s rtn="-22^保存网上自选项目失败"  tro   q rtn

	s sexId=""
	s sexId=$O(^CT("SEX",0,"Desc",$$ALPHAUP^SSUTIL4(sexDesc),sexId))
	s maritalId=""
	s maritalId=$O(^CT("MAR",0,"Desc",$$ALPHAUP^SSUTIL4(marriage),maritalId))
	;判断在HIS是否存在用户信息,不存在则插入
	s hisHad=1
	i patientRegNo="" d
	.s hisHad=0
	.s patientDob=$zd($zdh(dob,3),4)
	.s inString="^^"_patientName_"^"_$g(sexId)_"^"_patientDob_"^^"_telNo_"^^"_telNo_"^"_idNo_"^^^^^^^^"_$g(maritalId)_"^^^"_1_"^^^^^;Gen"
	.s addInfoRet=##class(web.DHCPE.PreIBIUpdate).Save("","",inString)
	.s:(+addInfoRet'=0)&&($l(addInfoRet,"^")'=3) rtn="-23^插入基本信息失败^"_addInfoRet
	.q:(+addInfoRet'=0)&&($l(addInfoRet,"^")'=3)
	.s patientRegNo=$p(addInfoRet,"^",3)
	i rtn'="" tro  q rtn
	;HIS已存在时 检查DHC_PE_PreIBaseInfo是否存在记录，不存在则根据his信息更新
	s baseId=$O(^DHCPEPreIBI(0,"PAPMINo",patientRegNo,0))
	i (hisHad=1)&&(baseId="") d
	.s updatePERet=##class(web.DHCPE.PreIBIUpdate).UpdatePEInfoByHis(patientRegNo,1)
	.s:updatePERet'=0 rtn="-24^更新体检基本信息失败^"_updatePERet
	.s baseId=$O(^DHCPEPreIBI(0,"PAPMINo",patientRegNo,0))
	i rtn'="" tro  q rtn
	;插入预约记录   取团体分组
	s levelID=$g(^DHCPEVIPLevel("PIBI",patientRegNo))	
	s tid=##class(web.DHCPE.ImportGInfo).GetTIDByInfo("",$zdh(dob,3),sexId,maritalId,gid,levelID)
	i tid=""  s rtn="-25^获取团体分组失败" tro  q rtn
	s insertTeamRet=##Class(web.DHCPE.PreIADM).InsertIADMInGTeam(baseId,gid,tid,"",+regId)
	i (insertTeamRet'="")&&($p(insertTeamRet,"^",1)'=0) s rtn="-26^插入预约记录失败" tro  q rtn 
	s PreAdmId=$p(insertTeamRet,"^",2)
	
	;更新预约日期
	s endTime=""
	i detailId'=""  d
	.if (datePmType="H")  do
	..s objHomeTimemanger=##class(User.DHCPEPreHomeTimeInfo).%OpenId(detailId)
	..q:objHomeTimemanger=""
	..s endTime=objHomeTimemanger.PHEndTime
	.e  do
	..s objTimemanger=##class(User.DHCPEPreTimeManager).%OpenId(detailId)
	..q:objTimemanger=""
	..s endTime=objTimemanger.PTMEndTime
	b ;wgy
	s updateDateRet=##class(web.DHCPE.TransAdmInfo).UpdateAdmDate(PreAdmId, $zd($zdh(regExamDate,3),4)_"^"_$g(endTime))
	i updateDateRet'=0   s rtn="-11^更新his体检日期失败^"_updateDateRet trollback  q rtn
	
	
	
	;插入体检套餐
	s addItemRet=""
	i ordSetId'="" d
	.s addItemRet=##class(web.DHCPE.PreItemList).IInsertItem(PreAdmId,"PERSON","PRE","",ordSetId,1)
	i addItemRet'="" s rtn="-27^插入体检套餐失败^"_addItemRet  tro   q rtn
	;插入体检项目
	i netItemStr'="" d
	.s itemIds=..RemoveSetsItem(ordSetId,netItemStr)
	.q:itemIds=""
	.f i=1:1:$l(itemIds,"^") d
	..q:addItemRet'=""
	..s addItemRet=##class(web.DHCPE.PreItemList).IInsertItem(PreAdmId,"PERSON","ADD",$p(itemIds,"^",i),"",1)
	i addItemRet'=""  s rtn="-28^插入体检项目失败^"_addItemRet tro  q rtn
	
	;将新插入的项目预约类型变更为网上预约 
	i ($G(^DHCPESetting("DHCPE","SelfNetItem",locId))="Y") {
		;启用网上自选项目时  需取消注释
		;&SQL(Update SQLUSER.DHC_PE_PreIOrdItem set PIOI_PreType="N"
		;where PIOI_ParRef = :PreAdmId)
		;i SQLCODE'=0  s rtn="-31^更新项目预约类型失败^"_$g(%msg) tro  q rtn
	}
	
	
	
	;登记或确认加项
	s newStatus=$p($g(^DHCPEPreIADM(PreAdmId)),"^",8)
	if (newStatus="REGISTERED"){
		;确认加项医嘱
		s confirmRet=##class(web.DHCPE.TransAdmInfo).ConfirmAddOrdItem(PreAdmId,1)
		s:confirmRet'="" rtn="-29^确认加项失败&"_confirmRet
	}else{
		;登记
		s registerRet= ##class(web.DHCPE.DHCPEIAdm).UpdateIADMInfo(PreAdmId, 2,0,1,0)
		s:registerRet'=0 rtn="-30^登记失败&"_registerRet
	}
 	i rtn'="" tro  q rtn
 
    i $TL>0 TC
	s str="<Request><patientIdNo></patientIdNo><patientName>"_patientName_"</patientName><regId>"_regId_"</regId></Request>"
	s retStr=..QueryRegRecord(str)
	q retStr
ErrHandle
	s:rtn="" rtn="-100^团体预约信息保存失败"
	TRO
	q:$ze="" rtn
	q rtn_"&"_$ze
]]></Implementation>
</Method>

<Method name="BindingRegNo">
<Description><![CDATA[
Descript:绑定登记号
Creater:	王国营
CreateDate:	2017-06-16
Table:
Input:<Request><patientIdNo>身份证号</patientIdNo><patientRegNo>登记号</patientRegNo></Request>
Output:	
Return：
w ##class(HS.BL.ExaminationRegister).BindingRegNo("<Request><patientIdNo>123456789054683851</patientIdNo><patientRegNo>0001</patientRegNo></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s ^wgy=params
	s params=$TR(params,$c(0))
	q:params="" "-3^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	i $$$ISERR(sc)  q "-1^读取参数错误:"_$System.Status.GetErrorText(sc)
	d reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	while reader.Next(.request,.sc){
		s patientIdNo=$TR(request.patientIdNo,$c(0))
		s patientRegNo=$TR(request.patientRegNo,$C(0))
	}
	i $$$ISERR(sc)  q "-2^解析参数错误:"_$System.Status.GetErrorText(sc)
	q:($g(patientIdNo)="")||($g(patientRegNo)="") "-3^参数不能为空"
	s IBaseId=0,IDCardFlag=0
	s flag=0
	f  s IBaseId=$O(^DHCPEPreIBI(0,"IDCard",patientIdNo,IBaseId)) q:(IBaseId="")||(flag=1)  d
	.s IDCardFlag=1
	.s PAPMINo=$p(^DHCPEPreIBI(IBaseId),"^",1)
	.q:PAPMINo'=patientRegNo
	.s flag=1
	q:IDCardFlag=0 "-99^身份证号不存在"
	q:flag=0 "-100^身份证号与登记号不对应"
	q "验证成功"
]]></Implementation>
</Method>

<Method name="GetRegNoByIDCard">
<Description><![CDATA[
Descript:根据身份证号获取体检基本信息表登记号
Creater:	王国营
CreateDate:	2017-06-19
Table:
Input:<Request><patientIdNo>身份证号</patientIdNo></Request>
Output:	
Return：
w ##class(HS.BL.ExaminationRegister).GetRegNoByIDCard("<Request><patientIdNo>123456789054683851</patientIdNo></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-3^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	i $$$ISERR(sc)  q "-1^读取参数错误:"_$System.Status.GetErrorText(sc)
	d reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	while reader.Next(.request,.sc){
		s patientIdNo=$TR(request.patientIdNo,$c(0))
	}
	i $$$ISERR(sc)  q "-2^解析参数错误:"_$System.Status.GetErrorText(sc)
	q:$g(patientIdNo)="" "-3^参数不能为空"
	s IBaseId=0,retStr=""
	f  s IBaseId=$O(^DHCPEPreIBI(0,"IDCard",patientIdNo,IBaseId)) q:IBaseId=""  d
	.s PAPMINo=$p(^DHCPEPreIBI(IBaseId),"^",1)
	.;廊坊管道局医院增加体检日期
	.s PreADMID=""
	.s PEDateStr=""
	.f  s PreADMID=$o(^DHCPEPreIADM(0,"PIBI",IBaseId,PreADMID)) Quit:PreADMID=""  Do
	..s TReCheck=""
	..s TReCheck=##class(web.DHCPE.PreCommon).IsReCheck(PreADMID,"Pre")
	..q:(TReCheck'=0)
	..s CheckDate = ##class(web.DHCPE.PreIADM).GetCheckDate(PreADMID,"PreADM")
	..s:PEDateStr'[CheckDate PEDateStr=PEDateStr_","_CheckDate
	.s:PEDateStr'="" PEDateStr="体检日期："_$e(PEDateStr,2,$l(PEDateStr))
	.s:PEDateStr="" PEDateStr="未完成体检"
	
	.s myObj=##class(HS.Temp.ExamRegRecord).%New()
	.s myObj.patientIdNo=patientIdNo
	.s myObj.patientRegNo=PAPMINo
	.s myObj.peInfo=PEDateStr
	.s sc=myObj.XMLExportToString(.XML,"ExamRegRecord")
	.s:'$$$ISERR(sc) retStr=retStr_XML
	q:retStr="" "-11^体检系统不存在该身份证号信息"
	q retStr
]]></Implementation>
</Method>

<Method name="QueryGroupNetPackages">
<Description><![CDATA[
Descript:查找团体网上套餐
Creater:	王国营
CreateDate:	2017-06-23
Table:DHC_PE_GNetOrdSets
Input:<Request><sexDesc>性别：男，女</sexDesc><patientDob>出生日期</patientDob><locId></locId>
<marriage>婚姻状况</marriage><levelDesc>VIP等级</levelDesc><gid></gid>
Output:	
Return：<ExaminationPackages></ExaminationPackages>
w ##class(HS.BL.ExaminationRegister).QueryGroupNetPackages("<Request><sexDesc>男</sexDesc><patientDob>1990-08-06</patientDob><locId>263</locId><marriage>已婚</marriage><levelDesc>VIP等级</levelDesc><gid>115</gid></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s sexDesc=$TR(request.sexDesc,$c(0))
		s dob=$TR(request.patientDob,$c(0))
		s marriage=$TR(request.marriage,$c(0))
		s locId=$TR(request.locId,$c(0))
		s levelDesc=$TR(request.levelDesc,$c(0))
		s gid=$TR(request.gid,$c(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:locId="" "-5^体检科室不能为空"
	q:gid="" "-6^团体ID不能为空"
	q:(sexDesc="")||(levelDesc="") ""
	s strXml=""
	s:dob'="" dob=$zdh(dob,3)
	s sexId=""
	s sexId=$O(^CT("SEX",0,"Desc",$$ALPHAUP^SSUTIL4(sexDesc),sexId))
	q:sexId="" ""
	s maritalId=""
	s:marriage["已婚" marriage="已婚"
	s:marriage'="" maritalId=$O(^CT("MAR",0,"Desc",$$ALPHAUP^SSUTIL4(marriage),maritalId))
	s levelID=""
	s levelID=##class(web.DHCPE.VIPLevel).GetVIPIDByDesc(levelDesc)
	s:levelID="" levelID=$G(^DHCPEVIPLevel("VIPapprove"))
	s teamId=##class(web.DHCPE.ImportGInfo).GetTIDByInfo("","",sexId,maritalId,gid,levelID)
	//先找不限制团体分组的套餐
	s childSub=0
	f  s childSub=$O(^DHCPEPreGADM(0,"GTeam",-100000000000000,gid,childSub))  q:childSub=""  d
	.s ordSetsId=$P(^DHCPEPreGADM(gid,"GNetOrdSets",childSub),"^",1)
	.d GetOrdSets
	//查找对应团体分组可选的套餐
	i teamId'="" d
	.s childSub=0
	.f  s childSub=$O(^DHCPEPreGADM(0,"GTeam",teamId,gid,childSub)) q:childSub=""  d
	..s ordSetsId=$P(^DHCPEPreGADM(gid,"GNetOrdSets",childSub),"^",1)
	..d GetOrdSets
	//查找全部团体套餐
	e  d
	.f  s teamId=$O(^DHCPEPreGADM(0,"GTeam",teamId)) q:teamId=""  d 
	..q:teamId=-100000000000000  
	..s childSub=0
	..f  s childSub=$O(^DHCPEPreGADM(0,"GTeam",teamId,gid,childSub)) q:childSub=""  d  
	...s ordSetsId=$P(^DHCPEPreGADM(gid,"GNetOrdSets",childSub),"^",1)
	...d GetOrdSets
	
	s netSetsMustFlag=$G(^DHCPEDataEx("DHCPEPreGADM","NetSetsMust",gid))
	q:(netSetsMustFlag=1)&&(strXml="") "-100^团体预约设置了套餐必选但未维护可选套餐！"
	q strXml
	
GetOrdSets
	s objOrdSets=##class(User.DHCPENetOrdSets).%OpenId(ordSetsId)
	s activeFlag=objOrdSets.NOSActive
	q:activeFlag="N"
	s myObj=##class(HS.Temp.ExaminationPackages).%New()
	s myObj.packageAmt=objOrdSets.NOSPrice
	s myObj.packageDesc=objOrdSets.NOSDesc
	s NOSLevelID=objOrdSets.NOSVIPLevel
	q:(NOSLevelID'="")&&(NOSLevelID'=levelID)
	s myObj.levelId=NOSLevelID
	s myObj.levelDesc=$P($g(^DHCPEVIPLevel("VIP",NOSLevelID)),"^",2)
	s NOSLocID=objOrdSets.NOSLocID
	q:NOSLocID'=locId
	
	s myObj.packageId=objOrdSets.NOSHisSetsID
	s myObj.ordSetsId=ordSetsId
	s NOSDesc=objOrdSets.NOSSex
	q:(NOSDesc'="")&(sexDesc'=NOSDesc)
	s myObj.sexDesc=sexDesc
	s myObj.remark=objOrdSets.NOSRemak
	s ordSetsDesc=objOrdSets.NOSDesc
	i ordSetsDesc["过敏"  d
	.s myObj.ordSetsType="A"
	e  i ordSetsDesc["免疫"  d
	.s myObj.ordSetsType="I"
	e   d
	.s myObj.ordSetsType="N"
	s sc=myObj.XMLExportToString(.XML,"ExaminationPackages")
	i '$$$ISERR(sc)  d
	.s strXml=strXml_XML
	.
	q
]]></Implementation>
</Method>

<Method name="GetRecommendedPackages">
<Description><![CDATA[
Descript:根据调查问卷获取推荐套餐
Creater:	王国营
CreateDate:	2017-07-28
Input:<Request><patientName>姓名</patientName><sexDesc>性别：男，女</sexDesc>
<patientDob>出生日期</patientDob><patientIdNo>身份证号</patientIdNo>
<telephoneNo>手机号</telephoneNo><locId></locId>
<occupation>职业</occupation><education>学历</education><marriage>婚姻状况</marriage>
<listResult>主题与内容关联id^结果选项ID^结果值^结果录入值,主题与内容关联id^结果选项ID^结果值^结果录入值</listResult></Request>
Output:	
Return：
w ##class(HS.BL.ExaminationRegister).GetRecommendedPackages("<Request><telephoneNo>15278781234</telephoneNo><occupation></occupation><regStatus>0</regStatus><marriage></marriage><education></education><cardType>身份证</cardType><patientName>ew</patientName><levelDesc>普通</levelDesc><sexDesc>男</sexDesc><patientRegNo></patientRegNo><patientIdNo>656565198809101234</patientIdNo><regExamDate>2016-10-24</regExamDate><patientDob>1988-09-10</patientDob><locId>263</locId><datePmType>I</datePmType><regId></regId><ordSetId>489</ordSetId><detailId>2711||29301</detailId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s ^wgy("GetRecommendedPackages")=params
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s patientName=$TR(request.patientName,$c(0))
		s sexDesc=$TR(request.sexDesc,$c(0))
		s dob=$TR(request.patientDob,$c(0))
		s idNo=$TR(request.patientIdNo,$c(0))
		s telNo=$TR(request.telephoneNo,$c(0))
		s occupation=$TR(request.occupation,$c(0))
		s education=$TR(request.education,$c(0))
		s marriage=$TR(request.marriage,$c(0))
		s locId=$TR(request.locId,$c(0))
		s listResult=request.listResult
				
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:locId="" "-8^体检科室不能为空"
	q:sexDesc="" "-7^性别不能为空"
	q:(patientName="")&&(listResult'="") "-4^请准确填写您的姓名"
	q:idNo="" "-5^请准确填写您的身份证号"
	s:sexDesc'="" sexId=$o(^CT("SEX",0,"Desc",$$ALPHAUP^SSUTIL4(sexDesc),0))
	s existId=##class(HS.BL.ExaminationRegister).GetRegId(idNo)
	q:existId'="" "-7^该身份证已经存在未执行的预约记录，请核实身份证号"
	
	;保存调查问卷  listResult'="" 表示需要保存问卷 listResult="" 表示上一步过来，无需保存问卷
	s err=""
	s evaluationId = ""
	i listResult'=""  d
	.s data=idNo_"^"_patientName_"^"_$g(sexId)_"^"_dob_"^"_telNo_"^"_occupation_"^"_education_"^"_marriage
	.b ;dataExam
	.s evaluationId=##class(HS.BL.ExaminationQuestion).SaveExamQuestionResult(data,listResult)
	.i +evaluationId<=0  s err=evaluationId
	i err'="" q "-100^保存调查问卷失败"_err
	
	s pid=##class(HS.BL.ExaminationQuestion).CollectQuestionLastResult(idNo,1)
	
	s strXml=""
	s levelId=""
	f  s levelId=$o(^User.DHCPENetOrdSetsI("LocVIP",locId,levelId)) q:levelId=""  d
	.s sort=""
	.f  s sort=$o(^User.DHCPENetOrdSetsI("LocVIP",locId,levelId,sort)) q:sort=""  d
	..s ordSetsId=0
	..f  s ordSetsId=$o(^User.DHCPENetOrdSetsI("LocVIP",locId,levelId,sort,ordSetsId)) q:ordSetsId=""  d
	...d GetOrdSets
	..
	.
	q strXml
	
GetOrdSets
	s objOrdSets=##class(User.DHCPENetOrdSets).%OpenId(ordSetsId)
	s activeFlag=objOrdSets.NOSActive
	q:activeFlag="N"
	q:objOrdSets.NOSGIFlag="G"  //个人预约不能选择团体套餐
	s myObj=##class(HS.Temp.ExaminationPackages).%New()
	s myObj.packageAmt=objOrdSets.NOSPrice
	s myObj.packageDesc=objOrdSets.NOSDesc
	s myObj.levelId=levelId
	i levelId'=""  d
	.s myObj.levelDesc=$P($g(^DHCPEVIPLevel("VIP",levelId)),"^",2)
	s hisSetsID=objOrdSets.NOSHisSetsID
	s myObj.packageId=hisSetsID
	s myObj.ordSetsId=ordSetsId
	s myObj.giFlag="个人"
	s sex=objOrdSets.NOSSex
	q:(sexDesc'="")&(sexDesc'=sex)
	s myObj.sexDesc=sex
	s myObj.remark=objOrdSets.NOSRemak
	s ordSetsDesc=objOrdSets.NOSDesc
	i ordSetsDesc["过敏"  d
	.s myObj.ordSetsType="A"
	e  i ordSetsDesc["免疫"  d
	.s myObj.ordSetsType="I"
	e   d
	.s myObj.ordSetsType="N"
	
	s recommendScore=0
	i $D(^TEMPDHCPEQDNS("HMQDNS",idNo,1,pid,hisSetsID)) d
	.s recommendScore=^TEMPDHCPEQDNS("HMQDNS",idNo,1,pid,hisSetsID)
	s myObj.recommendScore=recommendScore
	s sc=myObj.XMLExportToString(.XML,"ExaminationPackages")
	i '$$$ISERR(sc)  d
	.s strXml=strXml_XML
	q
]]></Implementation>
</Method>

<Method name="CancelNetPreRecord">
<Description><![CDATA[
取消网上预约记录
w ##class(HS.BL.ExaminationRegister).CancelNetPreRecord("<Request><regId>1</regId><idCard>3444</idCard></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s regId=$TR(request.regId,$c(0))
		s idCard=$TR(request.idCard,$c(0))
		s patientRegNo=$TR(request.patientRegNo,$c(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:regId="" "-5^预约记录ID不能为空"
	q:(idCard="")&&(patientRegNo="") "-5^身份证号与登记号不能同时为空"
	
	s obj= ##class(User.DHCPENetPreRecord).%OpenId(regId)
	q:obj="" "-7^网上预约ID不存在"
	s oldCardNo=obj.NPRIDCard
	q:(idCard'="")&&(oldCardNo'="")&&(idCard'=oldCardNo) "-8^身份证号不正确"
	s oldRegNo=obj.NPRRegNo
	q:(patientRegNo'="")&&(oldRegNo'="")&&(patientRegNo'=oldRegNo) "-8^登记号不正确"
	
	s status=obj.NPRStatus
	q:status'="0" "-9^医院已处理，不允许取消"
	
	s obj.NPRStatus="2"
	set sc = obj.%Save()
	if $system.Status.IsError(sc) {           
   		q "-10^"_$System.Status.GetErrorText(sc)
	}
	else{
		set ret=0
	}	
	quit ret
]]></Implementation>
</Method>

<Method name="GetAllPEOrdSets">
<Description>
Descript:获取所有体检套餐数据
Creater:	wangguoying
CreateDate:	2018-02-26	
Table: ARC_OrdSets
Input:
Output:	
w ##class(HS.BL.ExaminationRegister).GetAllPEOrdSets("")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s PELabStation=$g(^DHCPESetting("DHCPE","StationId_Lab"))
	s PECodePrefix=^DHCPESetting("DHCPE","PEItemCodePrefix")
	s TrakVerison=$g(^DHCPESetting("DHCPE","TrakVerison"))
	s Sort=""
	s retStr=""
	s count=0
 	f  s Sort=$o(^DHCPEItemSort("Set",Sort)) q:Sort=""  d
 	.s Sub=0
 	.f  s Sub=$o(^DHCPEItemSort("Set",Sort,Sub)) q:Sub=""  d
 	..s Flag=0
 	..s SetId=$G(^DHCPEItemSort("Set",Sort,Sub))
 	..s ST=$O(^DHCPEST(0,"STORD_ARCOS",SetId,0))
 	..i ST=PELabStation s Flag=1
 	..d GetSetsInfo 
 	
 	s Sub=0
	f  s Sub=$o(^DHCPEST(PELabStation,"O",Sub)) q:(Sub="")||(TrakVerison'="MedTrak")  d
	.s Flag=1
	.s iARCIMDR=$p($g(^DHCPEST(PELabStation,"O",Sub)),"^",1)
	.s SetId=$p($g(^DHCPEST(PELabStation,"O",Sub)),"^",3)
	.s CurSort=$G(^DHCPEItemSort("Sort","Set",SetId))
	.q:CurSort'=""
	.d GetSetsInfo
	
	s SetId="0"
	f  s SetId=$o(^ARCOS(SetId)) q:SetId=""  d
	.s Flag=0
	.s CurSort=$G(^DHCPEItemSort("Sort","Set",SetId))
	.q:CurSort'=""
	.d GetSetsInfo
 	
 	q retStr
GetSetsInfo
	s myStr=$g(^ARCOS(SetId))
	Q:(""=myStr)
	///////判断医嘱套有效期
	s datefrom=$p(myStr,"^",15)
	s enableFlag=1  //启用标志
	if datefrom'=""
	{
		s datefrom=+datefrom
		s:datefrom>+$H enableFlag=0
	}
	s dateto=$p(myStr,"^",16)
	s:((dateto'="")&&(dateto<+$h)) enableFlag=0
	q:enableFlag=0
	i Flag=0               //add
	{
		s LocFlag=##class(web.DHCPE.PreCommon).GetLocFlag("ORDSET",SetId)
	}
	else
	{
		s StationID=0
		s StationID=$O(^DHCPEST(0,"STORD_ARCOS",SetId,0))
		q:StationID=""
		s ItemChildSub=$O(^DHCPEST(0,"STORD_ARCOS",SetId,StationID,0))
		s ItemID=StationID_"||"_ItemChildSub
		s LocFlag=##class(web.DHCPE.PreCommon).GetLocFlag("ITEM",ItemID)
	}
	q:LocFlag=1  //End

	If $d(^DHCPESetting("DHCPEBaseData","PEARCOS",SetId))=1 Set Flag=1
	
	
	s myCode="", myDesc="",myBreakable="", mySetId=""
	s myCode=$p(myStr,"^",1)
	s myDesc=$p(myStr,"^",2)
	s myCode=$ZCVT(myCode,"U")
	q:($extract(myCode,1,$l(PECodePrefix))'=PECodePrefix)&&(Flag=0)

	;根据名称过滤
	;s ALIASRowId="0"
	;s Flag=0
	;f  s ALIASRowId=$O(^ARC("ALIAS",0,"ARCOS",SetId,ALIASRowId)) q:ALIASRowId=""  d
	;.s ALIAS=""
	;.s:(""'=ALIASRowId) ALIAS=$P($G(^ARC("ALIAS",ALIASRowId)),"^",6)
	;.s ALIAS=$ZCVT(ALIAS,"U")
	;.s:((""'=orderSetDesc)&(ALIAS[orderSetDesc)) Flag=1 
	;s:((""'=orderSetDesc)&(myDesc[orderSetDesc)) Flag=1 
	;i orderSetDesc="" s Flag=1
	;q:Flag=0
	
	s:""'=SetId SetPrice=##class(web.DHCPE.Handle.ARCOrdSets).GetPrice(SetId)
	i SetPrice="" s SetPrice=0	
	s SexDR=$G(^DHCPEDataEx("DHCPEBaseData","Sex",SetId))
	s SexDesc=""
	s:SexDR'="" SexDesc=$P(^CT("SEX",SexDR),"^",2) 
	s myObj=##class(HS.Temp.PEOrdSets).%New()
	s myObj.ordSetsId=SetId
	s myObj.ordSetsDesc=myDesc
	s myObj.ordSetsPrice=SetPrice
	S myObj.sexId=SexDR
	s myObj.sexDesc=SexDesc
	s sc=myObj.XMLExportToString(.Xml,"PEOrdSets")
	q:$$$ISERR(sc)
	s count=count+1
	s retStr=retStr_Xml
	q
]]></Implementation>
</Method>

<Method name="GetOrdSetsItem">
<Description><![CDATA[
Descript:根据套餐ID获取套餐项目信息
Creater:	wangguoying
CreateDate:	2018-02-26
Input:<Request><ordSetsId>4039849</ordSetsId></Request>
Output:	
w ##class(HS.BL.ExaminationRegister).GetOrdSetsItem("<Request><ordSetsId>4039849</ordSetsId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>Param:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:Param="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(Param)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if (reader.Next(.request,.sc)){
		s ordSetsId=$TR(request.ordSetsId,$c(0))
	}else{
		if $$$ISERR(sc) q "-21^解析参数错误"
	}
	q:ordSetsId="" "-3^套餐ID不能为空"
	s retStr=""
	s ItemIds=##class(web.DHCPE.Handle.ARCOrdSets).GetItemIdsBySet(ordSetsId)
	q:ItemIds="" "-4套餐ID无效"
	s len=$length(ItemIds,"^")
	f i=1:1:len d
	.s itemId=$P(ItemIds,"^",i)
	.q:itemId=""
	.s qybz=1  //启用标志
	.s EffDateFInfo=$p(^ARCIM($p(itemId,"||",1),$p(itemId,"||",2),1),"^",13)
	.i EffDateFInfo'="" d
	..s:(+EffDateFInfo)>+$h qybz=0
	.s EffDateTo=$p(^ARCIM($p(itemId,"||",1),$p(itemId,"||",2),7),"^",1)
	.i EffDateTo'="" d
	..s:EffDateTo<+$H qybz=0
	.q:qybz=0
	.s curInfo=..GetPEItemInfoByID(itemId)
	.q:curInfo=""
	.s myObj=##class(HS.Temp.PEItem).%New()
	.s myObj.itemId=$P(curInfo,"^",1)
	.s myObj.itemDesc=$P(curInfo,"^",3)
	.s myObj.itemPrice=$P(curInfo,"^",6)
	.s myObj.sexId=$P(curInfo,"^",7)
	.s myObj.sexDesc=$P(curInfo,"^",8)
	.s myObj.stationId=$P(curInfo,"^",4)
	.s myObj.stationDesc=$P(curInfo,"^",5)
	.s myObj.vipId=$P(curInfo,"^",9)
	.s myObj.vipDesc=$P(curInfo,"^",10)
	.s sc=myObj.XMLExportToString(.Xml,"PEItem")
	.q:$$$ISERR(sc)
	.s retStr=retStr_Xml
	q retStr
]]></Implementation>
</Method>

<Method name="GetPEItemInfoByID">
<Description>
Descript:根据项目ID获取项目信息
Creater:	wangguoying
CreateDate:	2018-03-07	
Table: 
Input: 医嘱ID
Output:	医嘱项ID^医嘱项编码^医嘱项名称^站点ID^站点名称^价格^性别ID^性别描述^VIP等级ID^VIP等级描述
w ##class(HS.BL.ExaminationRegister).GetPEItemInfoByID("13339||1")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>ARCIMDR</FormalSpec>
<Implementation><![CDATA[
	q:ARCIMDR="" ""
	s STID=$O(^DHCPEST(0,"STORD_ARCIM",ARCIMDR,""))
	q:STID="" ""
	s STDesc=$P(^DHCPEST(STID),"^",2)
	s itemCode=$p($G(^ARCIM($p(ARCIMDR,"||",1),$p(ARCIMDR,"||",2),1)),"^",1)
	s itemDesc=$p($G(^ARCIM($p(ARCIMDR,"||",1),$p(ARCIMDR,"||",2),1)),"^",2)
	s price=##class(web.DHCPE.Handle.ARCItmMast).GetItmPrice(ARCIMDR,"","","","","","","","","")
	S sexDR=$G(^DHCPEDataEx("DHCPEStationOrder","Sex",ARCIMDR))
	s sexDesc=""
	s:sexDR'="" sexDesc=$P(^CT("SEX",sexDR),"^",2)
	s vipDR=$G(^DHCPEDataEx("DHCPEStationOrder","VIPLevelType",ARCIMDR))
	s vipDesc=""
	s:vipDR'="" vipDesc=$P(^DHCPEVIPLevel("VIP",vipDR),"^",2)
	q ARCIMDR_"^"_itemCode_"^"_itemDesc_"^"_STID_"^"_STDesc_"^"_price_"^"_sexDR_"^"_sexDesc_"^"_vipDR_"^"_vipDesc
]]></Implementation>
</Method>

<Method name="GetAllStation">
<Description>
Descript:获取站点信息
Creater:	wangguoying
CreateDate:	2018-03-07	
Table: DHC_PE_Station
Input:
Output:	
w ##class(HS.BL.ExaminationRegister).GetAllStation("")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>Param:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s retStr=""
	s stId=0
	f  s stId=$o(^DHCPEST(stId))  q:stId=""  d
	.s stDesc=$P(^DHCPEST(stId),"^",2)
	.s myObj=##class(HS.Temp.PEStation).%New()
	.s myObj.stationId=stId
	.s myObj.stationDesc=stDesc
	.s sc=myObj.XMLExportToString(.Xml,"PEStation")
	.q:$$$ISERR(sc)
	.s retStr=retStr_Xml
	q retStr
]]></Implementation>
</Method>

<Method name="GetAllPEItem">
<Description>
Descript:获取所有体检项目
Creater:	wangguoying
CreateDate:	2018-03-07	
Table: DHC_PE_StationOrder
Input:
Output:	
w ##class(HS.BL.ExaminationRegister).GetAllPEItem("")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>Param:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:Param="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(Param)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if (reader.Next(.request,.sc)){
		s stationId=$TR(request.stationId,$c(0))
		s itemDesc=$TR(request.itemDesc,$c(0))
		s itemId=$TR(request.itemId,$c(0))
	}else{
		if $$$ISERR(sc) q "-21^解析参数错误"
	}
	s retStr=""
	s stId=0
	f  s stId=$o(^DHCPEST(stId))  q:stId=""  d
	.s stSub=0
	.f  s stSub=$o(^DHCPEST(stId,"O",stSub))  q:stSub=""  d
	..s ARCIMDR=$p(^DHCPEST(stId,"O",stSub),"^",1)
	..q:(itemId'="")&&(itemId'=ARCIMDR)
	..s ARCIMDRDesc=$p($G(^ARCIM($p(ARCIMDR,"||",1),$p(ARCIMDR,"||",2),1)),"^",2)
	
	..s qybz=1  //启用标志
	..s EffDateFInfo=$p(^ARCIM($p(ARCIMDR,"||",1),$p(ARCIMDR,"||",2),1),"^",13)
	..i EffDateFInfo'="" d
	...s:(+EffDateFInfo)>+$h qybz=0
	..s EffDateTo=$p(^ARCIM($p(ARCIMDR,"||",1),$p(ARCIMDR,"||",2),7),"^",1)
	..i EffDateTo'="" d
	...s:EffDateTo<+$H qybz=0
	..q:qybz=0
	..s curInfo=..GetPEItemInfoByID(ARCIMDR)
	..q:curInfo=""
	..q:(stationId'="")&&($P(curInfo,"^",4)'=stationId)
	..q:(itemDesc'="")&&($ZCVT($P(curInfo,"^",3),"U")'[$ZCVT(itemDesc,"U"))
	..s myObj=##class(HS.Temp.PEItem).%New()
	..s myObj.itemId=$P(curInfo,"^",1)
	..s myObj.itemDesc=$P(curInfo,"^",3)
	..s myObj.itemPrice=$P(curInfo,"^",6)
	..s myObj.sexId=$P(curInfo,"^",7)
	..s myObj.sexDesc=$P(curInfo,"^",8)
	..s myObj.stationId=$P(curInfo,"^",4)
	..s myObj.stationDesc=$P(curInfo,"^",5)
	..s myObj.vipId=$P(curInfo,"^",9)
	..s myObj.vipDesc=$P(curInfo,"^",10)
	..s sc=myObj.XMLExportToString(.Xml,"PEItem")
	..q:$$$ISERR(sc)
	..s retStr=retStr_Xml
	q retStr
]]></Implementation>
</Method>

<Method name="SaveRegisterRecordNoQuota">
<Description><![CDATA[
Descript:保存个人预约记录(未缴费)(不限额)
Creater:	王国营
CreateDate:	2018-05-02
Table:User.DHCPENetPreRecord，DHC_PE_NetPreItemRecord
Input:<Request><patientName>姓名</patientName><sexDesc>性别：男，女</sexDesc>
<patientDob>出生日期</patientDob><patientIdNo>身份证号</patientIdNo>
<cardType>证件类型</cardType>
<telephoneNo>手机号</telephoneNo><locId></locId>
<regStatus>状态:0：网上预约</regStatus>
<ordSetId>套餐id</ordSetId><regExamDate>预约的体检日期</regExamDate>
<netItemStr>项目ID~价格@项目ID~价格@</netItemStr></Request>(此接口的netItemStr不应包含套餐内的项目)
Output:	
Return：0^成功
w ##class(HS.BL.ExaminationRegister).SaveRegisterRecordNoQuota("<Request><telephoneNo>15278781234</telephoneNo><occupation></occupation><regStatus>0</regStatus><marriage></marriage><education></education><cardType>身份证</cardType><patientName>ew</patientName><levelDesc>普通</levelDesc><sexDesc>男</sexDesc><patientRegNo></patientRegNo><patientIdNo>656565198809101234</patientIdNo><regExamDate>2016-10-24</regExamDate><patientDob>1988-09-10</patientDob><locId>263</locId><datePmType>I</datePmType><regId></regId><ordSetId>489</ordSetId><detailId>2711||29301</detailId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s patientRegNo=$TR(request.patientRegNo,$c(0))
		s patientName=$TR(request.patientName,$c(0))
		s sexDesc=$TR(request.sexDesc,$c(0))
		s dob=$TR(request.patientDob,$c(0))
		s idNo=$TR(request.patientIdNo,$c(0))
		s telNo=$TR(request.telephoneNo,$c(0))
		s status=$TR(request.regStatus,$c(0))
		s ordSetId=$TR(request.ordSetId,$c(0))
		s regExamDate=$TR(request.regExamDate,$c(0))
		s locId=$TR(request.locId,$c(0))
		s levelDesc=$TR(request.levelDesc,$c(0))
		s cardType=$TR(request.cardType,$c(0))
		s datePmType=$TR(request.datePmType,$c(0))
		s netItemStr=$TR(request.netItemStr,$c(0))
				
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	i (patientRegNo'="")
	{
		//$g(id)		_"^"_PIBIPAPMINo_"^"_PIBIName	_"^"_PIBISexDR	_"^"_PIBISexDRName	_"^"_PIBIDOB	_"^"_PIBIPatTypeDR	_"^"_	PIBIPatTypeDRName		_"^"_PIBITel1	_"^"_PIBITel2	_"^"_PIBIMobilePhone	_"^"_PIBIIDCard	_"^"_PIBIVocation			_"^"_PIBIPosition_"^"_PIBICompany	 _"^"_PIBIPostalcode_"^"_PIBIAddress     _"^"_PIBINation		_"^"_PIBIEmail	_"^"_PIBIMarriedDR	_"^"_PIBIMarriedDRName	_"^"_PIBIBloodDR	_"^"_PIBIBloodDRName		_"^"_PIBIUpdateDate	_"^"_PIBIUpdateUserDR	_"^"_PIBIUpdateUserDRName
		s Strings=##class(web.DHCPE.PreIBaseInfo).GetHISIBaseInfo("","","^"_patientRegNo_"^")
		q:Strings="" "-4^登记号无效"
		s patientName=$p(Strings,"^",3)
		s sexDesc=$p(Strings,"^",5)
		s PIBIDOB=$p(Strings,"^",6)
		i PIBIDOB'="" d
		.s dob=$ZD($zdh(PIBIDOB),3)
		s idNo=$p(Strings,"^",12)
		s PIBITel=$p(Strings,"^",9)
		s:telNo="" telNo=PIBITel
	}
	
	q:patientName="" "-4^请准确填写您的姓名"
	q:(idNo="")&&(patientRegNo="") "-5^登记号和身份证号不可同时为空"
	q:regExamDate="" "-6^请选择体检日期"
	;s regExamDate=$zdh(regExamDate,3)
	s:sexDesc'="" sexId=$o(^CT("SEX",0,"Desc",$$ALPHAUP^SSUTIL4(sexDesc),0))
	s existId=""
	s:idNo'="" existId=##class(HS.BL.ExaminationRegister).GetRegId(idNo)
	q:existId'="" "-7^该身份证已经存在未执行的预约记录，请核实"
	s:(idNo="")&&(patientRegNo'="") existId=##class(HS.BL.ExaminationRegister).GetRegIdByRegNo(patientRegNo)
	q:existId'="" "-7^该登记号已经存在未执行的预约记录，请核实"
	s:datePmType="" datePmType="I"
	s:status="" status="0"
	s:levelDesc="" levelDesc=$P(^DHCPEVIPLevel("VIP",$G(^DHCPEVIPLevel("VIPapprove"))),"^",2)
	TS
	;保存体检预约记录
	i dob'=""  d
	.s age=(+$h-$zdh(dob,3))/365
	e  d
	.s age=""
	s data=patientRegNo_"^"_patientName_"^"_$g(sexId)_"^"_age_"^"_idNo_"^"_status_"^"_ordSetId_"^"_regExamDate_"^^^^"_locId_"^^"_telNo_"^"_datePmType_"^"_levelDesc
	s regId=..SaveRegister(data,"0")
	i +regId<=0  tro  q "-11^保存预约信息失败："_$P(regId,"^",2)
	
	i ($G(^DHCPESetting("DHCPE","SelfNetItem",locId))="Y")&&(netItemStr'="") {
		;更新网上自选项目
		s ret=..UpdateNoPaidNetPreItem(+regId,"",netItemStr)
		b ;ret
		i ret'=""  tro  q "-22^保存网上自选项目失败:"_$P(ret,"^",2)
	}
	Tc
	s str="<Request><patientIdNo></patientIdNo><patientName>"_patientName_"</patientName><regId>"_regId_"</regId></Request>"
	s retStr=..QueryRegRecord(str)	
	q retStr
]]></Implementation>
</Method>

<Method name="UpdateRegisterDateNoQuota">
<Description><![CDATA[
Descript:修改个人预约记录（不限额）
Creater:	王国营
CreateDate:	2018-05-02
Table:User.DHCPENetPreRecord  DHC_PE_NetPreItemRecord
(此接口的netItemStr不应包含套餐内的项目)
w ##class(HS.BL.ExaminationRegister).UpdateRegisterDateNoQuota("<Request><levelDesc>普通</levelDesc><gid></gid><regExamDate>2016-10-21</regExamDate><datePmType>I</datePmType><regId>1</regId><ordSetId>491</ordSetId><detailId>2690||29244</detailId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s regId=$TR(request.regId,$c(0))
		s regExamDate=$TR(request.regExamDate,$c(0))
		s levelDesc=$TR(request.levelDesc,$c(0))
		s gid=$TR(request.gid,$c(0))
		s ordSetId=$TR(request.ordSetId,$c(0))		
		s datePmType=$TR(request.datePmType,$c(0))	
		s netItemStr=$TR(request.netItemStr,$c(0))
		s patientName=$TR(request.patientName,$c(0))	
		s detailId=$TR(request.detailId,$c(0))	
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:regId="" "-4^参数不能为空"
	q:regExamDate="" "-6^请选择体检日期"
	s regExamDate=$zdh(regExamDate,3)
	s myObj=##class(User.DHCPENetPreRecord).%OpenId(regId)
	q:myObj="" "-11^记录无效"
	s:(datePmType="O") levelDesc="过期主场"
	s myObj.NPRLevelDesc = levelDesc
	s status=myObj.NPRStatus
	i patientName'="" d
	.s myObj.NPRName=patientName
	e  d
	.s patientName=myObj.NPRName
	s hisRegId=myObj.NPRPreIADM
	s LocId = myObj.NPRLocID
	q:status=2 "-7^撤销预约，不能修改"
	q:status=3 "-7^过期未在医院预约，不能修改"
	q:status=5 "-7^已体检，不能修改"
	q:status=6 "-7^取消体检，不能修改"
	TStart
	s $ZT="ErrorUpd"

	i (myObj.NPRPreDate'=regExamDate) d
	.s myObj.NPRPreDate=regExamDate
	.;s myObj.NPRPreDateFlag="1"
	s myObj.NPRUpdateDate=+$h
	s myObj.NPRUpdateTime=$p($h,",",2)
	s myObj.NPRDatePmType = datePmType
	s endTime=""
	i detailId'=""  d
	.if (datePmType="H")  do
	..s objHomeTimemanger=##class(User.DHCPEPreHomeTimeInfo).%OpenId(detailId)
	..q:objHomeTimemanger=""
	..s myObj.NPRPreHomeTImeDR=objHomeTimemanger
	..s endTime=objHomeTimemanger.PHEndTime
	..s myObj.NPRPreTime=objHomeTimemanger.PHEndTime
	.e  do
	..s objTimemanger=##class(User.DHCPEPreTimeManager).%OpenId(detailId)
	..q:objTimemanger=""
	..s myObj.NPRPreTimeMangerDR=objTimemanger
	..s endTime=objTimemanger.PTMEndTime
	..s myObj.NPRPreTime=objTimemanger.PTMEndTime
	
	i ordSetId'=""  d
	.q:status'=0  ;只有状态为0才能修改套餐
	.s myObj.NPRSetsDR=##class(User.ARCOrdSets).%OpenId(ordSetId)

	s sc=myObj.%Save()
	i $$$ISERR(sc) trollback 
	q:$$$ISERR(sc) "-9^修改预约日期失败:"_$System.Status.GetErrorText(sc)
	s myObj=""
	;保存修改记录
	s strParam="<Request><regId>"_regId_"</regId><regExamDate>"_$zd(regExamDate,3)_"</regExamDate><detailId>"_detailId_"</detailId><datePmType>"_datePmType_"</datePmType><levelDesc>"_levelDesc_"</levelDesc></Request>"
	s ret=..AuditRegisterRecord(strParam)
	i ret'=0 trollback
	q:ret'=0 "-10^保存修改记录失败:"_ret
	;更新his预约日期
	i hisRegId'=""  d
	.s ret=##class(web.DHCPE.TransAdmInfo).UpdateAdmDate(hisRegId, $zd(regExamDate,4)_"^"_$g(endTime))
	b ;ret2
	i ret'=0 trollback
	q:ret'=0 "-11^更新his体检日期失败"
	
	i ($G(^DHCPESetting("DHCPE","SelfNetItem",LocId))="Y"){
		;更新网上自选项目  netItemStr=医嘱ID~价格@医嘱ID~价格@医嘱ID~价格@     wgy
		s netRet=""
		s:hisRegId'="" netRet=..UpdateNetPreItem(hisRegId,netItemStr,1)
		s:hisRegId="" netRet=..UpdateNoPaidNetPreItem(regId,"", netItemStr)
		b ;wgy
		i netRet'=""  trollback  q netRet
	}
	
	
	i $tl>0 tcommit
	s str="<Request><patientIdNo></patientIdNo><patientName>"_patientName_"</patientName><regId>"_regId_"</regId></Request>"
	s retStr=..QueryRegRecord(str)
	
	q retStr
ErrorUpd
   s $ZT=""
   s rtn=-100
   trollback
   q:$ze="" rtn
   q rtn_"^"_$ze
]]></Implementation>
</Method>

<Method name="QueryAllAvailHomeInfo">
<Description>
获取当前可用的全部主场团体信息
w ##class(HS.BL.ExaminationRegister).QueryAllAvailHomeInfo("")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<Implementation><![CDATA[
	;$O(^User.DHCPEPreHomeInfoI("DateRPGADMDrIndex",PreGADM,Date)
	s PreGADM=""
	s retStr=""
	f  s PreGADM=$O(^User.DHCPEPreHomeInfoI("DateRPGADMDrIndex",PreGADM)) q:PreGADM=""  d
	.s status=$P(^DHCPEPreGADM(PreGADM),"^",6)
	.q:status="CANCELPE" 
	.s preEndDate=$P(^DHCPEPreGADM(PreGADM),"^",3)
	.q:(preEndDate'="")&&(preEndDate<+$H)
	.s homeEndDate=$o(^User.DHCPEPreHomeInfoI("DateRPGADMDrIndex",PreGADM,""),-1)
	.q:homeEndDate<+$H
	.s groupId=$P(^DHCPEPreGADM(PreGADM),"^",1)
	.s myObj=##class(HS.Temp.GroupInfo).%New()
	.s myObj.groupId=groupId
	.s myObj.groupDesc=$P(^DHCPEPreGBI(groupId),"^",2)
	.s sc=myObj.XMLExportToString(.XML,"GroupInfo")
	.i '$$$ISERR(sc)  d
	..s retStr=retStr_XML
	q retStr
]]></Implementation>
</Method>
</Class>


<Class name="HS.BL.ExaminationRegisterNew">
<Super>%RegisteredObject</Super>
<TimeChanged>64800,58416.959594</TimeChanged>
<TimeCreated>64799,37434.221554</TimeCreated>

<Method name="QueryHomeFirAvailDate">
<Description><![CDATA[
Descript:查询主场团体第一个可以预约的日期(南山妇幼)
Return：<ExamRegRecord></ExamRegRecord>
w ##class(HS.BL.ExaminationRegister).QueryHomeFirAvailDate("<Request><sex>M</sex><pmType>H</pmType><levelDesc>普通</levelDesc><gid>2020</gid><locId>572</locId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
 	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数错误:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationRegRequest")
	if reader.Next(.request,.sc){
		s locId=$TR(request.locId,$c(0))
		s levelDesc	=$TR(request.levelDesc,$c(0))
		s pmType=$TR(request.pmType,$c(0))
		s sex=$TR(request.sex,$c(0))
		s groupId=$TR(request.groupId,$c(0))
	}else{
		q "-3^解析参数错误："_$System.Status.GetErrorText(sc)
	}
	q:groupId="" "-5^团体ID不能为空"
	
	q:locId="" "-5^科室ID不能为空"
	s:levelDesc="" levelDesc=^DHCPEVIPLevel("VIP",$G(^DHCPEVIPLevel("VIPapprove")),"^",2)
	s levelId=##class(web.DHCPE.VIPLevel).GetVIPIDByDesc(levelDesc)
	q:levelId="" "-51^VIP等级不能为空"
	q:pmType="" "-52^预约类型不能为空"
	s retStr=""
	s pmType=$$ALPHAUP^SSUTIL4(pmType)
	i locId'="" s locDesc=$p(^CTLOC(locId),"^",2)
	s sex=..GetSexIDByDesc(sexDesc)
	s RegFlag = "false"
	
	s FirstHomeDate = ""
	s LastHomeDate = ""	
	s HomeInfoRowId = ""
	s gid=..GetLastPreGADMID(groupId)
	q:gid="" "-53^团体ID无效"
	s LastHomeID=##class(web.DHCPE.PreHome).GetLastHomeIDByGADM(gid)
	q:LastHomeID="" ""  ;非主场返回空
	
	s HomeType=""
	i LastHomeID'="" d
	.s HomeType=$LG(^User.DHCPEPreHomeInfoD(LastHomeID),11)
	.s gid=$LG(^User.DHCPEPreHomeInfoD(LastHomeID),2)  ;如果HomeType="C" gid设置为了合同对应的ID
	f  s HomeInfoRowId = $o(^User.DHCPEPreHomeInfoI("PGADMDrIndex",gid,HomeInfoRowId)) q:HomeInfoRowId=""  do
	.s CurHomeType=$LG(^User.DHCPEPreHomeInfoD(HomeInfoRowId),11)
	.q:CurHomeType'=HomeType
	.s Num=""
	.i sex="1" s Num = $LG(^User.DHCPEPreHomeInfoD(HomeInfoRowId),5)
	.i sex="2" s Num = $LG(^User.DHCPEPreHomeInfoD(HomeInfoRowId),6)
	.s date = $LG(^User.DHCPEPreHomeInfoD(HomeInfoRowId),10)
	.q:(date<+$h)
	.s totalRegCount = 0
	.s totalCount = 0
	.i Num=""  d
	..s totalCount=totalCount+0
	.e  d
	..s totalCount=totalCount+Num
	
	.;w:(date="63756") date_"^"_locId_"^"_levelDesc_"^"_pmType_"^"_HomeInfoRowId,!
	.s regCount=##class(web.DHCPE.NetPre.GetPreInfo).GetPreNum(date,locId,$g(levelDesc),pmType,"","","H",HomeInfoRowId) ;//计算已预约数
	.s regMaleNum = $p(regCount,"-",1)
	.s regFemaleNum = $p(regCount,"-",2)
	.i sex="1" s totalRegCount=totalRegCount+regMaleNum
	.i sex="2" s totalRegCount=totalRegCount+regFemaleNum
	
	.s status = ""
	.s availCount=totalCount-totalRegCount
	.s:(availCount<0) availCount=0
	.i totalCount=0  d
	..s status="不可约"
	.e  d
	..i availCount<=0  d
	...s status="已约满"
	..e  d
	...s status="可预约"
	.i date<=+$h  d
	..s availCount=0  //今天及今天以前不能再预约
	..s status="已过期"
	
	.s tommorow=+$h+1
	.s curTime=$p($h,",",2)
	.i (date=tommorow)&(curTime>$zth("15:00:00",3))  d
	..s availCount=0  //3点以后不能约第二天的
	..s status="已过期"

	
	.i status="可预约" do
	..i RegFlag = "false"  do
	...s FirstHomeDate = date
	..s RegFlag = "true"
	
	.i RegFlag = "true"  do
	..i date<FirstHomeDate s FirstHomeDate = date

	s RetDate = ""
	i RegFlag = "true"  do
	.s FirstHomeDate = $zd(FirstHomeDate,3)
	.s RetDate = "<ExamHomeFirstAvaDate><avaDate>"_FirstHomeDate_"</avaDate><regFlag>"_RegFlag_"</regFlag></ExamHomeFirstAvaDate>"
	
	q RetDate
]]></Implementation>
</Method>

<Method name="GetSexIDByDesc">
<Description>
w ##class(HS.BL.ExaminationRegister).GetSexIDByDesc("男")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SexDesc</FormalSpec>
<Implementation><![CDATA[
	q:SexDesc="" ""
	s SexDesc=$TR(SexDesc,$C(0))
	q $O(^CT("SEX",0,"Desc",SexDesc,""))
]]></Implementation>
</Method>

<Method name="GetLastPreGADMID">
<Description>
根据团体ID获取最新团体预约ID</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>GroupID</FormalSpec>
<Implementation><![CDATA[
	s GID="",LastGID=""
	f  s GID=$O(^DHCPEPreGADM(0,"PGBI",GroupID,GID))  q:(GID="")||(LastGID'="")  d
	.s Status=$P(^DHCPEPreGADM(GID),"^",6)
	.q:Status="CANCELPE"
	.s LastGID=GID
	q LastGID
]]></Implementation>
</Method>
</Class>


<Class name="HS.BL.ExaminationReport">
<Super>%RegisteredObject</Super>
<TimeChanged>64818,53074.04037</TimeChanged>
<TimeCreated>63181,55570.470173</TimeCreated>

<Method name="QueryExaminationReportList">
<Description><![CDATA[
Descript:根据病人id查找历次体检记录
Creater:	ZhangDongmei
CreateDate:	2013-12-25
Table:^DHCPENetReport("Record",RegNo,PAADM)=姓名^性别^年龄^单位^体检日期^体检科室^总检医生^总检日期^审核医生^审核日期^套餐类型
Input:<Request><patientNo>病人id</patientNo><startRow></startRow><pageSize></pageSize></Request>
Output:	
Return：<ExaminationList></ExaminationList>
w ##class(HS.BL.ExaminationReport).QueryExaminationReportList("<Request><patientNo>0000000110</patientNo></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s papmiNo=$TR(request.patientNo,$c(0))
		s startRow=$TR(request.startRow,$c(0))
		s pageSize=$TR(request.pageSize,$c(0))
	}else{
		if $$$ISERR(sc) q "-21^解析参数错误:"_$System.Status.GetErrorText(sc)
	}
	q:papmiNo="" "-3^病人id不能为空"
	s startRow=+$g(startRow)
	s pageSize=+$g(pageSize)
	s endRow=startRow+pageSize
	s count=0
	s retStr=""
	s admId=0
	f  s admId=$o(^DHCPENetReport("Record",papmiNo,admId)) q:admId=""  d
	.s RZFlg = 0
	.s RZFlg = ##class(web.DHCPE.NetPre.GetPreInfo).IsRZ(admId)
	.q:RZFlg=1
	.s data=^DHCPENetReport("Record",papmiNo,admId)
	.s count=count+1
	.q:count<=startRow
	.q:(endRow'=0)&(count>endRow)
	.s myObj=##class(HS.Temp.ExaminationList).%New()
	.s myObj.admId=admId
	.s myObj.age=$p(data,"^",3)
	.s myObj.auditDate=$p(data,"^",10)
	.s myObj.auditDoctor=$p(data,"^",9)
	.s myObj.company=$p(data,"^",4)
	.s myObj.examDate=$p(data,"^",5)
	.s myObj.examLoc=$p(data,"^",6)
	.s myObj.name=$p(data,"^",1)
	.s myObj.sex=$p(data,"^",2)
	.s myObj.summaryDate=$p(data,"^",8)
	.s myObj.summaryDoctor=$p(data,"^",7)
	.s myObj.vipDesc=$p(data,"^",11)
	.s sc=myObj.XMLExportToString(.Xml,"ExaminationList")
	.q:$$$ISERR(sc)
	.s retStr=retStr_Xml
	.
	q "<total>"_count_"</total>"_retStr
]]></Implementation>
</Method>

<Method name="QuerSummaryWithValidate">
<Description><![CDATA[
W ##CLASS(HS.BL.ExaminationReport).QuerSummaryWithValidate("<Request><admId>4039849</admId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s admId=$TR(request.admId,$c(0))
		s idCard=$TR(request.idCard,$c(0))
		s phoneNo=$TR(request.phoneNo,$c(0))
	}else{
		if $$$ISERR(sc) q:"-21^解析参数错误"
	}
	q:(admId="")||(idCard="")||(phoneNo="") "-3^参数不能为空"
	s validRet=..ValidBaseInfo(admId,idCard,phoneNo)
	q:validRet'="" validRet
	s requestPar="<Request><admId>"_admId_"</admId></Request>"
	q ..QueryExaminationSummary(requestPar)
]]></Implementation>
</Method>

<Method name="ValidBaseInfo">
<Description>
Descript:验证身份信息</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>admId,idCard,phoneNo</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s PEID=$O(^DHCPEIADM(0,"PAADM",admId,0))
	q:PEID="-101^就诊ID无效"
	s PreIADMDR=$p(^DHCPEIADM(PEID),"^",4)
	s PIBIDR=$P(^DHCPEPreIADM(PreIADMDR),"^",1)
	s CurTelphone=$P(^DHCPEPreIBI(PIBIDR),"^",8)
	s CurIDCard=$P(^DHCPEPreIBI(PIBIDR),"^",9)
	q:(CurIDCard'=idCard)||(CurTelphone'=phoneNo) "-102^身份验证失败，请核实个人信息"
	q ""
]]></Implementation>
</Method>

<Method name="QuerySummaryByItem">
<Description><![CDATA[
Descript:分条查找总检建议
Creater:	wangguoying
CreateDate:	2018-04-23
Table:^DHCPENetReport("Result",PAADM,"Advice")=建议内容(很大一段内容)
Input:<Request><admId>4039849</admId></Request>
Output:	
Return：<ExaminationSummary></ExaminationSummary>
W ##CLASS(HS.BL.ExaminationReport).QueryExaminationSummary("<Request><admId>4039849</admId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s admId=$TR(request.admId,$c(0))
	}else{
		if $$$ISERR(sc) q:"-21^解析参数错误"
	}
	q:admId="" "-3^参数不能为空"
	s papmi=$p(^PAADM(admId),"^",1)
	s papmiNo=$p(^PAPER(papmi,"PAT",1),"^",1)	
	s reportStatus=##class(web.DHCPE.NetReport.Main).IsAuditReport(admId)
	d:reportStatus'=0 ##class(web.DHCPE.NetReport.Main).SetReportData(admId)
	s data=$G(^DHCPENetReport("Record",papmiNo,admId))
	q:data="" "-5^报告内容不存在!"
	s myObj=##class(HS.Temp.ExaminationSummary).%New()
	s myObj.auditDate=$p(data,"^",10)
	s myObj.auditDoctor=$p(data,"^",9)
	s myObj.summaryDate=$p(data,"^",8)
	s myObj.summaryDoctor=$p(data,"^",7)
	s advice=^DHCPENetReport("Result",admId,"Advice")
	i advice'="" d
	.s num=$L(advice,$c(10,10))	
	.f i=1:1:num d
	..s adviceData=$p(advice,$c(10,10),i)
	..s itemObj=##class(HS.Temp.SummaryItem).%New()
	..s itemObj.item=$p(adviceData,$c(10),1)
	..s itemObj.itemDesc=$p(adviceData,$c(10),2)
	..d myObj.summaryList.Insert(itemObj)
	s sc=myObj.XMLExportToString(.Xml,"ExaminationSummary")
	q:$$$ISERR(sc) "-4^查询错误"
	q Xml
]]></Implementation>
</Method>

<Method name="QuerySummaryByItem3">
<Description><![CDATA[
Descript:分条查找总检建议(分三级)
Creater:	wangguoying
CreateDate:	2018-04-23
Table:^DHCPENetReport("Result",PAADM,"Advice")=建议内容(很大一段内容)
Input:<Request><admId>4039849</admId></Request>
Output:	
Return：<ExaminationSummary></ExaminationSummary>
W ##CLASS(HS.BL.ExaminationReport).QueryExaminationSummary("<Request><admId>4039849</admId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s admId=$TR(request.admId,$c(0))
	}else{
		if $$$ISERR(sc) q:"-21^解析参数错误"
	}
	q:admId="" "-3^参数不能为空"
	s papmi=$p(^PAADM(admId),"^",1)
	s papmiNo=$p(^PAPER(papmi,"PAT",1),"^",1)	
	s reportStatus=##class(web.DHCPE.NetReport.Main).IsAuditReport(admId)
	d:reportStatus'=0 ##class(web.DHCPE.NetReport.Main).SetReportData(admId)
	s data=$G(^DHCPENetReport("Record",papmiNo,admId))
	q:data="" "-5^报告内容不存在!"
	s myObj=##class(HS.Temp.ExaminationSummary).%New()
	s myObj.auditDate=$p(data,"^",10)
	s myObj.auditDoctor=$p(data,"^",9)
	s myObj.summaryDate=$p(data,"^",8)
	s myObj.summaryDoctor=$p(data,"^",7)
	s advice=^DHCPENetReport("Result",admId,"Advice")
	s:advice'="" advice=$Replace(advice,"&nbsp;"," ")
	i advice'="" d
	.s num=$L(advice,$c(13,10))	
	.f i=1:1:num-1 d
	..s adviceData=$p(advice,$c(13,10),i)
	..s itemObj=##class(HS.Temp.SummaryItem).%New()
	..s item=$e(adviceData,1,$F(adviceData,"</b><br>")-1)
	..s itemObj.item=$Replace(item,"<br>","")
	..s detailData=$e(adviceData,$F(adviceData,"</b><br>"),$L(adviceData))
	..s detailNum=$L(detailData,"。<br>")
	..f j=1:1:detailNum d
	...s detail=$P(detailData,"。<br>",j)
	...s detailObj=##class(HS.Temp.SummaryDetail).%New()
	...s detailObj.detail=$P(detail,"</b><br>",1)
	...i $P(detail,"</b><br>",2)'="" d
	....s:j'=detailNum detailObj.detailDesc=$P(detail,"</b><br>",2)_"。"
	....s:j=detailNum detailObj.detailDesc=$P(detail,"</b><br>",2)_"<br>"
	...d itemObj.detailList.Insert(detailObj)
	..d myObj.summaryList.Insert(itemObj)	
	;s advice=$Replace(advice,$C(10,10),"<br>")
	;s advice=$Replace(advice,$C(10),"<br>")
	;s myObj.examSummary=advice
	s sc=myObj.XMLExportToString(.Xml,"ExaminationSummary")
	q:$$$ISERR(sc) "-4^查询错误"
	q Xml
]]></Implementation>
</Method>

<Method name="QueryExaminationSummary">
<Description><![CDATA[
Descript:根据体检记录PAADM查找总检建议
Creater:	ZhangDongmei
CreateDate:	2013-12-25
Table:^DHCPENetReport("Result",PAADM,"Advice")=建议内容(很大一段内容)
Input:<Request><admId>4039849</admId></Request>
Output:	
Return：<ExaminationSummary></ExaminationSummary>
W ##CLASS(HS.BL.ExaminationReport).QueryExaminationSummary("<Request><admId>4039849</admId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s admId=$TR(request.admId,$c(0))
	}else{
		if $$$ISERR(sc) q:"-21^解析参数错误"
	}
	q:admId="" "-3^参数不能为空"
	s papmi=$p(^PAADM(admId),"^",1)
	s papmiNo=$p(^PAPER(papmi,"PAT",1),"^",1)
	s reportStatus=##class(web.DHCPE.NetReport.Main).IsAuditReport(admId)
	d:reportStatus'=0 ##class(web.DHCPE.NetReport.Main).SetReportData(admId)	
	s data=$G(^DHCPENetReport("Record",papmiNo,admId))
	q:data="" "-5^报告内容不存在!"
	s myObj=##class(HS.Temp.ExaminationSummary).%New()
	s myObj.auditDate=$p(data,"^",10)
	s myObj.auditDoctor=$p(data,"^",9)
	s myObj.summaryDate=$p(data,"^",8)
	s myObj.summaryDoctor=$p(data,"^",7)
	s advice=^DHCPENetReport("Result",admId,"Advice")
	;s:advice'="" advice=$Replace(advice,"&nbsp;"," ")
	s advice=$Replace(advice,$C(10,10),"<br>")
	s advice=$Replace(advice,$C(10),"<br>")
	s myObj.examSummary=advice
	s sc=myObj.XMLExportToString(.Xml,"ExaminationSummary")
	q:$$$ISERR(sc) "-4^查询错误"
	q Xml
]]></Implementation>
</Method>

<Method name="QueryExaminationItem">
<Description><![CDATA[
Descript:根据病人id查找历次体检记录
Creater:	ZhangDongmei
CreateDate:	2013-12-26
Table:^DHCPENetReport("Result",PAADM,"OrdItem",Sort,OrdItemID)=项目名称^报告格式^审核医生名字^医生名字^检查日期
^DHCPENetReport("Result",PAADM,"OrdDetail",OrdItemID,"Detail",Sort,DetailID)=细项名称^英文缩写^检查结果^提示(上下箭头)^单位(10S9)^参考范围
Input:<Request><admId>体检id</admId><startOrdItemId>本页第一条体检项目id</startOrdItemId>
<endOrdItemId>本页最后一条体检项目id</endOrdItemId><upDownFlag>-1:上一篇;1:下一篇</upDownFlag></Request>
Output:	
Return：<ExaminationItem></ExaminationItem>
W ##CLASS(HS.BL.ExaminationReport).QueryExaminationItem("<Request><pageNo>2</pageNo><admId>131</admId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s ^zdm("QueryExaminationItem")=params
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s admId=$TR(request.admId,$c(0))
		s startOrdItemId=$TR(request.startItemId,$c(0))
		s endOrdItemId=$TR(request.endItemId,$c(0))
		s upDownFlag=$TR(request.upDownFlag,$c(0))
		s pageNo=+$TR(request.pageNo,$c(0))
	}else{
		q:$$$ISERR(sc) "-3^解析参数错误:"_$System.Status.GetErrorText(sc)
	}
	;s ^TMPBYZN("0129") = pageNo_"^"_admId
	q:$g(admId)="" "-4^体检id不能为空"
	s ret=0
	i (pageNo<=1)  d
	.s ret=..PageExaminationItem(admId)
	q:ret'=0 "-5^没有体检记录"
	s pageInfo=$g(^DHCPENetReportPage("Page",admId,pageNo))
	s startSort=+$p(pageInfo,"^",1)
	s endSort=+$p(pageInfo,"^",2)
	s pages=$p(pageInfo,"^",3)
	s firstSort=$o(^DHCPENetReport("Result",admId,"OrdItem",""))
	s firstItemId=$o(^DHCPENetReport("Result",admId,"OrdItem",firstSort,""))
	s lastSort=$o(^DHCPENetReport("Result",admId,"OrdItem",""),-1)
	s lastItemId=$o(^DHCPENetReport("Result",admId,"OrdItem",lastSort,""),-1)
	;b "lastItemId"
	;s count = 0
	;s sortLast = ""
	;f  s sortLast = $o(^DHCPENetReport("Result",admId,"OrdItem",sortLast)) q:sortLast=""  do
	.;s detail = $o(^DHCPENetReport("Result",admId,"OrdItem",sortLast,""))
	.;q:detail=""
	.;q:detail="Detail"
	.;s count = count + 1
	
	;s lastItemId=$o(^DHCPENetReport("Result",admId,"OrdItem",count,""),-1)
	
	;b "lastItemId"
	s retStr=""
	s exitFlag=0
	s sort=startSort-1
	f  s sort=$o(^DHCPENetReport("Result",admId,"OrdItem",sort)) q:(sort="")!(sort>endSort)  d
	.s ordItemId=$o(^DHCPENetReport("Result",admId,"OrdItem",sort,0)) 
	.q:ordItemId=""
	.q:ordItemId="Detail"
	.
	.s data=^DHCPENetReport("Result",admId,"OrdItem",sort,ordItemId)
	.s isFirst=0
	.s isLast=0
	.i ordItemId=firstItemId  d
	..s isFirst=1
	.i ordItemId=lastItemId  d
	..s isLast=1
	.b ;"ordItemId"
	.s myObj=##class(HS.Temp.ExaminationItem).%New()
	.s myObj.itemId=ordItemId
	.s myObj.auditDoctorName=$p(data,"^",3)
	.s myObj.doctorName=$p(data,"^",4)
	.s myObj.examDate=$p(data,"^",5)
	.s myObj.itemDesc=$p(data,"^",1)
	.s reportFormat=$p(data,"^",2)
	.s myObj.reportFormat=reportFormat
	.s myObj.stationCode=$p(data,"^",6)
	.s myObj.stationName=$p(data,"^",7)
	.s myObj.diagnosis=$p(data,"^",8)
	.s myObj.isFirst=isFirst
	.s myObj.isLast=isLast
	.s detailSort=""
	.f  s detailSort=$o(^DHCPENetReport("Result",admId,"OrdDetail",ordItemId,"Detail",detailSort)) q:detailSort=""  d
	..s detailId=""
	..f  s detailId=$o(^DHCPENetReport("Result",admId,"OrdDetail",ordItemId,"Detail",detailSort,detailId)) q:detailId=""  d
	...s detailData=^DHCPENetReport("Result",admId,"OrdDetail",ordItemId,"Detail",detailSort,detailId)
	...s myDetail=##class(HS.Temp.ExaminationItemDetail).%New()
	...s myDetail.exceptionTip=$p(detailData,"^",4)
	...s myDetail.itemAbbreviation=$p(detailData,"^",2)
	...s myDetail.itemDesc=$p(detailData,"^",1)
	...s myDetail.itemResult=$p(detailData,"^",3)
	...s myDetail.itemUom=$p(detailData,"^",5)
	...s myDetail.referenceRange=$p(detailData,"^",6)
	...;i (reportFormat="RF_RIS")||(reportFormat="RF_EKG")  d
	...;.s imgInfo=..GetItemImg(reportFormat,ordItemId)
	...;.s:imgInfo'="" myDetail.imgInfo=$p(detailData,"^",8)
	...s myDetail.imgInfo=$p(detailData,"^",8)
	
	...;测试数据
	...s:ordItemId="117||5" myDetail.imgInfo="ftp://dhc:dhc@127.0.0.1:21/test/2233.pdf"
	...s:ordItemId="117||7" myDetail.imgInfo="ftp://dhc:dhc@127.0.0.1:21/test/03.png##ftp://dhc:dhc@127.0.0.1:21/test/04.png"
	...;
	...d myObj.ItemDetailList.Insert(myDetail)
	...s myDetail=""
	..
	.s sc=myObj.XMLExportToString(.XML,"ExaminationItem")
	.i '$$$ISERR(sc)  d
	..s retStr=retStr_XML
	.s myObj=""
	.
	q "<total>"_pages_"</total>"_retStr
]]></Implementation>
</Method>

<Method name="GetItemImg">
<Description>
获取检查 心电图片地址</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>ReportFormat,OrdItemID</FormalSpec>
<Implementation><![CDATA[
	s imgPath=""
	i ReportFormat="RF_RIS" d
	.d GetRISIMG
	i ReportFormat="RF_EKG" d
	.d GetEKGIMG
	q imgPath
GetRISIMG
	;检查图片
	s imgPath=##class(web.DHCPE.ReportGetInfor).GetPhotoPath(OrdItemID)
	s:imgPath'="" imgPath=$Replace(imgPath,$C(1),"##") //报告客户端要求##分割多张图片	
	q
GetEKGIMG
	;心电图片
	s imgPath=##class(web.DHCEkgInternalService).GetEKGReportImg(OrdItemID,"")
	q
]]></Implementation>
</Method>

<Method name="PageExaminationItem">
<Description>
Descript:将某次体检记录按规则分页
Creater:	ZhangDongmei
CreateDate:	2013-12-30
Table:^DHCPENetReport("Result",PAADM,"OrdItem",Sort,OrdItemID)=项目名称^报告格式^审核医生名字^医生名字^检查日期
^DHCPENetReport("Result",PAADM,"OrdItem",OrdItemID,"Detail",Sort,DetailID)=细项名称^英文缩写^检查结果^提示(上下箭头)^单位(10S9)^参考范围
Input:admId：体检id
Output:	
Return：pageSize
W ##CLASS(HS.BL.ExaminationReport).PageExaminationItem("8703231")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>admId:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:$g(admId)="" "-4^体检id不能为空"
	k ^DHCPENetReportPage("Page",admId)
	s startSort=$o(^DHCPENetReport("Result",admId,"OrdItem",""))
	s lastSort=startSort
	s pageNo=0
	s count=0
	s sort=""
	f  s sort=$o(^DHCPENetReport("Result",admId,"OrdItem",sort)) q:(sort="")  d
	.s ordItemId=$o(^DHCPENetReport("Result",admId,"OrdItem",sort,0))
	.q:ordItemId=""
	.q:ordItemId="Detail"
	.;s count=count+1
	.i count>=20  d
	..s pageNo=pageNo+1
	..s ^DHCPENetReportPage("Page",admId,pageNo)=startSort_"^"_lastSort_"^"_pageNo
	..s startSort=sort
	..s count=0
	.
	.s lastSort=sort
	.s detailSort=""
	.f  s detailSort=$o(^DHCPENetReport("Result",admId,"OrdDetail",ordItemId,"Detail",detailSort)) q:detailSort=""  d
	..s detailId=""
	..f  s detailId=$o(^DHCPENetReport("Result",admId,"OrdDetail",ordItemId,"Detail",detailSort,detailId)) q:detailId=""  d
	...s count=count+1
	..
	.
	b ;123
	i count>=1  d
	.s pageNo=pageNo+1
	.s lastSort=$o(^DHCPENetReport("Result",admId,"OrdItem",""),-1)
	.s ^DHCPENetReportPage("Page",admId,pageNo)=startSort_"^"_lastSort_"^"_pageNo
	.
	q 0
]]></Implementation>
</Method>

<Method name="SaveValiditMessage">
<Description><![CDATA[
Descript:保存短信验证码
Creater:	ZhangDongmei
CreateDate:	2014-04-14
Table:s InfoStr=RegNo（登记号）_"^"_Tel（手机号）_"^"_Message（短信内容）_"^"_MessageType（类型（暂定"VC"））_"^"_+$H(期望发送日期)_"^"_""_"^"_ID（User.DHCPENetPreRecord的Id）_"^"
d ##class(web.DHCPE.Message.Main).SaveSendMessage(InfoStr)
Input:<Request><patientRegNo>病人id</patientRegNo><telephoneNo></telephoneNo><message></message></Request>
Output:	
Return：0,成功
]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.UserInfo")
	if (reader.Next(.request,.sc)){
		s patRegNo=$TR(request.patientRegNo,$c(0))
		s telNo=$TR(request.telephoneNo,$c(0))
		s message=$TR(request.message,$c(0))
	}else{
		if $$$ISERR(sc) q "-21^解析参数错误:"_$System.Status.GetErrorText(sc)
	}
	q:patRegNo="" "-3^id不能为空"
	q:telNo="" "-3^手机号不能为空"
	q:message="" "-3^短信内容不能为空"
	s messageType="VC"
	s sendDate=+$h
	s patRegNo=$$ALPHAUP^SSUTIL4(patRegNo)
	s regId=$o(^User.DHCPENetPreRecordI("RegNoIndex",patRegNo,0))
	s infoStr=patRegNo_"^"_telNo_"^"_message_"^"_messageType_"^"_sendDate_"^"_""_"^"_regId_"^"
	s ret=##class(web.DHCPE.Message.Main).SaveSendMessage(infoStr)
	q:ret'=0 "-4^保存信息失败:"_ret
	q 0
]]></Implementation>
</Method>

<Method name="SaveJKLMessage">
<Description><![CDATA[
Descript:保存短信验证码
Creater:	ZhangDongmei
CreateDate:	2014-04-14
Table:s InfoStr=RegNo（登记号）_"^"_Tel（手机号）_"^"_Message（短信内容）_"^"_MessageType（类型（暂定"VC"））_"^"_+$H(期望发送日期)_"^"_""_"^"_ID（User.DHCPENetPreRecord的Id）_"^"
d ##class(web.DHCPE.Message.Main).SaveSendMessage(InfoStr)
Input:<Request><patientRegNo>病人id</patientRegNo><telephoneNo></telephoneNo><message></message></Request>
Output:	
Return：0,成功
]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.UserInfo")
	if (reader.Next(.request,.sc)){
		s telNo=$TR(request.telephoneNo,$c(0))
		s message=$TR(request.message,$c(0))
	}else{
		if $$$ISERR(sc) q "-21^解析参数错误:"_$System.Status.GetErrorText(sc)
	}
	q:telNo="" "-3^手机号不能为空"
	q:message="" "-3^短信内容不能为空"
	;q "-5^短信平台未启用"
	s messageType="JKL"
	s sendDate=+$h
	;s patRegNo=$$ALPHAUP^SSUTIL4(patRegNo)
	;s regId=$o(^User.DHCPENetPreRecordI("RegNoIndex",patRegNo,0))
	s infoStr=""_"^"_telNo_"^"_message_"^"_messageType_"^"_sendDate_"^"_""_"^"_""_"^"
	s ret=##class(web.DHCPE.Message.Main).SaveSendMessage(infoStr)
	q:ret'=0 "-4^保存信息失败:"_ret
	q 0
]]></Implementation>
</Method>

<Method name="QueryPEResult">
<Description><![CDATA[
W ##CLASS(HS.BL.ExaminationReport).QueryPEResult("<Request><admId>4054796</admId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s ^zdm("QueryExaminationItem")=params
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s admId=$TR(request.admId,$c(0))
		s startOrdItemId=$TR(request.startItemId,$c(0))
		s endOrdItemId=$TR(request.endItemId,$c(0))
		s upDownFlag=$TR(request.upDownFlag,$c(0))
		s pageNo=+$TR(request.pageNo,$c(0))
	}else{
		q:$$$ISERR(sc) "-3^解析参数错误:"_$System.Status.GetErrorText(sc)
	}
	q:$g(admId)="" "-4^体检id不能为空"
	s ret=0
	i (pageNo<=1)&('$d(^DHCPENetReportPage("Page",admId)))  d
	.s ret=..PageExaminationItem(admId)
	q:ret'=0 "-5^没有体检记录"
	s retStr = ""
	s pageInfo=$g(^DHCPENetReportPage("Page",admId,pageNo))
	s startSort=+$p(pageInfo,"^",1)
	s endSort=+$p(pageInfo,"^",2)
	s pages=$p(pageInfo,"^",3)
	s firstSort=$o(^DHCPENetReport("Result",admId,"OrdItem",""))
	s firstItemId=$o(^DHCPENetReport("Result",admId,"OrdItem",firstSort,""))
	s lastSort=$o(^DHCPENetReport("Result",admId,"OrdItem",""),-1)
	s lastItemId=$o(^DHCPENetReport("Result",admId,"OrdItem",lastSort,""),-1)
	s retStr=""
	s exitFlag=0
	s sort=startSort-1
	f  s sort=$o(^DHCPENetReport("Result",admId,"OrdItem",sort)) q:(sort="")!(sort>endSort)  d
	.s ordItemId=$o(^DHCPENetReport("Result",admId,"OrdItem",sort,0)) 
	.q:ordItemId=""
	.q:ordItemId="Detail"
	.
	.s data=^DHCPENetReport("Result",admId,"OrdItem",sort,ordItemId)
	.s isFirst=0
	.s isLast=0
	.i ordItemId=firstItemId  d
	..s isFirst=1
	.i ordItemId=lastItemId  d
	..s isLast=1
	
	.s orderId = $p(^OEORD($p(ordItemId,"||",1),"I",$p(ordItemId,"||",2),1),"^",2)
	
	.s myObj=##class(HS.Temp.ExaminationItem).%New()
	.s myObj.itemId=orderId
	.s myObj.auditDoctorName=$p(data,"^",3)
	.s myObj.doctorName=$p(data,"^",4)
	.s myObj.examDate=$p(data,"^",5)
	.s myObj.itemDesc=$p(data,"^",1)
	.s myObj.reportFormat=$p(data,"^",2)
	.s myObj.isFirst=isFirst
	.s myObj.isLast=isLast
	
	
	.s detailSort=""
	.f  s detailSort=$o(^DHCPENetReport("Result",admId,"OrdDetail",ordItemId,"Detail",detailSort)) q:detailSort=""  d
	..s detailId=""
	..f  s detailId=$o(^DHCPENetReport("Result",admId,"OrdDetail",ordItemId,"Detail",detailSort,detailId)) q:detailId=""  d
	...s detailData=^DHCPENetReport("Result",admId,"OrdDetail",ordItemId,"Detail",detailSort,detailId)
	...s itemDesc = $p(detailData,"^",1)
	...s itemId = ""
	...s Sequence=""
	...f  s Sequence=$O(^DHCPEODR(0,"Sequence",orderId,Sequence)) q:Sequence=""  d
	....s RowId=""
	....f  s RowId=$O(^DHCPEODR(0,"Sequence",orderId,Sequence,RowId)) q:RowId=""  d
	.....Set RLTODDR=$P($g(^DHCPEODR(RowId)),"^",2)
	.....s Standard=""
	.....q:RLTODDR=""
	.....s RLTRowid=0
	.....s RLTResult=""
	.....s RLTTemplateDesc=""
	.....s Flag=1
	.....s ODDesc=$p($G(^DHCPEST(+RLTODDR,"OD",$P(RLTODDR,"||",2))),"^",1)	//细项名称
	.....w !,ODDesc
	.....s:itemDesc=ODDesc itemId=RLTODDR
	.....q:(itemId'="")
	....q:(itemId'="")
	
	...s myDetail=##class(HS.Temp.ExaminationItemDetail).%New()
	...s myDetail.exceptionTip=$p(detailData,"^",4)
	...s myDetail.itemAbbreviation=$p(detailData,"^",2)
	...s myDetail.itemDesc=$p(detailData,"^",1)
	...s myDetail.itemResult=$p(detailData,"^",3)
	...s myDetail.itemUom=$p(detailData,"^",5)
	...s myDetail.referenceRange=$p(detailData,"^",6)
	...s myDetail.itemId=itemId
	...d myObj.ItemDetailList.Insert(myDetail)
	...s myDetail=""
	
	.s sc=myObj.XMLExportToString(.XML,"ExaminationItem")
	.i '$$$ISERR(sc)  d
	..s retStr=retStr_XML
	.s myObj=""
	
	q "<total>"_pages_"</total>"_retStr
	
	
	
	;s IADMRowId=""
	;s IADMRowId=$O(^DHCPEIADM(0,"PAADM",admId,IADMRowId))
	;q:IADMRowId="" "-6^输入信息有误"
	;s PeStatus = $p(^DHCPEIADM(IADMRowId),"^",8)
	;q:(PeStatus="CANCELPE") "-7^已经取消体检"
	

	;s ResultId = ""
	;f  s ResultId = $o(^DHCPERLT(0,"ADM",admId,ResultId)) q:ResultId=""  do
	.;s Result = "" 
	.;s Result = $p(^DHCPERLT(ResultId),"^",4)
	.;q:(Result="")
	.;s ResultDto = ##class(HS.Temp.PEResult).%New()
	.;s orderId = $p(^DHCPERLT(ResultId),"^",2)
	.;s:(orderId'="") orderId = $p(orderId,"||",1)
	.;s orderDesc = $p(^ARCIM(orderId,1,1),"^",2)
	.;s itemId = $p(^DHCPERLT(ResultId),"^",3)
	.;s:(itemId'="") stRowId = $p(itemId,"||",1),childSub=$p(itemId,"||",2)
	.;s itemDesc = $p(^DHCPEST(stRowId,"OD",childSub),"^",1)
	.;s itemUnit = $p(^DHCPEST(stRowId,"OD",childSub),"^",4)
	
	.;s ResultDto.orderId = orderId
	.;s ResultDto.orderDesc = orderDesc
	.;s ResultDto.itemId = itemId
	.;s ResultDto.itemDesc = itemDesc
	.;s ResultDto.itemResult = Result
	.;s ResultDto.itemUnit = itemUnit
	
	.;s sc=ResultDto.XMLExportToString(.XML,"PEResult")
	.;i '$$$ISERR(sc)  d
	..;s retStr=retStr_XML
	.;s ResultDto=""
	;q retStr
]]></Implementation>
</Method>

<Method name="GetPEResult">
<Description><![CDATA[
W ##CLASS(HS.BL.ExaminationReport).QueryPEResult2("<Request><pageNo>5</pageNo><admId>4039849</admId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s ^zdm("QueryExaminationItem")=params
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s admId=$TR(request.admId,$c(0))
		s pageNo=+$TR(request.pageNo,$c(0))
	}else{
		q:$$$ISERR(sc) "-3^解析参数错误:"_$System.Status.GetErrorText(sc)
	}
	q:$g(admId)="" "-4^体检id不能为空"
	q:$g(pageNo)="" "-5^页号不能为空"
	s ret=0
	i (pageNo<=1)&('$d(^DHCPEResultPage("Page",admId)))  d
	.s ret=..CreatePageInfo(admId)
	q:ret'=0 "-5^没有体检记录"
	
	s maxCount = $o(^DHCPEResultPage("Page",admId,""),-1)
	
	s PapmiDr = $p($g(^PAADM(admId)),"^",1)
	s regNo = $p($g(^PAPER(PapmiDr,"PAT",1)),"^",1)
	s PreBaseInfoId = ""
	s PreBaseInfoId = $o(^DHCPEPreIBI(0,"PAPMINo",regNo,PreBaseInfoId))
	s sex = "M"
	s gender = $p($g(^DHCPEPreIBI(PreBaseInfoId)),"^",3)
	s:gender=1 sex="F"
	s:gender=2 sex="M"
	
	s age = 0
	s dob = $p($g(^DHCPEPreIBI(PreBaseInfoId)),"^",4)
	i dob'=""  do
	.s birthYear = $p($zd(dob,3),"-",1)
	.s todyYear = $p($zd(+$h,3),"-",1)
	.s age = todyYear - birthYear
	
	
	s retStr = ""
	s ResultId = ""
	f  s ResultId = $o(^DHCPEResultPage("Page",admId,pageNo,ResultId)) q:ResultId=""  do
	.s Result = "" 
	.s Result = $p(^DHCPERLT(ResultId),"^",4)
	.q:(Result="")
	.s ResultDto = ##class(HS.Temp.PEResult).%New()
	.s orderId = $p(^DHCPERLT(ResultId),"^",2)
	.s:(orderId'="") orderId = $p(orderId,"||",1)
	.s orderDesc = $p(^ARCIM(orderId,1,1),"^",2)
	.s itemId = $p(^DHCPERLT(ResultId),"^",3)
	.s:(itemId'="") stRowId = $p(itemId,"||",1),childSub=$p(itemId,"||",2)
	.s itemDesc = $p(^DHCPEST(stRowId,"OD",childSub),"^",1)
	.s itemUnit = $p(^DHCPEST(stRowId,"OD",childSub),"^",4)
	
	.s arcimRowID = $p(^DHCPERLT(ResultId),"^",2)
	.;s episodeNo=$p(^OEORD($p(arcimRowID,"||",1),"I",$p(arcimRowID,"||",2),3),"^",20)
	.;w !,episodeNo_"   ========="_itemId
	.s range = ""
	.;i episodeNo'=""  do
	..;s range = ##class(web.DHCPE.ResultEdit).GetNormal(itemId,sex,age)
	.;e  do
	..;s range=$G(^DHCPEDataEx("DHCPEResult",ResultId,"Ranges"))
	
	.s ResultDto.orderId = orderId
	.s ResultDto.orderDesc = orderDesc
	.s ResultDto.itemId = itemId
	.s ResultDto.itemDesc = itemDesc
	.s ResultDto.itemResult = Result
	.s ResultDto.itemUnit = itemUnit
	.s ResultDto.referenceRange = range
	.s sc=ResultDto.XMLExportToString(.XML,"PEResult")
	.i '$$$ISERR(sc)  d
	..s retStr=retStr_XML
	.s ResultDto=""
	q "<total>"_maxCount_"</total>"_retStr
]]></Implementation>
</Method>

<Method name="CreatePageInfo">
<Description>
w ##CLASS(HS.BL.ExaminationReport).CreatePageInfo("4039849")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>admId:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	k ^DHCPEResultPage("Page",admId)
	s count = 0
	s page = 1
	s result = 1
	s rowId = ""
	f  s rowId = $O(^DHCPERLT(0,"ADM",admId,rowId)) q:rowId=""  d
	.s result = 0
	.s ^DHCPEResultPage("Page",admId,page,rowId) = admId_"^"_page_"^"_rowId
	.s count=count+1
	.i count>=20  do
	..s count=0
	..s page=page+1
	q result
]]></Implementation>
</Method>

<Method name="ArteryEst">
<Description><![CDATA[
W ##CLASS(HS.BL.ExaminationReport).ArteryEst("<Request><patientNo>0000000110</patientNo><admId>131</admId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s admId=$TR(request.admId,$c(0))
		s regNo=$TR(request.patientNo,$c(0))
	}else{
		q:$$$ISERR(sc) "-3^解析参数错误:"_$System.Status.GetErrorText(sc)
	}
	q:$g(admId)="" "-4^体检id不能为空"
	q:$g(regNo)="" "-5^体检者ID不能为空"
	s RecordInfo = ^DHCPENetReport("Record",regNo,admId)
	q:$g(admId)="" "-6^没有体检结果"
	s retStr=""
	s ResultDto = ##class(HS.Temp.ArteryObject).%New()
	s ResultDto.age = $p(RecordInfo,"^",3)
	s ResultDto.name = $p(RecordInfo,"^",1)
	s ResultDto.sex = $p(RecordInfo,"^",2)
	s ResultDto.peDate = $p(RecordInfo,"^",5)
	s sort = ""
	f  s sort=$o(^DHCPENetReport("Result",admId,"OrdItem",sort)) q:(sort="")  d
	.s ordItemId=$o(^DHCPENetReport("Result",admId,"OrdItem",sort,0)) 
	.q:ordItemId=""
	.q:ordItemId="Detail"
	
	.s data=^DHCPENetReport("Result",admId,"OrdItem",sort,ordItemId)
	.s OrderName = $p(data,"^",1)
	.q:(OrderName'="一般检查")
	.s detailSort = ""
	.f  s detailSort=$o(^DHCPENetReport("Result",admId,"OrdDetail",ordItemId,"Detail",detailSort)) q:detailSort=""  d
	..s detailId=""
	..f  s detailId=$o(^DHCPENetReport("Result",admId,"OrdDetail",ordItemId,"Detail",detailSort,detailId)) q:detailId=""  d
	...s detailData=^DHCPENetReport("Result",admId,"OrdDetail",ordItemId,"Detail",detailSort,detailId)
	...s itemDesc = $p(detailData,"^",1)
	...s itemValue = $p(detailData,"^",3)
	...s:(itemDesc="身高") ResultDto.height = itemValue
	...s:(itemDesc="体重") ResultDto.weight = itemValue
	...s:(itemDesc="收缩压") ResultDto.systolic = itemValue
	...s:(itemDesc="舒张压") ResultDto.diastolic = itemValue
	
	s sc=ResultDto.XMLExportToString(.XML,"ArteryObject")
	i '$$$ISERR(sc)  d
	.s retStr=retStr_XML
	q retStr
]]></Implementation>
</Method>

<Method name="GetReportStatus">
<Description><![CDATA[
W ##CLASS(HS.BL.ExaminationReport).GetReportStatus("<Request><admId>4871860</admId><locId>53</locId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s admId=$TR(request.admId,$c(0))
		s locId=$TR(request.locId,$c(0))
	}else{
		q:$$$ISERR(sc) "-3^解析参数错误:"_$System.Status.GetErrorText(sc)
	}
	q:$g(admId)="" "-4^体检id不能为空"
	q:$g(locId)="" "-5^科室id不能为空"
	s PEADMID=""
	s PEADMID=$o(^DHCPEIADM(0,"PAADM",admId,0))
	q:(PEADMID="") "-1^数据错误"
	s RPId=""
	s RPId=$o(^DHCPERPT(0,"IADM",PEADMID,0))
	q:(RPId="") "-1^数据错误"
	s ReportID=""
	s ReportID=$p(^DHCPERPT(RPId),"^",2)
	q:(ReportID="") "-1^数据错误"
	
	s ReportStatus=..GetReportStatusDesc(ReportID,admId,locId)   //add by zhouli end
	q ReportStatus
]]></Implementation>
</Method>

<Method name="GetReportStatusDesc">
<ClassMethod>1</ClassMethod>
<FormalSpec>Status:%Library.String="",PAADM:%Library.String="",LocId:%Library.String=""</FormalSpec>
<Implementation><![CDATA[
	s CurrLocID=""
	s:$d(%session) CurrLocID=%session.Get("LOGON.CTLOCID")
	s:(CurrLocID="") CurrLocID=263
   	;s CurrLocID=%session.Get("LOGON.CTLOCID")
   	//s CurrLocID=53
	;n (Status,CurrLocID,PAADM)
	i Status="" q ""
	s NeedReCheck=""
	s NeedReCheck=$G(^DHCPESetting("DHCPE","MainDoctorGroup",CurrLocID))  //科室是否需要复检功能
	if NeedReCheck="N"  d
	.i ("UNCHECKED"=Status)||("NA"=Status)||("NoAudit"=Status) s Status="未审核"
	.i ("A"=Status)||("Audited"=Status) s Status="已审核"
	.i ("P"=Status)||("Printed"=Status) s Status="已打印"
	.i ("S"=Status)||("Send"=Status) s Status="已取"
	.i ("C"=Status)||("Complete"=Status) s Status="已完成"
	else  d
	.i $d(^DHCPEIADM(0,"PAADM",PAADM))  d
    ..i ("UNCHECKED"=Status)||("NA"=Status)||("NoAudit"=Status) s Status="未初检"
    ..i ("P"=Status)||("Printed"=Status) s Status="已打印"
    ..i ("S"=Status)||("Send"=Status) s Status="已取"
    ..i ("C"=Status)||("Complete"=Status) s Status="已完成"
    ..i ("A"=Status)||("Audited"=Status)  d
    ...i $d(^DHCPEDataEx("DHCPEGeneralSummarize","MainDoctor",PAADM)) s Status="已复检"
    ...i '$d(^DHCPEDataEx("DHCPEGeneralSummarize","MainDoctor",PAADM)) s Status="已初检未复检"
    .else  d
    .i ("UNCHECKED"=Status)||("NA"=Status)||("NoAudit"=Status) s Status="未审核"
	.i ("A"=Status)||("Audited"=Status) s Status="已审核"
	.i ("P"=Status)||("Printed"=Status) s Status="已打印"
	.i ("S"=Status)||("Send"=Status) s Status="已取"
	.i ("C"=Status)||("Complete"=Status) s Status="已完成"
	q Status
]]></Implementation>
</Method>

<Method name="GetAllPeList">
<Description><![CDATA[
w ##CLASS(HS.BL.ExaminationReport).GetAllPeList("<Request><patientNo>0000000054</patientNo></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s RegNo=$TR(request.patientNo,$c(0))
	}else{
		q:$$$ISERR(sc) "-3^解析参数错误:"_$System.Status.GetErrorText(sc)
	}
	q:$g(RegNo)="" "-4^体检者ID不能为空"
	s retStr=""
	s ERegNo=""
	s PAPMIID=""
	f  s PAPMIID=$O(^PAPERi("PAPMI_PatNo",RegNo,PAPMIID)) q:PAPMIID=""  d
	.s ActiveFlag=$P(^PAPER(PAPMIID,"PAT",1),"^",6)
	.q:ActiveFlag="N"
	.s ERegNo=$P(^PAPER(PAPMIID,"PAT",1),"^",1)
	q:(ERegNo="") "-999^体检者ID不存在"
	;s:ERegNo'="" RegNo=ERegNo
	
	Set PIBI=$o(^DHCPEPreIBI(0,"PAPMINo",RegNo,0))
	q:PIBI="" ""
	Set id=0
	
	f  s id=$o(^DHCPEPreIADM(0,"PIBI",PIBI,id)) Quit:id=""  Do
	.s TReCheck=""
	.s TReCheck=##class(web.DHCPE.PreCommon).IsReCheck(id,"Pre")
	.q:(TReCheck'=0)
	
	.s CheckDate = ##class(web.DHCPE.PreIADM).GetCheckDate(id,"PreADM")
	
	.s CurData=$g(^DHCPEPreIADM(id))
	
  	.s PIADMPIBIDR=$p(CurData,"^",1)
	.Q:(""=PIADMPIBIDR)	//防止取到空数据
	
	.s PIADMPEDateEnd=$p(CurData,"^",5)
	.i ""'=PIADMPEDateEnd s PIADMPEDateEnd=$ZD(PIADMPEDateEnd,3)
	
	.i ""'=PIADMPIBIDR  d
	..s PIBIPAPMINo=$p($g(^DHCPEPreIBI(PIADMPIBIDR)),"^",1)
	.e  d
	..s PIBIPAPMINo=""
	.Q:(""'=RegNo)&(RegNo'=PIBIPAPMINo) //数据过滤

	.s PIADMPIBIDRName=""
	.s TAge="",PIADMPIBIDRSEX=""
	.i ""'=PIADMPIBIDR d
	..s TAge=$p($g(^DHCPEPreIBI(PIADMPIBIDR)),"^",4)
	..i TAge'="" s TAge=$P(##class(web.DHCLCNUREXCUTE).CalAge(TAge,+$H),"Y",1) //$P(##class(web.DHCLCNUREXCUTE))
	..s PIADMPIBIDRSEX=$p($g(^DHCPEPreIBI(PIADMPIBIDR)),"^",3)
	..s PIADMPIBIDRName=$p($g(^DHCPEPreIBI(PIADMPIBIDR)),"^",2)
	.i PIADMPIBIDRSEX'="" s PIADMPIBIDRSEX=$P(^CT("SEX",PIADMPIBIDRSEX),"^",2)
	
	.s PIADMPGADMDR=""
	.s PIADMPGADMDR=$p(CurData,"^",2)
	.s PIADMPGADMDRName=""
	.i PIADMPGADMDR'="" d
	..s PGADMPGBIDR=$p($g(^DHCPEPreGADM(PIADMPGADMDR)),"^",1)
	..i PGADMPGBIDR'="" do
	...s PIADMPGADMDRName=$p($g(^DHCPEPreGBI(PGADMPGBIDR)),"^",2)

	.s PIADMStatus=$p(CurData,"^",8)
	.q:(($G(^DHCPESetting("DHCPE","HospitalCode"))="SYYD")&&(PIADMStatus="CANCELPE"))
	.s PEADMID=$o(^DHCPEIADM(0,"CRMADM",id,0))
	.s PEStatus=""
	.i PEADMID'="" s PEStatus=$p(^DHCPEIADM(PEADMID),"^",8)
	.q:(PEStatus'="ARRIVED")

	.s PIADMStatusDesc=##Class(web.DHCPE.PreCommon).TransStatus(PIADMStatus)

	.s ReportStatus="未初检"
	.i PEADMID'=""  d 
	..s RPId=$o(^DHCPERPT(0,"IADM",PEADMID,0))
	..s PAADM=$p(^DHCPEIADM(PEADMID),"^",1)
	..q:PAADM="" 


	..s ReportID=""
	..i RPId'="" d
	...s ReportID=$p(^DHCPERPT(RPId),"^",2)
	..s ReportStatus=..GetReportStatusDesc(ReportID,PAADM,"")
	
	.;s retStr = retStr_"^"_PIADMPIBIDRName_"^"_PIADMPIBIDRSEX_"^"_TAge_"^"_CheckDate_"^"_PIADMPGADMDRName_"^"_PEADMID_"^"_ReportStatus_"^"_PIADMStatusDesc_"^"_id_"^"_PIBI_"^"_PAADM
	.;w retStr,!,CurData
	.;q:'$D(^DHCPENetReport("Record",RegNo,PAADM))  //未生成网上报告时不显示
	.s OrderName=##class(web.DHCPE.Query.IAdmItemStatus).GetArcSetDesc(id,"Y")
	.;滇池康悦返回体检号  网上预约ID
	.s NetPreID=$O(^User.DHCPENetPreRecordI("NPRPreIADMIndex",id,""))
	.s HPNo=$P(^DHCPEPreIADM(id),"^",27)
	.s ResultDto = ##class(HS.Temp.PeRecord).%New()
	.s ResultDto.reportStatus = ReportStatus
	.s ResultDto.peStatus = PIADMStatusDesc
	.s ResultDto.name = PIADMPIBIDRName
	.s ResultDto.admId = PAADM
	.s ResultDto.sex = PIADMPIBIDRSEX
	.s ResultDto.company = PIADMPGADMDRName
	.s ResultDto.examDate = CheckDate
	.s ResultDto.age = TAge
	.s ResultDto.preDate = PIADMPEDateEnd
	.s ResultDto.orderName = OrderName
	.s ResultDto.regId=NetPreID
	.s ResultDto.HPNo=HPNo
	.s sc=ResultDto.XMLExportToString(.XML,"PeRecord")
	.i '$$$ISERR(sc)  d
	..s retStr=retStr_XML
	.s ResultDto=""
	q retStr
]]></Implementation>
</Method>

<Method name="GetAllPeListTemp">
<Description><![CDATA[
廊坊管道局根据身份证号查询版本
w ##CLASS(HS.BL.ExaminationReport).GetAllPeList("<Request><idCard>370820199007065674</idCard></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s idCard=$TR(request.idCard,$c(0))
	}else{
		q:$$$ISERR(sc) "-3^解析参数错误:"_$System.Status.GetErrorText(sc)
	}
	q:$g(idCard)="" "-4^身份证号不能为空"
	s IBaseId=0,retStr=""
	f  s IBaseId=$O(^DHCPEPreIBI(0,"IDCard",idCard,IBaseId)) q:IBaseId=""  d
	.s RegNo=$p(^DHCPEPreIBI(IBaseId),"^",1)
	.s id=0
	.f  s id=$o(^DHCPEPreIADM(0,"PIBI",IBaseId,id)) Quit:id=""  Do
	..s TReCheck=""
	..s TReCheck=##class(web.DHCPE.PreCommon).IsReCheck(id,"Pre")
	..q:(TReCheck'=0)
	
	..s CheckDate = ##class(web.DHCPE.PreIADM).GetCheckDate(id,"PreADM")
	
	..s CurData=$g(^DHCPEPreIADM(id))
	
  	..s PIADMPIBIDR=$p(CurData,"^",1)
	..Q:(""=PIADMPIBIDR)	//防止取到空数据
	
	..s PIADMPEDateEnd=$p(CurData,"^",5)
	..i ""'=PIADMPEDateEnd s PIADMPEDateEnd=$ZD(PIADMPEDateEnd,3)
	
	..i ""'=PIADMPIBIDR  d
	...s PIBIPAPMINo=$p($g(^DHCPEPreIBI(PIADMPIBIDR)),"^",1)
	..e  d
	...s PIBIPAPMINo=""
	..Q:(""'=RegNo)&(RegNo'=PIBIPAPMINo) //数据过滤
	
	..s PIADMPIBIDRName=""
	..s TAge="",PIADMPIBIDRSEX=""
	..i ""'=PIADMPIBIDR d
	...s TAge=$p($g(^DHCPEPreIBI(PIADMPIBIDR)),"^",4)
	..i TAge'="" s TAge=$P(##class(web.DHCLCNUREXCUTE).CalAge(TAge,+$H),"Y",1) //$P(##class(web.DHCLCNUREXCUTE))
	...s PIADMPIBIDRSEX=$p($g(^DHCPEPreIBI(PIADMPIBIDR)),"^",3)
	...s PIADMPIBIDRName=$p($g(^DHCPEPreIBI(PIADMPIBIDR)),"^",2)
	..i PIADMPIBIDRSEX'="" s PIADMPIBIDRSEX=$P(^CT("SEX",PIADMPIBIDRSEX),"^",2)
	
	..s PIADMPGADMDR=""
	..s PIADMPGADMDR=$p(CurData,"^",2)
	..s PIADMPGADMDRName=""
	..i PIADMPGADMDR'="" d
	...s PGADMPGBIDR=$p($g(^DHCPEPreGADM(PIADMPGADMDR)),"^",1)
	...i PGADMPGBIDR'="" do
	....s PIADMPGADMDRName=$p($g(^DHCPEPreGBI(PGADMPGBIDR)),"^",2)

	..s PIADMStatus=$p(CurData,"^",8)
	
	..q:(($G(^DHCPESetting("DHCPE","HospitalCode"))="SYYD")&&(PIADMStatus="CANCELPE"))
	..s PEADMID=$o(^DHCPEIADM(0,"CRMADM",id,0))
	..s PEStatus=""
	..i PEADMID'="" s PEStatus=$p(^DHCPEIADM(PEADMID),"^",8)
	..q:(PEStatus'="ARRIVED")

	..s PIADMStatusDesc=##Class(web.DHCPE.PreCommon).TransStatus(PIADMStatus)
	
	..s ReportStatus="未初检"
	..i PEADMID'=""  d 
	...s RPId=$o(^DHCPERPT(0,"IADM",PEADMID,0))
	...s PAADM=$p(^DHCPEIADM(PEADMID),"^",1)
	...q:PAADM="" 


	...s ReportID=""
	...i RPId'="" d
	....s ReportID=$p(^DHCPERPT(RPId),"^",2)
	...s ReportStatus=..GetReportStatusDesc(ReportID,PAADM,"")
	..q:'$D(^DHCPENetReport("Record",RegNo,PAADM))  //未生成网上报告时不显示
	..s OrderName=##class(web.DHCPE.Query.IAdmItemStatus).GetArcSetDesc(id,"Y")
	..s ResultDto = ##class(HS.Temp.PeRecord).%New()
	..s ResultDto.reportStatus = ReportStatus
	..s ResultDto.peStatus = PIADMStatusDesc
	..s ResultDto.name = PIADMPIBIDRName
	..s ResultDto.admId = PAADM
	..s ResultDto.sex = PIADMPIBIDRSEX
	..s ResultDto.company = PIADMPGADMDRName
	..s ResultDto.examDate = CheckDate
	..s ResultDto.age = TAge
	..s ResultDto.preDate = PIADMPEDateEnd
	..s ResultDto.orderName = OrderName
	..s sc=ResultDto.XMLExportToString(.XML,"PeRecord")
	..i '$$$ISERR(sc)  d
	...s retStr=retStr_XML
	..s ResultDto=""
	q retStr
]]></Implementation>
</Method>

<Method name="GetAllPeList2">
<Description><![CDATA[
w ##CLASS(HS.BL.ExaminationReport).GetAllPeList2("<Request><idCard>100101198801295689</idCard></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s idCard=$TR(request.idCard,$c(0))
	}else{
		q:$$$ISERR(sc) "-3^解析参数错误:"_$System.Status.GetErrorText(sc)
	}
	q:$g(idCard)="" "-4^身份证号不能为空"
	
	s retStr= ""
	s PIBI = ""
	s RegNo = ""
	f  s RegNo = $o(^DHCPEPreIBI(0,"IDCard",idCard,RegNo)) q:RegNo=""  do
	.s PIBI=$o(^DHCPEPreIBI(0,"PAPMINo",RegNo,0)) q:PIBI=""  do
	.s id=0
	
	.f  s id=$o(^DHCPEPreIADM(0,"PIBI",PIBI,id)) Quit:id=""  Do
	..s TReCheck=""
	..s TReCheck=##class(web.DHCPE.PreCommon).IsReCheck(id,"Pre")
	..q:(TReCheck'=0)
	
	..s CheckDate = ##class(web.DHCPE.PreIADM).GetCheckDate(id,"PreADM")
	
	..s CurData=$g(^DHCPEPreIADM(id))
	
  	..s PIADMPIBIDR=$p(CurData,"^",1)
	..Q:(""=PIADMPIBIDR)	//防止取到空数据
	
	..s PIADMPEDateEnd=$p(CurData,"^",5)
	..i ""'=PIADMPEDateEnd s PIADMPEDateEnd=$ZD(PIADMPEDateEnd,3)
	
	..i ""'=PIADMPIBIDR  d
	...s PIBIPAPMINo=$p($g(^DHCPEPreIBI(PIADMPIBIDR)),"^",1)
	..e  d
	...s PIBIPAPMINo=""
	..Q:(""'=RegNo)&(RegNo'=PIBIPAPMINo) //数据过滤

	..s PIADMPIBIDRName=""
	..s TAge="",PIADMPIBIDRSEX=""
	..i ""'=PIADMPIBIDR d
	...s TAge=$p($g(^DHCPEPreIBI(PIADMPIBIDR)),"^",4)
	...i TAge'="" s TAge=$P(##class(web.DHCLCNUREXCUTE).CalAge(TAge,+$H),"Y",1) //$P(##class(web.DHCLCNUREXCUTE))
	...s PIADMPIBIDRSEX=$p($g(^DHCPEPreIBI(PIADMPIBIDR)),"^",3)
	...s PIADMPIBIDRName=$p($g(^DHCPEPreIBI(PIADMPIBIDR)),"^",2)
	..i PIADMPIBIDRSEX'="" s PIADMPIBIDRSEX=$P(^CT("SEX",PIADMPIBIDRSEX),"^",2)
	
	..s PIADMPGADMDR=""
	..s PIADMPGADMDR=$p(CurData,"^",2)
	..s PIADMPGADMDRName=""
	..i PIADMPGADMDR'="" d
	...s PGADMPGBIDR=$p($g(^DHCPEPreGADM(PIADMPGADMDR)),"^",1)
	...i PGADMPGBIDR'="" do
	....s PIADMPGADMDRName=$p($g(^DHCPEPreGBI(PGADMPGBIDR)),"^",2)
	
	..s PIADMStatus=$p(CurData,"^",8)
	..q:(($G(^DHCPESetting("DHCPE","HospitalCode"))="SYYD")&&(PIADMStatus="CANCELPE"))
	..s PEADMID=$o(^DHCPEIADM(0,"CRMADM",id,0))
	..s PEStatus=""
	..i PEADMID'="" s PEStatus=$p(^DHCPEIADM(PEADMID),"^",8)
	..q:(PEStatus'="ARRIVED")

	..s PIADMStatusDesc=##Class(web.DHCPE.PreCommon).TransStatus(PIADMStatus)

	..s ReportStatus="未初检"
	..i PEADMID'=""  d 
	...s RPId=$o(^DHCPERPT(0,"IADM",PEADMID,0))
	...s PAADM=$p(^DHCPEIADM(PEADMID),"^",1)
	...q:PAADM="" 

	...s ReportID=""
	...i RPId'="" d
	....s ReportID=$p(^DHCPERPT(RPId),"^",2)
	...s ReportStatus=..GetReportStatusDesc(ReportID,PAADM,"")
	
	..;s retStr = retStr_"^"_PIADMPIBIDRName_"^"_PIADMPIBIDRSEX_"^"_TAge_"^"_CheckDate_"^"_PIADMPGADMDRName_"^"_PEADMID_"^"_ReportStatus_"^"_PIADMStatusDesc_"^"_id_"^"_PIBI_"^"_PAADM
	..;w retStr,!,CurData
	
	..s OrderName=##class(web.DHCPE.Query.IAdmItemStatus).GetArcSetDesc(id,"Y")
	
	..s ResultDto = ##class(HS.Temp.PeRecord).%New()
	..s ResultDto.reportStatus = ReportStatus
	..s ResultDto.peStatus = PIADMStatusDesc
	..s ResultDto.name = PIADMPIBIDRName
	..s ResultDto.admId = PAADM
	..s ResultDto.sex = PIADMPIBIDRSEX
	..s ResultDto.company = PIADMPGADMDRName
	..s ResultDto.examDate = CheckDate
	..s ResultDto.age = TAge
	..s ResultDto.preDate = PIADMPEDateEnd
	..s ResultDto.orderName = OrderName
	..s sc=ResultDto.XMLExportToString(.XML,"PeRecord")
	..i '$$$ISERR(sc)  d
	...s retStr=retStr_XML
	..s ResultDto=""
	q retStr
]]></Implementation>
</Method>

<Method name="GetPEReportStatus">
<Description><![CDATA[
w ##CLASS(HS.BL.ExaminationReport).GetPEReportStatus("<Request><patientNo>370902198910291233</patientNo></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s patientNo=$TR(request.patientNo,$c(0))
	}else{
		q:$$$ISERR(sc) "-3^解析参数错误:"_$System.Status.GetErrorText(sc)
	}
	q:$g(patientNo)="" "-4^身份证号不能为空"
	s retStr=""
	s ERegNo=""
	s RegNo=""
	s PAPMIID=""
	s lastDate = 0
	f  s PAPMIID=$O(^PAPERi("PAPMI_ICPPBC",patientNo_"Z",PAPMIID)) q:PAPMIID=""  d
	.s ActiveFlag=$P(^PAPER(PAPMIID,"PAT",1),"^",6)
	.q:ActiveFlag="N"
	.s ERegNo=$P(^PAPER(PAPMIID,"PAT",1),"^",1)
	.q:(ERegNo="")
	.s:ERegNo'="" RegNo=ERegNo

	.Set PIBI=$o(^DHCPEPreIBI(0,"PAPMINo",RegNo,0))
	.q:PIBI=""
	.Set id=0
	
	.f  s id=$o(^DHCPEPreIADM(0,"PIBI",PIBI,id)) Quit:id=""  Do
	..s TReCheck=""
	..s TReCheck=##class(web.DHCPE.PreCommon).IsReCheck(id,"Pre")
	..q:(TReCheck'=0)
	
	..s CheckDate = ##class(web.DHCPE.PreIADM).GetCheckDate(id,"PreADM")
	
	..q:(CheckDate="")
	..s CheckDateNum = 0
	..s CheckDateNum=$zdh(CheckDate,3)
	..q:(CheckDateNum < lastDate)
	..s:(CheckDateNum > lastDate) lastDate = CheckDateNum
	
	..s CurData=$g(^DHCPEPreIADM(id))

  	..s PIADMPIBIDR=$p(CurData,"^",1)
	..Q:(""=PIADMPIBIDR)	//防止取到空数据

	..i ""'=PIADMPIBIDR  d
	...s PIBIPAPMINo=$p($g(^DHCPEPreIBI(PIADMPIBIDR)),"^",1)
	..e  d
	...s PIBIPAPMINo=""
	..Q:(""'=RegNo)&(RegNo'=PIBIPAPMINo) //数据过滤
	
	..s PIADMStatus=$p(CurData,"^",8)
	..q:(($G(^DHCPESetting("DHCPE","HospitalCode"))="SYYD")&&(PIADMStatus="CANCELPE"))
	..s PEADMID=$o(^DHCPEIADM(0,"CRMADM",id,0))
	..s ReportStatus="未初检"
	..i PEADMID'=""  d 
	...s RPId=$o(^DHCPERPT(0,"IADM",PEADMID,0))
	...s PAADM=$p(^DHCPEIADM(PEADMID),"^",1)
	...q:PAADM="" 

	...s ReportID=""
	...i RPId'="" d
	....s ReportID=$p(^DHCPERPT(RPId),"^",2)
	...s ReportStatus=..GetReportStatusDesc(ReportID,PAADM,"")
	
	...s ResultDto = ##class(HS.Temp.PeRecord).%New()
	...s ResultDto.reportStatus = ReportStatus
	...;s retStr=CheckDate_"_"_ReportStatus
	
	...s ResultDto.examDate = CheckDate
	...s sc=ResultDto.XMLExportToString(.XML,"PeRecord")
	...i '$$$ISERR(sc)  d
	....s retStr=XML
	...s ResultDto=""
	
	s:(retStr="") retStr="无体检数据"
	q retStr
]]></Implementation>
</Method>

<Method name="GetReportUserInfo">
<Description><![CDATA[
Descript:获取报告用户基本信息
Creater:	王国营
w ##CLASS(HS.BL.ExaminationReport).GetReportUserInfo("<Request><admId>2200</admId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s admId=$TR(request.admId,$c(0))
	}else{
		q:$$$ISERR(sc) "-3^解析参数错误:"_$System.Status.GetErrorText(sc)
	}
	q:$g(admId)="" "-4^体检id不能为空"
	s obj=##class(User.PAAdm).%OpenId(admId)
	s RegNo=obj.PAADMPAPMIDR.PAPMINo
	d obj.%Close()
	s obj=""
	s retStr=""
	
	
	s reportStatus=##class(web.DHCPE.NetReport.Main).IsAuditReport(admId)
	d:reportStatus'=0 ##class(web.DHCPE.NetReport.Main).SetReportData(admId)
	s data=$G(^DHCPENetReport("Record",RegNo,admId))
	
	q:data="" "-5^未生成该用户的体检报告"
	s myObj=##class(HS.Temp.ReportUserInfo).%New()
	s myObj.regNo=RegNo
	s myObj.name=$Replace($p(data,"^",1)," ","")
	s myObj.sex=$p(data,"^",2)
	s ageData=$p(data,"^",3)
	s ageIndex=$F(ageData,"岁")
	s myObj.age=$e(ageData,1,ageIndex-2)
	s companyData=$p(data,"^",4)
	s:companyData="" myObj.company="个人"
	s:companyData'="" myObj.company=companyData
	s myObj.checkDate=$p(data,"^",5)
	s myObj.department=$p(data,"^",12)
	s myObj.HPNo=$p(data,"^",13)
	s myObj.telephone=$p(data,"^",14)
	s myObj.addItem=$G(^DHCPENetReport("Result",admId,"AddItem"))
	s myObj.OrderSetsDesc=$G(^DHCPENetReport("Result",admId,"OrderSetsDesc"))
	;用户照片测试
	s:admId=125 myObj.photo="ftp://dhc:dhc@127.0.0.1:21/test/916019.jpg"
	s sc=myObj.XMLExportToString(.XML,"ReportUserInfo")
	i '$$$ISERR(sc)  d
	.s retStr=XML
	e  d
	.s retStr="-6^获取基本信息失败:"_$System.Status.GetErrorText(sc)
	q retStr
]]></Implementation>
</Method>

<Method name="QueryExaminationGather">
<Description><![CDATA[
Descript:根据体检记录PAADM查找体检汇总
Creater:	王国营
Table:^DHCPENetReport("Result",PAADM,"Contentgather")
Input:<Request><admId>4039849</admId></Request>
Output:	
Return：<ExaminationGather></ExaminationGather>
W ##CLASS(HS.BL.ExaminationReport).QueryExaminationGather("<Request><admId>2283</admId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s admId=$TR(request.admId,$c(0))
	}else{
		if $$$ISERR(sc) q "-21^解析参数错误"
	}
	q:admId="" "-3^参数不能为空"
	s gatherInfo=$G(^DHCPENetReport("Result",admId,"Contentgather")) //阳性结果汇总
	;s gatherInfo=$G(^DHCPENetReport("Result",admId,"NegativeSummary")) //项目小结
	s retStr=""
	q:gatherInfo="" retStr
	;阳性结果汇总
	s num=$L(gatherInfo,"<b>")	
	f i=1:1:num-1 d
	.s data=$p(gatherInfo,"<b>",i+1)
	.s myObj=##class(HS.Temp.ExaminationGather).%New()
	.s myObj.itemDesc=$p(data,"</b>",1)
	.s myObj.resultDesc=$p(data,"</b>",2)
	.s sc=myObj.XMLExportToString(.Xml,"ExaminationGather")
	.i '$$$ISERR(sc)  d
	..s retStr=retStr_Xml
	
	/*项目小结
	s num=$L(gatherInfo,$C(13,10))	
	f i=1:1:num d
	.s data=$p(gatherInfo,"$C(13,10)",i)
	.s myObj=##class(HS.Temp.ExaminationGather).%New()
	.s myObj.itemDesc=data
	.s sc=myObj.XMLExportToString(.Xml,"ExaminationGather")
	.i '$$$ISERR(sc)  d
	..s retStr=retStr_Xml */
	q retStr
]]></Implementation>
</Method>

<Method name="UpdateReportStatus">
<Description><![CDATA[
Descript:根据体检记录PAADM更新体检报告状态
Creater:	王国营
Table:DHC_PE_Report
Input:<Request><admId>4039849</admId><status>P</status></Request>
Output:	
Return：0 成功  非0 失败
W ##CLASS(HS.BL.ExaminationReport).UpdateReportStatus("<Request><admId>4039849</admId><status>P</status></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s ^wgy=params
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s admId=$TR(request.admId,$c(0))
		s status=$TR(request.status,$c(0))
		s userId=$TR(request.userId,$c(0))
	}else{
		if $$$ISERR(sc) q "-21^解析参数错误"
	}
	q:(admId="")||(status="") "-3^参数不能为空"
	q:(status="P")&&(userId="") "-9^打印人不能为空"
	q:'$D(^DHCPEIADM(0,"PAADM",admId)) "-4^PAADM无效"
	s IADMDR=$O(^DHCPEIADM(0,"PAADM",admId,0))
	s RPTID=$o(^DHCPERPT(0,"IADM",IADMDR,0))
	s inString=RPTID_"^"_status_"^"_userId_"^"
	s ret=##class(web.DHCPE.Report).SetReportStatus("","",inString)
	i ret=0 d
	.s ret="0^更新成功"
	e  d
	.s ret="-5^"_ret
	q ret
]]></Implementation>
</Method>

<Method name="TestByzn">
<Description>
w ##CLASS(HS.BL.ExaminationReport).TestByzn()</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	s a = ""
	q $f(a,"ZFB")
]]></Implementation>
</Method>

<Method name="PageTemResultItem">
<Description>
Descript:根据规则将LIS/PIS/RIS/EKG 结果分页
Creater:	王国营
CreateDate:	2017-12-21
W ##CLASS(HS.BL.ExaminationReport).PageTemResultItem("1173")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>admId:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:$g(admId)="" "-4^体检id不能为空"
	k ^DHCPENetTemResultPage("Page",admId)
	
	s startSort=0
	s lastSort=startSort
	s pageNo=0
	s count=0
	s sort=""
	f  s sort=$o(^DHCPENetReport("Result",admId,"OrdItem",sort)) q:(sort="")  d
	.s ordItemId=$o(^DHCPENetReport("Result",admId,"OrdItem",sort,0))
	.q:ordItemId=""
	.q:ordItemId="Detail"
	.s type=$P(^DHCPENetReport("Result",admId,"OrdItem",sort,ordItemId),"^",2)
	.q:(type'="RF_LIS")&&(type'="RF_RIS")&&(type'="PIS")&&(type'="RF_EKG")
	.s:startSort=0 startSort=sort
	.i count>=20  d
	..s pageNo=pageNo+1
	..s ^DHCPENetTemResultPage("Page",admId,pageNo)=startSort_"^"_lastSort_"^"_pageNo
	..s startSort=sort
	..s count=0
	.
	.s lastSort=sort
	.s detailSort=""
	.f  s detailSort=$o(^DHCPENetReport("Result",admId,"OrdDetail",ordItemId,"Detail",detailSort)) q:detailSort=""  d
	..s detailId=""
	..f  s detailId=$o(^DHCPENetReport("Result",admId,"OrdDetail",ordItemId,"Detail",detailSort,detailId)) q:detailId=""  d
	...s count=count+1
	..
	.
	i count>=1  d
	.s pageNo=pageNo+1
	.s ^DHCPENetTemResultPage("Page",admId,pageNo)=startSort_"^"_lastSort_"^"_pageNo
	.
	q 0
]]></Implementation>
</Method>

<Method name="QueryTempResultItem">
<Description><![CDATA[
Descript:根据就诊id查找LIS/PIS/RIS/EKG 结果
Creater:	王国营
CreateDate:	2017-12-21
Input:<Request><admId>体检id</admId><pageNo>2</pageNo></Request>
Return：<ExaminationItem></ExaminationItem>
W ##CLASS(HS.BL.ExaminationReport).QueryTempResultItem("<Request><pageNo>2</pageNo><admId>131</admId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s ^zdm("QueryExaminationItem")=params
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s admId=$TR(request.admId,$c(0))
		s pageNo=+$TR(request.pageNo,$c(0))
	}else{
		q:$$$ISERR(sc) "-3^解析参数错误:"_$System.Status.GetErrorText(sc)
	}
	q:$g(admId)="" "-4^体检id不能为空"
	s ret=0
	i pageNo<=1 d
	.s reportStatus=##class(web.DHCPE.NetReport.Main).IsAuditReport(admId)
	.d:reportStatus'=0 ##class(web.DHCPE.NetReport.Main).SetReportData(admId)
	.s ret=..PageTemResultItem(admId)
	q:ret'=0 "-5^没有体检记录"
	q:'$D(^DHCPENetTemResultPage("Page",admId,1)) "-9^检验检查结果未出"
	s pageInfo=$g(^DHCPENetTemResultPage("Page",admId,pageNo))
	s startSort=+$p(pageInfo,"^",1)
	s endSort=+$p(pageInfo,"^",2)
	s pages=$p(pageInfo,"^",3)
	s firstSort=+$P(^DHCPENetTemResultPage("Page",admId,1),"^",1)
	s firstItemId=$o(^DHCPENetReport("Result",admId,"OrdItem",firstSort,""))
	s lastPage=$O(^DHCPENetTemResultPage("Page",admId,""),-1)
	s lastSort=+$P(^DHCPENetTemResultPage("Page",admId,lastPage),"^",2)
	s lastItemId=$o(^DHCPENetReport("Result",admId,"OrdItem",lastSort,""),-1)
	s retStr=""
	s exitFlag=0
	s sort=startSort-1
	f  s sort=$o(^DHCPENetReport("Result",admId,"OrdItem",sort)) q:(sort="")!(sort>endSort)  d
	.s ordItemId=$o(^DHCPENetReport("Result",admId,"OrdItem",sort,0)) 
	.q:ordItemId=""
	.q:ordItemId="Detail"
	.s type=$P(^DHCPENetReport("Result",admId,"OrdItem",sort,ordItemId),"^",2)
	.q:(type'="RF_LIS")&&(type'="RF_RIS")&&(type'="PIS")&&(type'="RF_EKG")
	.s data=^DHCPENetReport("Result",admId,"OrdItem",sort,ordItemId)
	.s isFirst=0
	.s isLast=0
	.i ordItemId=firstItemId  d
	..s isFirst=1
	.i ordItemId=lastItemId  d
	..s isLast=1
	.s myObj=##class(HS.Temp.ExaminationItem).%New()
	.s myObj.itemId=ordItemId
	.s myObj.auditDoctorName=$p(data,"^",3)
	.s myObj.doctorName=$p(data,"^",4)
	.s myObj.examDate=$p(data,"^",5)
	.s myObj.itemDesc=$p(data,"^",1)
	.s myObj.reportFormat=$p(data,"^",2)
	.s myObj.isFirst=isFirst
	.s myObj.isLast=isLast
	.s detailSort=""
	.f  s detailSort=$o(^DHCPENetReport("Result",admId,"OrdDetail",ordItemId,"Detail",detailSort)) q:detailSort=""  d
	..s detailId=""
	..f  s detailId=$o(^DHCPENetReport("Result",admId,"OrdDetail",ordItemId,"Detail",detailSort,detailId)) q:detailId=""  d
	...s detailData=^DHCPENetReport("Result",admId,"OrdDetail",ordItemId,"Detail",detailSort,detailId)
	...s myDetail=##class(HS.Temp.ExaminationItemDetail).%New()
	...s myDetail.exceptionTip=$p(detailData,"^",4)
	...s myDetail.itemAbbreviation=$p(detailData,"^",2)
	...s myDetail.itemDesc=$p(detailData,"^",1)
	...s myDetail.itemResult=$p(detailData,"^",3)
	...s myDetail.itemUom=$p(detailData,"^",5)
	...s myDetail.referenceRange=$p(detailData,"^",6)
	...s myDetail.imgInfo=$p(detailData,"^",8)
	...d myObj.ItemDetailList.Insert(myDetail)
	...s myDetail=""
	..
	.s sc=myObj.XMLExportToString(.XML,"ExaminationItem")
	.i '$$$ISERR(sc)  d
	..s retStr=retStr_XML
	.s myObj=""
	.
	q "<total>"_pages_"</total>"_retStr
]]></Implementation>
</Method>

<Method name="QueryUserByReportDate">
<Description><![CDATA[
Descript:通过报告日期查询用户基本信息
Creater:	王国营
w ##CLASS(HS.BL.ExaminationReport).QueryUserByReportDate("<Request><reportDateBegin>2017-12-06</reportDateBegin><reportDateEnd>2017-12-06</reportDateEnd></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s reportDateBegin=$TR(request.reportDateBegin,$c(0))
		s reportDateEnd=$TR(request.reportDateEnd,$c(0))
	}else{
		q:$$$ISERR(sc) "-3^解析参数错误:"_$System.Status.GetErrorText(sc)
	}
	q:$g(reportDateBegin)="" "-4^开始时间不能为空"
	q:$g(reportDateEnd)="" "-5^结束时间不能为空"
	s reportDateBegin=$zdh(reportDateBegin,3)
	s reportDateEnd=$zdh(reportDateEnd,3)
	q:reportDateEnd<reportDateBegin "-6^结束时间不能小于开始时间"
	s retStr=""
	s AuditDate=$o(^DHCPEGS(0,"AuditDateTime",reportDateBegin),-1)
	f  s AuditDate=$O(^DHCPEGS(0,"AuditDateTime",AuditDate)) q:(AuditDate="")||(AuditDate>reportDateEnd)  d
	.s AuditTime=""
	.f  s AuditTime=$O(^DHCPEGS(0,"AuditDateTime",AuditDate,AuditTime)) q:AuditTime=""  d
	..s GSID=""
	..f  s GSID=$O(^DHCPEGS(0,"AuditDateTime",AuditDate,AuditTime,GSID)) q:GSID=""  d
	...s PEIADMID=$p(^DHCPEGS(GSID,1),"^",1)
	...q:PEIADMID=""
	...s PAADMID=$p($G(^DHCPEIADM(PEIADMID)),"^",1)
	...s obj=##class(User.PAAdm).%OpenId(PAADMID)
	...s RegNo=obj.PAADMPAPMIDR.PAPMINo
	...d obj.%Close()
	...s obj=""
	...s data=$G(^DHCPENetReport("Record",RegNo,PAADMID))
	...q:data="" ;-5^未生成该用户的体检报告
	...s myObj=##class(HS.Temp.ReportUserInfo).%New()
	...s myObj.regNo=RegNo
	...s myObj.name=$p(data,"^",1)
	...s myObj.sex=$p(data,"^",2)
	...s ageData=$p(data,"^",3)
	...s ageIndex=$F(ageData,"岁")
	...s myObj.age=$e(ageData,1,ageIndex-2)
	...s myObj.admId=PAADMID
	...s myObj.checkDate=$p(data,"^",5)
	...s myObj.department=$p(data,"^",12)
	...s myObj.HPNo=$p(data,"^",13)
	...s myObj.telephone=$p(data,"^",14)
	...s myObj.addItem=$G(^DHCPENetReport("Result",PAADMID,"AddItem"))
	...s myObj.OrderSetsDesc=$G(^DHCPENetReport("Result",PAADMID,"OrderSetsDesc"))
	...s PreIADMID=$p($G(^DHCPEIADM(PEIADMID)),"^",4)
	...q:PreIADMID=""
	...s LocID=$P(^DHCPEPreIADM(PreIADMID),"^",26)
	...q:LocID=""
	...s myObj.peLoc=$P(^CTLOC(LocID),"^",2)
	...s HosID=$P(^CTLOC(LocID),"^",22)
	...s myObj.peHos=$P(^CT("HOSP",HosID),"^",2)
	...s PreIBaseID=$P(^DHCPEPreIADM(PreIADMID),"^",1)
	...s CurData=$G(^DHCPEPreIBI(PreIBaseID))
	...s myObj.otherPhone=$p(CurData,"^",6)
	...s myObj.cardNo=$p(CurData,"^",9)
	...s Dob=$p(CurData,"^",4)
 	...s:Dob'="" Dob=$ZD(Dob,3)
 	...s myObj.birthDate=Dob
 	...s myObj.address=$p(CurData,"^",14)
 	...s MarriedDR=$p(CurData,"^",17)
 	...s:MarriedDR'="" myObj.marryed=$P($G(^CT("MAR",MarriedDR)),"^",2)
 	...s myObj.occupation=$p(CurData,"^",10)
	...s sc=myObj.XMLExportToString(.XML,"ReportUserInfo")
	...i '$$$ISERR(sc)  d
	....s retStr=retStr_XML
	q retStr
]]></Implementation>
</Method>

<Method name="QueryHistoryResult">
<Description><![CDATA[
Descript:根据体检记录PAADM查找历年结果
Creater:	王国营
Table:^DHCPENetReport("Result",PAADM,"HistoryResult")
Input:<Request><admId>4039849</admId></Request>
Output:	
Return：<ExaminationGather></ExaminationGather>
W ##CLASS(HS.BL.ExaminationReport).QueryHistoryResult("<Request><admId>2283</admId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s admId=$TR(request.admId,$c(0))
	}else{
		if $$$ISERR(sc) q "-21^解析参数错误"
	}
	q:admId="" "-3^参数不能为空"
	q:'$D(^DHCPENetReport("Result",admId,"HistoryResult")) ""
	s Info=$G(^DHCPENetReport("Result",admId,"HistoryResult",1,1))
	s len=$L(Info,"^")
	s myObj=##class(HS.Temp.HistoryRecord).%New()
	s myObj.year1=$P(Info,"^",2)
	s:len>=3 myObj.year2=$P(Info,"^",3)
	s:len>=4 myObj.year3=$P(Info,"^",4)	
	s retStr=""
	s STSequence=""
	f  s STSequence=$O(^DHCPENetReport("Result",admId,"HistoryResult",STSequence)) q:STSequence=""  d
	.s ODSub=""
	.f  s ODSub=$O(^DHCPENetReport("Result",admId,"HistoryResult",STSequence,ODSub)) q:ODSub=""  d
	..q:(STSequence=1)&&(ODSub=1)
	..s CurData=$g(^DHCPENetReport("Result",admId,"HistoryResult",STSequence,ODSub))
	..q:CurData=""
	..s resultObj=##class(HS.Temp.ItemHistoryResult).%New()
	..s item=$P(CurData,"^",1)
	..s rerult1=$P(CurData,"^",2)
	..s rerult2=$P(CurData,"^",3)
	..s rerult3=$P(CurData,"^",4)
	..s ODID=$P(CurData,"^",5)
	..s ODUnit=$p($g(^DHCPEST(+ODID,"OD",$p(ODID,"||",2))),"^",4)
	..s resultObj.item=item
	..s resultObj.unit=ODUnit	
	..s resultObj.result1=rerult1
	..s resultObj.result2=rerult2
	..s resultObj.result3=rerult3
	..d myObj.recrodList.Insert(resultObj)
	s sc=myObj.XMLExportToString(.XML,"HistoryRecord")
	q:$$$ISERR(sc) "-10^"_$System.Status.GetErrorText(sc)
	s retStr=XML
	q retStr
]]></Implementation>
</Method>

<Method name="QueryNeedExportPDF">
<Description><![CDATA[
Descript:查询当前时间需要上传PDF的报告记录
Creater:	王国营
Table:User.DHCPEReportExportPDF
Input:<Request></Request>
Output:	
Return：
W ##CLASS(HS.BL.ExaminationReport).QueryNeedExportPDF("<Request></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>Params</FormalSpec>
<Implementation><![CDATA[
	s retStr=""
	s total=0
	s MaxSize=100 ;每次最多返回记录数，防止客户端定时任务执行错乱
	;待导出的数据
	s AuditDate=""
	f  s AuditDate=$O(^User.DHCPEReportExportPDFI("StatusAuditDateIndex","0",AuditDate)) q:(AuditDate="")||(total>=MaxSize)  d
	.s ID=""
	.f  s ID=$O(^User.DHCPEReportExportPDFI("StatusAuditDateIndex","0",AuditDate,ID)) q:(ID="")||(total>=MaxSize)  d
	..d GetData
	;之前导出失败的数据
	s AuditDate=""
	f  s AuditDate=$O(^User.DHCPEReportExportPDFI("StatusAuditDateIndex","2",AuditDate)) q:(AuditDate="")||(total>=MaxSize)  d
	.s ID=""
	.f  s ID=$O(^User.DHCPEReportExportPDFI("StatusAuditDateIndex","2",AuditDate,ID)) q:(ID="")||(total>=MaxSize)  d
	..d GetData
	q "<total>"_total_"</total>"_retStr
GetData
	s PAADM=$lg(^User.DHCPEReportExportPDFD(ID),2)
	s myObj=##class(HS.Temp.ExportRecord).%New()
	s myObj.exportId=ID
	s myObj.admId=PAADM
	s sc=myObj.XMLExportToString(.XML,"ExportRecord")
	i '$$$ISERR(sc)  s retStr=retStr_XML  s total=total+1 
	q
]]></Implementation>
</Method>

<Method name="UpdateExportPDFRecord">
<Description><![CDATA[
Descript:更新导出PDF报告记录
Creater:	王国营
Table:User.DHCPEReportExportPDF
Input:<Request><exportId>2</exportId><status>3</status><fileName>PT0003#433.pdf</fileName></Request>
Output:	
Return：
W ##CLASS(HS.BL.ExaminationReport).UpdateExportPDFRecord("<Request><exportId>2</exportId><status>3</status><fileName>ftp://dhc:dhc@127.0.0.1:21/test/PT0003#433.pdf</fileName></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params</FormalSpec>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s exportId=$TR(request.exportId,$c(0))
		s status=$TR(request.status,$c(0))
		s fileName=$TR(request.fileName,$c(0))
	}else{
		if $$$ISERR(sc) q "-21^解析参数错误"
	}
	q:(exportId="")||(status="")||(fileName="") "-3^参数不能为空"
	s ret=##class(web.DHCPE.ReportExportPDF).ExportReport(exportId,status,fileName)
	i ret>0 d
	.s ret="0^更新成功"
	e  d
	.s ret="-5^"_ret
	q ret
]]></Implementation>
</Method>

<Method name="GetReportPDFPath">
<Description><![CDATA[
Descript:根据就诊ID获取上传的PDF报告文件地址
Creater:	王国营
Table:User.DHCPEReportExportPDF
Input:<Request><admId>2</admId></Request>
Output:	
Return：
W ##CLASS(HS.BL.ExaminationReport).GetReportPDFPath("<Request><admId>2</admId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params</FormalSpec>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s admId=$TR(request.admId,$c(0))
	}else{
		if $$$ISERR(sc) q "-21^解析参数错误"
	}
	q:admId="" "-3^参数不能为空"
	s path=##class(web.DHCPE.ReportExportPDF).GetReportPath(admId)
	q:path="" "-10^PDF报告不存在"
	q path
]]></Implementation>
</Method>

<Method name="QueryItemCollection">
<Description><![CDATA[
Descript:根据就诊ID获取项目集合
Creater:	王国营
Table:
Input:<Request><admId>2</admId></Request>
Output:	
Return：
W ##CLASS(HS.BL.ExaminationReport).QueryItemCollection("<Request><admId>2</admId></Request>")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>params</FormalSpec>
<Implementation><![CDATA[
	s params=$TR(params,$c(0))
	q:params="" "-1^参数不能为空"
	s reader=##class(%XML.Reader).%New()
	s sc=reader.OpenString(params)
	if $$$ISERR(sc) q "-2^读取参数失败:"_$System.Status.GetErrorText(sc)
	do reader.Correlate("Request","HS.Temp.ExaminationReportRequest")
	if (reader.Next(.request,.sc)){
		s admId=$TR(request.admId,$c(0))
	}else{
		if $$$ISERR(sc) q "-21^解析参数错误"
	}
	q:admId="" "-3^参数不能为空"
	s addItemID=$G(^DHCPENetReport("Result",admId,"AddItem"))
	f i=1:1:$l(addItemID,"、") d
	.s TestId=$P(addItemID,"、",1)
	.s OEORDRowId=$P(TestId,"||",1) // OE_Order.OEORD_RowId
	.s OEORIChildsub=$P(TestId,"||",2) // OE_Order.OEORI_Childsub
	.s ARCIMDR=$P($G(^OEORD(OEORDRowId,"I",OEORIChildsub,1)),"^",2)
	.s recLoc=##class(web.DHCPE.Interface.Handler.IntegrationHandler).GetReceiveLocDesc(ARCIMDR)
	.s ARCIMDesc=$p($g(^ARCIM($p(ARCIMDR,"||",1),$p(ARCIMDR,"||",2),1)),"^",2)
]]></Implementation>
</Method>
</Class>




<Class name="HS.Temp.ArteryObject">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>63612,52796.934324</TimeChanged>
<TimeCreated>63612,51989.484426</TimeCreated>

<Property name="name">
<Type>%String</Type>
</Property>

<Property name="sex">
<Type>%String</Type>
</Property>

<Property name="age">
<Type>%String</Type>
</Property>

<Property name="peDate">
<Type>%String</Type>
</Property>

<Property name="height">
<Type>%String</Type>
</Property>

<Property name="weight">
<Type>%String</Type>
</Property>

<Property name="systolic">
<Type>%String</Type>
</Property>

<Property name="diastolic">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
//舒张压 低压

]]></Content>
</UDLText>
</Class>


<Class name="HS.Temp.CTLoc">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>63187,39960.698173</TimeChanged>
<TimeCreated>63187,39960.698173</TimeCreated>

<Property name="locId">
<Type>%String</Type>
</Property>

<Property name="locDesc">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.DHCPENetPreLog">
<SqlTableName>DHC_PE_NetPreLog</SqlTableName>
<Super>%Persistent,%XML.Adaptor</Super>
<TimeChanged>64212,35884.434468</TimeChanged>
<TimeCreated>64212,34279.833989</TimeCreated>

<Property name="beginOrEnd">
<Type>%String</Type>
<SqlFieldName>begin_or_end</SqlFieldName>
</Property>

<Property name="datetime">
<Type>%String</Type>
<SqlFieldName>date_time</SqlFieldName>
</Property>

<Property name="methodName">
<Type>%String</Type>
<SqlFieldName>method_name</SqlFieldName>
</Property>

<Property name="regNo">
<Description>
His登记号</Description>
<Type>%String</Type>
<SqlFieldName>reg_no</SqlFieldName>
</Property>

<Property name="name">
<Description>
姓名</Description>
<Type>%String</Type>
<Required>1</Required>
<SqlFieldName>name</SqlFieldName>
</Property>

<Property name="idCard">
<Description>
身份证号</Description>
<Type>%String</Type>
<SqlFieldName>id_card</SqlFieldName>
</Property>

<Property name="telephone">
<Description>
电话</Description>
<Type>%String</Type>
<SqlFieldName>telephone</SqlFieldName>
</Property>

<Property name="preDate">
<Description>
预约检查日期</Description>
<Type>%String</Type>
<SqlFieldName>pre_date</SqlFieldName>
</Property>

<Property name="datePmType">
<Description>
日期类型 H G I </Description>
<Type>%String</Type>
<SqlFieldName>date_pm_type</SqlFieldName>
</Property>

<Property name="levelDesc">
<Description>
套餐类型描述</Description>
<Type>%String</Type>
<SqlFieldName>level_desc</SqlFieldName>
</Property>

<Property name="param">
<Type>%String</Type>
<SqlFieldName>param</SqlFieldName>
</Property>

<Property name="result">
<Type>%String</Type>
<SqlFieldName>result</SqlFieldName>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^HS.Temp.DHCPENetPreLogD</DataLocation>
<DefaultData>DHCPENetPreLogDefaultData</DefaultData>
<IdLocation>^HS.Temp.DHCPENetPreLogD</IdLocation>
<IndexLocation>^HS.Temp.DHCPENetPreLogI</IndexLocation>
<StreamLocation>^HS.Temp.DHCPENetPreLogS</StreamLocation>
<Data name="DHCPENetPreLogDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>beginOrEnd</Value>
</Value>
<Value name="3">
<Value>datetime</Value>
</Value>
<Value name="4">
<Value>regNo</Value>
</Value>
<Value name="5">
<Value>name</Value>
</Value>
<Value name="6">
<Value>sex</Value>
</Value>
<Value name="7">
<Value>age</Value>
</Value>
<Value name="8">
<Value>idCard</Value>
</Value>
<Value name="9">
<Value>status</Value>
</Value>
<Value name="10">
<Value>ordSetId</Value>
</Value>
<Value name="11">
<Value>preDate</Value>
</Value>
<Value name="12">
<Value>payFlag</Value>
</Value>
<Value name="13">
<Value>levelDesc</Value>
</Value>
<Value name="14">
<Value>telephone</Value>
</Value>
<Value name="15">
<Value>datePmType</Value>
</Value>
<Value name="16">
<Value>methodName</Value>
</Value>
<Value name="17">
<Value>saveType</Value>
</Value>
<Value name="18">
<Value>param</Value>
</Value>
<Value name="19">
<Value>result</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="HS.Temp.ExamAvailDate">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64807,40650.890706</TimeChanged>
<TimeCreated>63189,50268.561371</TimeCreated>

<UDLText name="T">
<Content><![CDATA[
// 体检日期

]]></Content>
</UDLText>

<Property name="examDate">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 体检科室名称

]]></Content>
</UDLText>

<Property name="examLocDesc">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 体检科室ID

]]></Content>
</UDLText>

<Property name="examLocId">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 还可预约数

]]></Content>
</UDLText>

<Property name="availRegCount">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 已预约数

]]></Content>
</UDLText>

<Property name="regCount">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 开放预约数

]]></Content>
</UDLText>

<Property name="totalCount">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// User.DHCPEPreManager表ID

]]></Content>
</UDLText>

<Property name="strID">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 开始时间

]]></Content>
</UDLText>

<Property name="startTime">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 结束时间

]]></Content>
</UDLText>

<Property name="endTime">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// User.DHCPEPreTimeManager

]]></Content>
</UDLText>

<Property name="detailID">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 另外一个体检科室ID

]]></Content>
</UDLText>

<Property name="otherLocId">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 状态

]]></Content>
</UDLText>

<Property name="status">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 团队类型

]]></Content>
</UDLText>

<Property name="datePmType">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 性别

]]></Content>
</UDLText>

<Property name="sex">
<Type>%String</Type>
</Property>

<Property name="sexDesc">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.ExamPackageItem">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64798,34132.176733</TimeChanged>
<TimeCreated>63186,62287.828072</TimeCreated>

<Property name="detailId">
<Type>%String</Type>
</Property>

<Property name="detailDesc">
<Type>%String</Type>
</Property>

<Property name="detailIntent">
<Type>%String</Type>
</Property>

<Property name="detailSeqNo">
<Type>%String</Type>
</Property>

<Property name="itemId">
<Type>%String</Type>
</Property>

<Property name="itemDesc">
<Type>%String</Type>
</Property>

<Property name="typeId">
<Type>%String</Type>
</Property>

<Property name="typeDesc">
<Type>%String</Type>
</Property>

<Property name="ordSetsId">
<Type>%String</Type>
</Property>

<Property name="ordSetsDesc">
<Type>%String</Type>
</Property>

<Property name="ordSetsPrice">
<Type>%String</Type>
</Property>

<Property name="remark">
<Type>%String</Type>
</Property>

<Property name="locId">
<Type>%String</Type>
</Property>

<Property name="locDesc">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.ExamPackagesLevel">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>63186,59111.643938</TimeChanged>
<TimeCreated>63186,59111.643938</TimeCreated>

<Property name="levelId">
<Type>%String</Type>
</Property>

<Property name="levelDesc">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.ExamQuestion">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64391,41258.001342</TimeChanged>
<TimeCreated>63195,51075.34186</TimeCreated>

<Property name="quesId">
<Type>%String</Type>
</Property>

<Property name="quesCode">
<Type>%String</Type>
</Property>

<Property name="quesDesc">
<Type>%String</Type>
</Property>

<Property name="subjectCode">
<Type>%String</Type>
</Property>

<Property name="subjectDesc">
<Type>%String</Type>
</Property>

<Property name="subjectRemark">
<Type>%String</Type>
</Property>

<Property name="subjectId">
<Type>%String</Type>
</Property>

<Property name="detailId">
<Type>%String</Type>
</Property>

<Property name="detailDesc">
<Type>%String</Type>
</Property>

<Property name="detailCode">
<Type>%String</Type>
</Property>

<Property name="detailNote">
<Type>%String</Type>
</Property>

<Property name="detailNoteType">
<Type>%String</Type>
</Property>

<Property name="linkId">
<Type>%String</Type>
</Property>

<Property name="detailType">
<Type>%String</Type>
</Property>

<Property name="detailUnit">
<Type>%String</Type>
</Property>

<Property name="QuestionOptionsList">
<Type>HS.Temp.QuestionOptions</Type>
<Collection>list</Collection>
</Property>

<Property name="seqNo">
<Type>%String</Type>
</Property>

<Property name="isLast">
<Type>%String</Type>
</Property>

<Property name="remark">
<Type>%String</Type>
</Property>

<Property name="showFlag">
<Type>%String</Type>
</Property>

<Property name="required">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 文本数值类型 答案

]]></Content>
</UDLText>

<Property name="txtValue">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.ExamQuestionRequest">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64534,57562.415285</TimeChanged>
<TimeCreated>63195,51366.119456</TimeCreated>

<Property name="activeFlag">
<Type>%String</Type>
</Property>

<Property name="quesType">
<Type>%String</Type>
</Property>

<Property name="lastSeqNo">
<Type>%String</Type>
</Property>

<Property name="pageSize">
<Type>%String</Type>
</Property>

<Property name="idCardNo">
<Type>%String</Type>
</Property>

<Property name="questionnaireName">
<Type>%String</Type>
</Property>

<Property name="preWay">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.ExamRegRecord">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64812,38188.107289</TimeChanged>
<TimeCreated>63189,38506.829745</TimeCreated>

<Property name="patientRegNo">
<Type>%String</Type>
</Property>

<Property name="patientName">
<Type>%String</Type>
</Property>

<Property name="sexDesc">
<Type>%String</Type>
</Property>

<Property name="patientAge">
<Type>%String</Type>
</Property>

<Property name="patientIdNo">
<Type>%String</Type>
</Property>

<Property name="ordSetId">
<Type>%String</Type>
</Property>

<Property name="ordSetDesc">
<Type>%String</Type>
</Property>

<Property name="regExamDate">
<Type>%String</Type>
</Property>

<Property name="regId">
<Type>%String</Type>
</Property>

<Property name="phoneNo">
<Type>%String</Type>
</Property>

<Property name="examRegNo">
<Type>%String</Type>
</Property>

<Property name="companyDesc">
<Type>%String</Type>
</Property>

<Property name="levelDesc">
<Type>%String</Type>
</Property>

<Property name="departmentDesc">
<Type>%String</Type>
</Property>

<Property name="totalAmount">
<Type>%String</Type>
</Property>

<Property name="breakfastDesc">
<Type>%String</Type>
</Property>

<Property name="reportDesc">
<Type>%String</Type>
</Property>

<Property name="specialSeqNo">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 预约状态

]]></Content>
</UDLText>

<Property name="status">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 缴费状态

]]></Content>
</UDLText>

<Property name="payFlag">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 就诊ID

]]></Content>
</UDLText>

<Property name="admId">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// his 体检预约登记ID

]]></Content>
</UDLText>

<Property name="preIADM">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 体检科室id

]]></Content>
</UDLText>

<Property name="locId">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 体检科室描述

]]></Content>
</UDLText>

<Property name="locDesc">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 预约时间段

]]></Content>
</UDLText>

<Property name="regExamTime">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 团体，个人

]]></Content>
</UDLText>

<Property name="pmType">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 团体ID

]]></Content>
</UDLText>

<Property name="gid">
<Type>%String</Type>
</Property>

<Property name="datePmType">
<Type>%String</Type>
</Property>

<Property name="idCard">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 预约时间修改标记 1：已修改   0：未修改

]]></Content>
</UDLText>

<Property name="preDateFlag">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 体检号

]]></Content>
</UDLText>

<Property name="peId">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 允许修改标志

]]></Content>
</UDLText>

<Property name="canModifyFlag">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 用于传递文字信息

]]></Content>
</UDLText>

<Property name="peInfo">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 预约途径

]]></Content>
</UDLText>

<Property name="preWay">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.ExaminationGather">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64583,52900.765222</TimeChanged>
<TimeCreated>64583,52900.765222</TimeCreated>

<Property name="itemDesc">
<Type>%String</Type>
</Property>

<Property name="resultDesc">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.ExaminationItem">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64813,51748.425319</TimeChanged>
<TimeCreated>63182,44165.435032</TimeCreated>

<Property name="itemDesc">
<Type>%String</Type>
</Property>

<Property name="itemId">
<Type>%String</Type>
</Property>

<Property name="reportFormat">
<Type>%String</Type>
</Property>

<Property name="auditDoctorName">
<Type>%String</Type>
</Property>

<Property name="doctorName">
<Type>%String</Type>
</Property>

<Property name="examDate">
<Type>%String</Type>
</Property>

<Property name="ItemDetailList">
<Type>HS.Temp.ExaminationItemDetail</Type>
<Collection>list</Collection>
</Property>

<Property name="isFirst">
<Type>%String</Type>
</Property>

<Property name="isLast">
<Type>%String</Type>
</Property>

<Property name="stationCode">
<Type>%String</Type>
</Property>

<Property name="stationName">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 小结

]]></Content>
</UDLText>

<Property name="diagnosis">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.ExaminationItemDetail">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64520,53546.798506</TimeChanged>
<TimeCreated>63182,43309.404842</TimeCreated>

<Property name="itemDesc">
<Type>%String</Type>
</Property>

<Property name="itemAbbreviation">
<Type>%String</Type>
</Property>

<Property name="itemResult">
<Type>%String</Type>
</Property>

<Property name="exceptionTip">
<Type>%String</Type>
</Property>

<Property name="itemUom">
<Type>%String</Type>
</Property>

<Property name="referenceRange">
<Type>%String</Type>
</Property>

<Property name="itemId">
<Type>%String</Type>
</Property>

<Property name="imgInfo">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.ExaminationList">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>63249,61369.624444</TimeChanged>
<TimeCreated>63181,54072.741649</TimeCreated>

<Property name="admId">
<Type>%String</Type>
</Property>

<Property name="name">
<Type>%String</Type>
</Property>

<Property name="sex">
<Type>%String</Type>
</Property>

<Property name="age">
<Type>%String</Type>
</Property>

<Property name="company">
<Type>%String</Type>
</Property>

<Property name="examDate">
<Type>%String</Type>
</Property>

<Property name="examLoc">
<Type>%String</Type>
</Property>

<Property name="summaryDoctor">
<Type>%String</Type>
</Property>

<Property name="summaryDate">
<Type>%String</Type>
</Property>

<Property name="auditDoctor">
<Type>%String</Type>
</Property>

<Property name="auditDate">
<Type>%String</Type>
</Property>

<Property name="vipDesc">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.ExaminationNetPayRequest">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64757,60600.652379</TimeChanged>
<TimeCreated>64757,56527.044248</TimeCreated>

<Property name="patientId">
<Type>%String</Type>
</Property>

<Property name="admId">
<Type>%String</Type>
</Property>

<Property name="regNo">
<Type>%String</Type>
</Property>

<Property name="payMode">
<Type>%String</Type>
</Property>

<Property name="payAmount">
<Type>%String</Type>
</Property>

<Property name="bindFlag">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.ExaminationPackages">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64495,34303.185825</TimeChanged>
<TimeCreated>63186,62388.093495</TimeCreated>

<UDLText name="T">
<Content><![CDATA[
// his中套餐id

]]></Content>
</UDLText>

<Property name="packageId">
<Type>%String</Type>
</Property>

<Property name="packageDesc">
<Type>%String</Type>
</Property>

<Property name="packageAmt">
<Type>%String</Type>
</Property>

<Property name="PackageItemList">
<Type>HS.Temp.ExamPackageItem</Type>
<Collection>list</Collection>
</Property>

<Property name="isFirst">
<Type>%String</Type>
</Property>

<Property name="isLast">
<Type>%String</Type>
</Property>

<Property name="ordSetsId">
<Type>%String</Type>
</Property>

<Property name="levelDesc">
<Type>%String</Type>
</Property>

<Property name="levelId">
<Type>%String</Type>
</Property>

<Property name="giFlag">
<Type>%String</Type>
</Property>

<Property name="remark">
<Type>%String</Type>
</Property>

<Property name="sexDesc">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 过敏，免疫，普通

]]></Content>
</UDLText>

<Property name="ordSetsType">
<Type>%String</Type>
</Property>

<Property name="locId">
<Type>%String</Type>
</Property>

<Property name="locDesc">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 推荐度

]]></Content>
</UDLText>

<Property name="recommendScore">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.ExaminationRegRequest">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64812,37572.867663</TimeChanged>
<TimeCreated>63189,34191.734253</TimeCreated>

<Property name="patientRegNo">
<Type>%String</Type>
</Property>

<Property name="patientName">
<Type>%String</Type>
</Property>

<Property name="sexDesc">
<Type>%String</Type>
</Property>

<Property name="patientAge">
<Type>%String</Type>
</Property>

<Property name="patientDob">
<Type>%String</Type>
</Property>

<Property name="patientIdNo">
<Type>%String</Type>
</Property>

<Property name="cardType">
<Type>%String</Type>
</Property>

<Property name="telephoneNo">
<Type>%String</Type>
</Property>

<Property name="regStatus">
<Type>%String</Type>
</Property>

<Property name="ordSetId">
<Type>%String</Type>
</Property>

<Property name="ordSetsId">
<Type>%String</Type>
</Property>

<Property name="regExamDate">
<Type>%String</Type>
</Property>

<Property name="regId">
<Type>%String</Type>
</Property>

<Property name="locId">
<Type>%String</Type>
</Property>

<Property name="admId">
<Type>%String</Type>
</Property>

<Property name="startExamDate">
<Type>%String</Type>
</Property>

<Property name="endExamDate">
<Type>%String</Type>
</Property>

<Property name="levelDesc">
<Type>%String</Type>
</Property>

<Property name="pmType">
<Type>%String</Type>
</Property>

<Property name="sex">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 职业

]]></Content>
</UDLText>

<Property name="occupation">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 学历

]]></Content>
</UDLText>

<Property name="education">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 婚姻状况

]]></Content>
</UDLText>

<Property name="marriage">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 问卷结果

]]></Content>
</UDLText>

<Property name="listResult">
<Type>%String</Type>
<Parameter name="MAXLEN" value="6500"/>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 预约状态

]]></Content>
</UDLText>

<Property name="status">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 缴费标志

]]></Content>
</UDLText>

<Property name="payFlag">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// User.DHCPEPreManager表ID

]]></Content>
</UDLText>

<Property name="strID">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// User.DHCPEPreTimeManager表ID

]]></Content>
</UDLText>

<Property name="detailId">
<Type>%String</Type>
</Property>

<Property name="gid">
<Type>%String</Type>
</Property>

<Property name="date">
<Type>%String</Type>
</Property>

<Property name="datePmType">
<Type>%String</Type>
</Property>

<Property name="peId">
<Type>%String</Type>
</Property>

<Property name="idCard">
<Type>%String</Type>
</Property>

<Property name="empNo">
<Type>%String</Type>
</Property>

<Property name="pageNo">
<Type>%String</Type>
</Property>

<Property name="groupId">
<Type>%String</Type>
</Property>

<Property name="groupCode">
<Type>%String</Type>
</Property>

<Property name="gouprHpCode">
<Type>%String</Type>
</Property>

<Property name="packageId">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 姓名

]]></Content>
</UDLText>

<Property name="name">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 部门

]]></Content>
</UDLText>

<Property name="departName">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 医嘱项描述

]]></Content>
</UDLText>

<Property name="itemDesc">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 网上自选项目

]]></Content>
</UDLText>

<Property name="netItemStr">
<Type>%String</Type>
<Parameter name="MAXLEN" value="6500"/>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 预约途径：PC、WeChat、APP

]]></Content>
</UDLText>

<Property name="preWay">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 站点ID

]]></Content>
</UDLText>

<Property name="stationId">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 项目ID

]]></Content>
</UDLText>

<Property name="itemId">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.ExaminationReportRequest">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64800,56643.044754</TimeChanged>
<TimeCreated>63181,55331.187287</TimeCreated>

<Property name="patientId">
<Type>%String</Type>
</Property>

<Property name="patientNo">
<Type>%String</Type>
</Property>

<Property name="admId">
<Type>%String</Type>
</Property>

<Property name="startRow">
<Type>%String</Type>
</Property>

<Property name="pageSize">
<Type>%String</Type>
</Property>

<Property name="startItemId">
<Type>%String</Type>
</Property>

<Property name="endItemId">
<Type>%String</Type>
</Property>

<Property name="upDownFlag">
<Type>%String</Type>
</Property>

<Property name="pageNo">
<Type>%String</Type>
</Property>

<Property name="levelId">
<Type>%String</Type>
</Property>

<Property name="locId">
<Type>%String</Type>
</Property>

<Property name="sex">
<Type>%String</Type>
</Property>

<Property name="sexDesc">
<Type>%String</Type>
</Property>

<Property name="newPumchFlg">
<Type>%String</Type>
</Property>

<Property name="idCard">
<Type>%String</Type>
</Property>

<Property name="giFlag">
<Type>%String</Type>
</Property>

<Property name="status">
<Type>%String</Type>
</Property>

<Property name="userId">
<Type>%String</Type>
</Property>

<Property name="reportDateBegin">
<Type>%String</Type>
</Property>

<Property name="reportDateEnd">
<Type>%String</Type>
</Property>

<Property name="phoneNo">
<Type>%String</Type>
</Property>

<Property name="exportId">
<Type>%String</Type>
</Property>

<Property name="fileName">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.ExaminationSummary">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64758,60579.665074</TimeChanged>
<TimeCreated>63181,61998.658568</TimeCreated>

<Property name="examSummary">
<Type>%String</Type>
</Property>

<Property name="summaryDoctor">
<Type>%String</Type>
</Property>

<Property name="summaryDate">
<Type>%String</Type>
</Property>

<Property name="auditDoctor">
<Type>%String</Type>
</Property>

<Property name="auditDate">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 分条时用

]]></Content>
</UDLText>

<Property name="summaryList">
<Type>HS.Temp.SummaryItem</Type>
<Collection>list</Collection>
</Property>
</Class>


<Class name="HS.Temp.ExportRecord">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64778,40899.363518</TimeChanged>
<TimeCreated>64778,40899.363518</TimeCreated>

<Property name="exportId">
<Type>%String</Type>
</Property>

<Property name="admId">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.GroupReservation">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>63754,35355.386973</TimeChanged>
<TimeCreated>63746,57519.592931</TimeCreated>

<UDLText name="T">
<Content><![CDATA[
//体检日期

]]></Content>
</UDLText>

<Property name="reservationDate">
<Type>%String</Type>
</Property>

<Property name="netNum">
<Type>%String</Type>
</Property>

<Property name="hisNum">
<Type>%String</Type>
</Property>

<Property name="dayTotalNum">
<Type>%String</Type>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^HS.Temp.GroupReservationD</DataLocation>
<DefaultData>GroupReservationDefaultData</DefaultData>
<IdLocation>^HS.Temp.GroupReservationD</IdLocation>
<IndexLocation>^HS.Temp.GroupReservationI</IndexLocation>
<StreamLocation>^HS.Temp.GroupReservationS</StreamLocation>
<Data name="GroupReservationDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>reservationDate</Value>
</Value>
<Value name="3">
<Value>totalNum</Value>
</Value>
<Value name="4">
<Value>netNum</Value>
</Value>
<Value name="5">
<Value>hisNum</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="HS.Temp.HistoryRecord">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64772,39686.910535</TimeChanged>
<TimeCreated>64772,39686.910535</TimeCreated>

<Property name="year1">
<Type>%String</Type>
</Property>

<Property name="year2">
<Type>%String</Type>
</Property>

<Property name="year3">
<Type>%String</Type>
</Property>

<Property name="recrodList">
<Type>HS.Temp.ItemHistoryResult</Type>
<Collection>list</Collection>
</Property>
</Class>


<Class name="HS.Temp.ItemHistoryResult">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64772,39578.793361</TimeChanged>
<TimeCreated>64772,39578.793361</TimeCreated>

<Property name="item">
<Description>
项目名称</Description>
<Type>%String</Type>
</Property>

<Property name="unit">
<Description>
单位</Description>
<Type>%String</Type>
</Property>

<Property name="result1">
<Description>
结果1</Description>
<Type>%String</Type>
</Property>

<Property name="result2">
<Description>
结果2</Description>
<Type>%String</Type>
</Property>

<Property name="result3">
<Description>
结果3</Description>
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.PEItem">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64765,53446.840212</TimeChanged>
<TimeCreated>64765,41352.670221</TimeCreated>

<Property name="itemId">
<Description>
项目ID	</Description>
<Type>%String</Type>
</Property>

<Property name="itemDesc">
<Description>
项目描述</Description>
<Type>%String</Type>
</Property>

<Property name="itemPrice">
<Description>
项目价格</Description>
<Type>%String</Type>
</Property>

<Property name="stationId">
<Description>
所属站点ID</Description>
<Type>%String</Type>
</Property>

<Property name="stationDesc">
<Description>
站点名称</Description>
<Type>%String</Type>
</Property>

<Property name="vipId">
<Description>
VIP等级ID</Description>
<Type>%String</Type>
</Property>

<Property name="vipDesc">
<Description>
VIP等级描述</Description>
<Type>%String</Type>
</Property>

<Property name="sexId">
<Description>
性别ID</Description>
<Type>%String</Type>
</Property>

<Property name="sexDesc">
<Description>
性别描述</Description>
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.PENetPreLog">
<SqlTableName>HS_TEMP_PeNetPreLog</SqlTableName>
<Super>%Persistent,%XML.Adaptor</Super>
<TimeChanged>64212,37818.70906</TimeChanged>
<TimeCreated>64212,37817.256093</TimeCreated>

<Property name="beginOrEnd">
<Type>%String</Type>
<SqlFieldName>begin_or_end</SqlFieldName>
</Property>

<Property name="datetime">
<Type>%String</Type>
<SqlFieldName>date_time</SqlFieldName>
</Property>

<Property name="methodName">
<Type>%String</Type>
<SqlFieldName>method_name</SqlFieldName>
</Property>

<Property name="regNo">
<Description>
His登记号</Description>
<Type>%String</Type>
<SqlFieldName>reg_no</SqlFieldName>
</Property>

<Property name="name">
<Description>
姓名</Description>
<Type>%String</Type>
<Required>1</Required>
<SqlFieldName>name</SqlFieldName>
</Property>

<Property name="idCard">
<Description>
身份证号</Description>
<Type>%String</Type>
<SqlFieldName>id_card</SqlFieldName>
</Property>

<Property name="telephone">
<Description>
电话</Description>
<Type>%String</Type>
<SqlFieldName>telephone</SqlFieldName>
</Property>

<Property name="preDate">
<Description>
预约检查日期</Description>
<Type>%String</Type>
<SqlFieldName>pre_date</SqlFieldName>
</Property>

<Property name="datePmType">
<Description>
日期类型 H G I </Description>
<Type>%String</Type>
<SqlFieldName>date_pm_type</SqlFieldName>
</Property>

<Property name="levelDesc">
<Description>
套餐类型描述</Description>
<Type>%String</Type>
<SqlFieldName>level_desc</SqlFieldName>
</Property>

<Property name="param">
<Type>%String</Type>
<SqlFieldName>param</SqlFieldName>
</Property>

<Property name="result">
<Type>%String</Type>
<SqlFieldName>result</SqlFieldName>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^HS.Temp.PENetPreLogD</DataLocation>
<DefaultData>PENetPreLogDefaultData</DefaultData>
<IdLocation>^HS.Temp.PENetPreLogD</IdLocation>
<IndexLocation>^HS.Temp.PENetPreLogI</IndexLocation>
<StreamLocation>^HS.Temp.PENetPreLogS</StreamLocation>
<Data name="PENetPreLogDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>beginOrEnd</Value>
</Value>
<Value name="3">
<Value>datetime</Value>
</Value>
<Value name="4">
<Value>methodName</Value>
</Value>
<Value name="5">
<Value>regNo</Value>
</Value>
<Value name="6">
<Value>name</Value>
</Value>
<Value name="7">
<Value>idCard</Value>
</Value>
<Value name="8">
<Value>telephone</Value>
</Value>
<Value name="9">
<Value>preDate</Value>
</Value>
<Value name="10">
<Value>datePmType</Value>
</Value>
<Value name="11">
<Value>levelDesc</Value>
</Value>
<Value name="12">
<Value>param</Value>
</Value>
<Value name="13">
<Value>result</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="HS.Temp.PEOrdSets">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64765,53418.315611</TimeChanged>
<TimeCreated>64765,42643.47397</TimeCreated>

<Property name="ordSetsId">
<Description>
套餐ID	</Description>
<Type>%String</Type>
</Property>

<Property name="ordSetsDesc">
<Description>
套餐描述</Description>
<Type>%String</Type>
</Property>

<Property name="ordSetsPrice">
<Description>
套餐价格</Description>
<Type>%String</Type>
</Property>

<Property name="sexId">
<Description>
性别ID</Description>
<Type>%String</Type>
</Property>

<Property name="sexDesc">
<Description>
性别描述</Description>
<Type>%String</Type>
</Property>

<Property name="ItemList">
<Description>
项目集合</Description>
<Type>HS.Temp.PEItem</Type>
<Collection>list</Collection>
</Property>
</Class>


<Class name="HS.Temp.PEResult">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>63593,48407.146743</TimeChanged>
<TimeCreated>63579,52280.22234</TimeCreated>

<Property name="orderId">
<Type>%String</Type>
</Property>

<Property name="orderDesc">
<Type>%String</Type>
</Property>

<Property name="itemId">
<Type>%String</Type>
</Property>

<Property name="itemDesc">
<Type>%String</Type>
</Property>

<Property name="itemAbbreviation">
<Type>%String</Type>
</Property>

<Property name="itemResult">
<Type>%String</Type>
</Property>

<Property name="exceptionTip">
<Type>%String</Type>
</Property>

<Property name="itemUnit">
<Type>%String</Type>
</Property>

<Property name="referenceRange">
<Type>%String</Type>
</Property>

<Property name="isFirst">
<Type>%String</Type>
</Property>

<Property name="isLast">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.PEStation">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64765,62927.689514</TimeChanged>
<TimeCreated>64765,62927.689514</TimeCreated>

<UDLText name="T">
<Content><![CDATA[
// 站点ID

]]></Content>
</UDLText>

<Property name="stationId">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 站点名称

]]></Content>
</UDLText>

<Property name="stationDesc">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.PeOrdItem">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64428,42389.179283</TimeChanged>
<TimeCreated>64405,42826.992285</TimeCreated>

<Property name="stationId">
<Type>%String</Type>
</Property>

<Property name="stationDesc">
<Type>%String</Type>
</Property>

<Property name="itemCategoryId">
<Type>%String</Type>
</Property>

<Property name="itemCategoryDesc">
<Type>%String</Type>
</Property>

<Property name="itemCategorySort">
<Type>%String</Type>
</Property>

<Property name="hisItemId">
<Type>%String</Type>
</Property>

<Property name="itemDesc">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
// 预约类型：P:his预约   N:网上预约

]]></Content>
</UDLText>

<Property name="preType">
<Type>%String</Type>
</Property>

<Property name="price">
<Type>%Float</Type>
</Property>

<Property name="content">
<Type>%String</Type>
</Property>

<Property name="levelDesc">
<Type>%String</Type>
</Property>

<Property name="levelId">
<Type>%String</Type>
</Property>

<Property name="sexCode">
<Type>%String</Type>
</Property>

<Property name="sexDesc">
<Type>%String</Type>
</Property>

<Property name="payFlag">
<Type>%String</Type>
</Property>

<Property name="setsFlag">
<Type>%String</Type>
</Property>

<Property name="mustFlag">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.PeRecord">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64776,42630.052654</TimeChanged>
<TimeCreated>63676,36679.467426</TimeCreated>

<Property name="name">
<Type>%String</Type>
</Property>

<Property name="sex">
<Type>%String</Type>
</Property>

<Property name="age">
<Type>%String</Type>
</Property>

<Property name="examDate">
<Type>%String</Type>
</Property>

<Property name="company">
<Type>%String</Type>
</Property>

<Property name="admId">
<Type>%String</Type>
</Property>

<Property name="reportStatus">
<Type>%String</Type>
</Property>

<Property name="peStatus">
<Type>%String</Type>
</Property>

<Property name="preDate">
<Type>%String</Type>
</Property>

<Property name="orderName">
<Type>%String</Type>
</Property>

<Property name="regId">
<Type>%String</Type>
</Property>

<Property name="HPNo">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.QuestionOptions">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>63243,64817.782447</TimeChanged>
<TimeCreated>63195,60679.793076</TimeCreated>

<Property name="optionId">
<Type>%String</Type>
</Property>

<Property name="optionDefaultValue">
<Type>%String</Type>
</Property>

<Property name="optionDesc">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
//选项关联的问题

]]></Content>
</UDLText>

<Property name="linkDetailId">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
//选项排斥的问题

]]></Content>
</UDLText>

<Property name="exclusiveDetailId">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
//选项是否可以录入

]]></Content>
</UDLText>

<Property name="inputFlag">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
//结果值

]]></Content>
</UDLText>

<Property name="resultValue">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
//备注

]]></Content>
</UDLText>

<Property name="resultNote">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.QuestionResult">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>63245,60396.267127</TimeChanged>
<TimeCreated>63231,50223.093964</TimeCreated>

<Property name="detailID">
<Type>%String</Type>
</Property>

<Property name="optionsID">
<Type>%String</Type>
</Property>

<Property name="resultValue">
<Type>%String</Type>
</Property>

<Property name="subjectID">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
//主题与内容关联ID

]]></Content>
</UDLText>

<Property name="linkID">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
//备注

]]></Content>
</UDLText>

<Property name="resultNote">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.QuestionResultRequest">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>63231,50722.927319</TimeChanged>
<TimeCreated>63231,50640.607362</TimeCreated>

<UDLText name="T">
<Content><![CDATA[
//登记号

]]></Content>
</UDLText>

<Property name="patientRegNo">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
//姓名

]]></Content>
</UDLText>

<Property name="patientName">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
//身份证号

]]></Content>
</UDLText>

<Property name="patientIdNo">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
//预约ID

]]></Content>
</UDLText>

<Property name="regId">
<Type>%String</Type>
</Property>

<UDLText name="T">
<Content><![CDATA[
//问卷结果

]]></Content>
</UDLText>

<Property name="listResult">
<Type>HS.Temp.QuestionResult</Type>
<Collection>list</Collection>
</Property>
</Class>


<Class name="HS.Temp.ReportUserInfo">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64749,51225.095722</TimeChanged>
<TimeCreated>64517,59789.589496</TimeCreated>

<Property name="regNo">
<Type>%String</Type>
</Property>

<Property name="name">
<Type>%String</Type>
</Property>

<Property name="sex">
<Type>%String</Type>
</Property>

<Property name="age">
<Type>%String</Type>
</Property>

<Property name="HPNo">
<Type>%String</Type>
</Property>

<Property name="company">
<Type>%String</Type>
</Property>

<Property name="department">
<Type>%String</Type>
</Property>

<Property name="checkDate">
<Type>%String</Type>
</Property>

<Property name="telephone">
<Type>%String</Type>
</Property>

<Property name="addItem">
<Type>%String</Type>
</Property>

<Property name="OrderSetsDesc">
<Type>%String</Type>
</Property>

<Property name="admId">
<Type>%String</Type>
</Property>

<Property name="birthDate">
<Type>%String</Type>
</Property>

<Property name="address">
<Type>%String</Type>
</Property>

<Property name="cardNo">
<Type>%String</Type>
</Property>

<Property name="marryed">
<Type>%String</Type>
</Property>

<Property name="occupation">
<Type>%String</Type>
</Property>

<Property name="peHos">
<Type>%String</Type>
</Property>

<Property name="peLoc">
<Type>%String</Type>
</Property>

<Property name="otherPhone">
<Type>%String</Type>
</Property>

<Property name="photo">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.ReservationDetail">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64272,36167.80157</TimeChanged>
<TimeCreated>63748,35611.234878</TimeCreated>

<Property name="name">
<Type>%String</Type>
</Property>

<Property name="sexDesc">
<Type>%String</Type>
</Property>

<Property name="preType">
<Type>%String</Type>
</Property>

<Property name="deparName">
<Type>%String</Type>
</Property>

<Property name="pAPMINo">
<Type>%String</Type>
</Property>

<Property name="pIADMHPNo">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.ReserveLog">
<SqlTableName>DHC_PE_NetPreRecord</SqlTableName>
<Super>%Persistent,%XML.Adaptor</Super>
<TimeChanged>64212,34221.764099</TimeChanged>
<TimeCreated>64212,34166.699414</TimeCreated>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^HS.Temp.ReserveLogD</DataLocation>
<DefaultData>ReserveLogDefaultData</DefaultData>
<IdLocation>^HS.Temp.ReserveLogD</IdLocation>
<IndexLocation>^HS.Temp.ReserveLogI</IndexLocation>
<StreamLocation>^HS.Temp.ReserveLogS</StreamLocation>
<Data name="ReserveLogDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="HS.Temp.SummaryDetail">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64766,40481.958299</TimeChanged>
<TimeCreated>64766,40481.958299</TimeCreated>

<Property name="detail">
<Type>%String</Type>
</Property>

<Property name="detailDesc">
<Type>%String</Type>
</Property>
</Class>


<Class name="HS.Temp.SummaryItem">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>64766,40521.012592</TimeChanged>
<TimeCreated>64758,60560.835256</TimeCreated>

<Property name="item">
<Type>%String</Type>
</Property>

<Property name="itemDesc">
<Type>%String</Type>
</Property>

<Property name="detailList">
<Type>HS.Temp.SummaryDetail</Type>
<Collection>list</Collection>
</Property>
</Class>


<Class name="HS.Temp.UserInfo">
<Super>%RegisteredObject,%XML.Adaptor</Super>
<TimeChanged>63291,41124.839422</TimeChanged>
<TimeCreated>63260,36833.779373</TimeCreated>

<Property name="userName">
<Type>%String</Type>
</Property>

<Property name="sexDesc">
<Type>%String</Type>
</Property>

<Property name="idCardNo">
<Type>%String</Type>
</Property>

<Property name="dobDate">
<Type>%String</Type>
</Property>

<Property name="nationDesc">
<Type>%String</Type>
</Property>

<Property name="telephoneNo">
<Type>%String</Type>
</Property>

<Property name="occupation">
<Type>%String</Type>
</Property>

<Property name="education">
<Type>%String</Type>
</Property>

<Property name="marriage">
<Type>%String</Type>
</Property>

<Property name="hisRegId">
<Type>%String</Type>
</Property>

<Property name="patientRegNo">
<Type>%String</Type>
</Property>

<Property name="age">
<Type>%String</Type>
</Property>

<Property name="department">
<Type>%String</Type>
</Property>

<Property name="message">
<Type>%String</Type>
</Property>

<Property name="messageType">
<Type>%String</Type>
</Property>
</Class>




<Class name="web.DHCPE.NetReport.Main">
<ClassType/>
<ProcedureBlock>0</ProcedureBlock>
<Super>%Persistent</Super>
<TimeChanged>64818,52084.688684</TimeChanged>
<TimeCreated>62844,49175.877499</TimeCreated>

<Parameter name="ServiceClassName">
<Default>web.DHCPE.NetReport.WebServiceHttpPort</Default>
</Parameter>

<Parameter name="NetReportMode">
<Default>Interface</Default>
</Parameter>

<UDLText name="T">
<Content><![CDATA[
// d ##class(web.DHCPE.NetReport.Main).Main(16488182)

]]></Content>
</UDLText>

<Method name="Main">
<ClassMethod>1</ClassMethod>
<FormalSpec>PAADM</FormalSpec>
<Implementation><![CDATA[
	/*
	s ResultInfo=..GetResult(PAADM)
	;d WebServiceObj.ISSOrderResult(ResultInfo)
	q
	*/
	s $ZT="MainErr"
	s LocID=$P(^PAADM(PAADM),"^",4)
	s NetReportFlag=$G(^DHCPESetting("DHCPE","NetReport",LocID))
	q:NetReportFlag'="Y" 0
	
	i ..#NetReportMode="Interface"
	{
		d ..SetReportData(PAADM)
		q ""
	}
	s ret=..CheckSendReport(PAADM)
	;q:ret'="" 
	
	s StartTime=$P($H,",",2)
	s UserInfo=..GetUserInfo(PAADM)
	s WebServiceObj=$ZOBJCLASSMETHOD(..#ServiceClassName,"%New")
	;1基本信息WebService
	i $P(UserInfo,"^",1)=0 d
	.s UserInfo=$P(UserInfo,"^",2)
	.s ^TempDHCPE("NetReport","UserInfo")=UserInfo
	.d WebServiceObj.IuserInfo(UserInfo)   
	
	;b ;1IuserInfo
	;2 ADM信息
	s CheckInfo=..GetCheckInfo(PAADM)
	i $P(CheckInfo,"^",1)=0 d
	.s CheckInfo=$P(CheckInfo,"^",2)
	.s ^TempDHCPE("NetReport","CheckInfo")=CheckInfo
	.d WebServiceObj.ICheckMainInfo(CheckInfo) 
	;b ;2ICheckMainInfo
	;3、4医嘱信息  科室小结
	s ResultInfo=..GetSOrderInfo(PAADM)
	i $P(ResultInfo,"^",1)=0 d
	.s CheckInfo=$P(CheckInfo,"^",2)
	.s OrderInfo=$P(ResultInfo,"^",2)
	.s ^TempDHCPE("NetReport","OrderInfo")=OrderInfo
	.d WebServiceObj.ISSOrderInfo(OrderInfo)
	.;b ;3ISSOrderInfo
	.s StationSummarizeInfo=$P(ResultInfo,"^",3)
	.s ^TempDHCPE("NetReport","StationSummarizeInfo")=StationSummarizeInfo
	.d WebServiceObj.IStationSummarize(StationSummarizeInfo)  
	.;b ;4IStationSummarize
		
	;5建议
	s DiagnosisInfo=..GetDiagnosisInfo(PAADM)
	i $P(DiagnosisInfo,"^",1)=0 d
	.s DiagnosisInfo=$P(DiagnosisInfo,"^",2)
	.s ^TempDHCPE("NetReport","DiagnosisInfo")=DiagnosisInfo
	.d WebServiceObj.IDiagnosisInfo(DiagnosisInfo)  
	;b ;5IDiagnosisInfo
	;6小结结果
	s SSResult=..GetSSResult(PAADM)
	i $P(SSResult,"^",1)=0 d
	.s SSResult=$P(SSResult,"^",2)
	.s ^TempDHCPE("NetReport","SSResult")=SSResult
	.d WebServiceObj.ISSResult(SSResult)  
	.//w SSResult
	;小结建议
	s SSDiagnosis=..GetSSDiagnosis(PAADM)
	i $P(SSDiagnosis,"^",1)=0 d
	.s SSDiagnosis=$P(SSDiagnosis,"^",2)
	.s ^TempDHCPE("NetReport","SSDiagnosis")=SSDiagnosis
	.d WebServiceObj.ISSDiagnosis(SSDiagnosis)  
	;b ;7ISSDiagnosis
	//结果
	s ResultInfo=..GetResult(PAADM)
	s EndTime=$P($H,",",2)
	
MainErr
	q ""
]]></Implementation>
</Method>

<Method name="CheckSendReport">
<ClassMethod>1</ClassMethod>
<FormalSpec>PAADM</FormalSpec>
<Implementation><![CDATA[
	s AdmObj=##class(User.PAAdm).%OpenId(PAADM)
	s hisregno=AdmObj.PAADMPAPMIDR.PAPMINo
	s cardno=AdmObj.PAADMPAPMIDR.PAPMIDVAnumber
	q:cardno="" "证件号码为空" ;不允许发送
 	q ""  ;允许发送
]]></Implementation>
</Method>

<Method name="CheckGetReport">
<ClassMethod>1</ClassMethod>
<FormalSpec>RegNo,IDCard</FormalSpec>
<Implementation><![CDATA[
	q:(RegNo=""||IDCard="") "存入参数不能为空"
	s PatMasID=$O(^PAPERi("PAPMI_PatNo",RegNo,0))
	q:PatMasID="" "登记号不存在"
	s CurIDCard=$P(^PAPER(PatMasID,"PAT",3),"^",6)
	q:CurIDCard'=IDCard "证件号码和系统不一致"
	q ""
]]></Implementation>
</Method>

<Method name="GetUserInfo">
<ClassMethod>1</ClassMethod>
<FormalSpec>PAADM</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s obj=##class(web.DHCPE.NetReport.Entity.UserInfo).%New()
	s AdmObj=##class(User.PAAdm).%OpenId(PAADM)
	s obj.hisregno=AdmObj.PAADMPAPMIDR.PAPMIIPNo
	
	s obj.cardno=AdmObj.PAADMPAPMIDR.PAPMIDVAnumber
	s obj.name=AdmObj.PAADMPAPMIDR.PAPMIName
	s obj.Birth=AdmObj.PAADMPAPMIDR.PAPMIDOB
	s:obj.Birth'="" obj.Birth=$ZD(obj.Birth,3)
	s obj.Sex=AdmObj.PAADMPAPMIDR.PAPMISexDR.CTSEXDesc
	s obj.password=""  ;密码待定
	s obj.phone=AdmObj.PAADMPAPMIDR.PAPMIMobPhone
	s:obj.phone="" obj.phone=AdmObj.PAADMPAPMIDR.PAPMIPAPERDR.PAPERTelH
	d ..ChangeNull(.obj)
	s rtn=obj.XMLExportToString(.XML,"Request")
	i ($system.Status.IsError(rtn)) {
		q "-1^序列化基本信息对象失败"
	}
	q "0^"_XML
]]></Implementation>
</Method>

<Method name="GetCheckInfo">
<ClassMethod>1</ClassMethod>
<FormalSpec>PAADM</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s obj=##class(web.DHCPE.NetReport.Entity.CheckMainInfo).%New()
	s AdmObj=##class(User.PAAdm).%OpenId(PAADM)
	s obj.hisregno=AdmObj.PAADMPAPMIDR.PAPMIIPNo
	s obj.checkdate=AdmObj.PAADMAdmDate
	s:obj.checkdate'="" obj.checkdate=$ZD(obj.checkdate,3)
	s obj.hispaadm=PAADM
	s IADM=$O(^DHCPEIADM(0,"PAADM",PAADM,0))
	//q:IADM=""
	s GADM=$P(^DHCPEIADM(IADM),"^",2)
	i GADM="" d
	.s obj.workunit=""
	e  d
	.s GBI=$P(^DHCPEGADM(GADM),"^",1)
	.s obj.workunit=$P(^DHCPEGBI(GBI),"^",2)
	s GSID=$O(^DHCPEGS(0,"IADM",IADM,0))
	q:GSID=""
	s obj.auditdoctor=$P(^DHCPEGS(GSID,1),"^",5)
	s:obj.auditdoctor'="" obj.auditdoctor=$P(^SSU("SSUSR",obj.auditdoctor),"^",2)
	
	s MainDoctorInfo=$G(^DHCPEDataEx("DHCPEGeneralSummarize","MainDoctor",PAADM))    //add by  20130129 
	s obj.checkdoctor=$p(MainDoctorInfo,"^",1)                                                 //add by  20130129  
	s:obj.checkdoctor'="" obj.checkdoctor=$p($g(^SSU("SSUSR",obj.checkdoctor)),"^",2) //add by  20130129 

	s obj.auditdate=$P(^DHCPEGS(GSID,1),"^",6)
	s:obj.auditdate'="" obj.auditdate=$ZD(obj.auditdate,3)
	d ..ChangeNull(.obj)
	s rtn=obj.XMLExportToString(.XML,"Request")
	i ($system.Status.IsError(rtn)) {
		q "-1^序列化检查信息对象失败"
	}
	q "0^"_XML
]]></Implementation>
</Method>

<Method name="GetSOrderInfo">
<ClassMethod>1</ClassMethod>
<FormalSpec>PAADM</FormalSpec>
<Implementation><![CDATA[
	//s ReportJob=$J_"^"_PAADM
	s ReportJob=%session.Get("LOGON.USERID")
	d ##class(web.DHCPE.ReportGetInfor).GetReportResult(PAADM)
	s SSOrderObj=##class(web.DHCPE.NetReport.Entity.SSOrderInfo).%New()
	s StationSummarizeObj=##class(web.DHCPE.NetReport.Entity.StationSummarize).%New()
	s StationSummarizeObj.hispaadm=PAADM
	s SSOrderObj.hispaadm=PAADM
	;s ^TMPReport(ReportJob,ReportJob,"Result","Station",STSequence,STRowId,ARCSequence,^TMPReport(ReportJob,ReportJob,"Result","Station",STSequence,STRowId,ARCSequence))=TestId
	s STSequence=""
	f  s STSequence=$O(^TMPReport(ReportJob,ReportJob,"Result","Station",STSequence)) q:STSequence=""  d
	.s STID=""
	.f  s STID=$O(^TMPReport(ReportJob,ReportJob,"Result","Station",STSequence,STID)) q:STID=""  d
	..s StationObj=##class(web.DHCPE.NetReport.Entity.station).%New()
	..s StationObj.hisstation=STID
	..s STName=$P(^DHCPEST(STID),"^",2)
	..s StationObj.sort=STSequence
	..s StationObj.hisstationname=STName
	..d ..ChangeNull(.StationObj)
	..d StationSummarizeObj.stations.Insert(StationObj)
	
	..s StationOrderObj=##class(web.DHCPE.NetReport.Entity.stationorder).%New()
	..s StationOrderObj.hisstation=STID
	..s ItemSort=""
	..f  s ItemSort=$O(^TMPReport(ReportJob,ReportJob,"Result","Station",STSequence,STID,ItemSort)) q:ItemSort=""  d
	...s Sort=""
	...s ResultI=0
	...s Flag=0
	...f  s Sort=$O(^TMPReport(ReportJob,ReportJob,"Result","Station",STSequence,STID,ItemSort,Sort)) q:Sort=""  d
	....;q:ResultI>0
	....s ResultI=1
	....s OrderItemID=$G(^TMPReport(ReportJob,ReportJob,"Result","Station",STSequence,STID,ItemSort,Sort))
	....s OrderInfo=$G(^TMPReport(ReportJob,ReportJob,"Result","ARCIM",OrderItemID))
	....s OrderObj=##class(web.DHCPE.NetReport.Entity.order).%New()
	....;ARCIMDesc_"^"_RLTUser_"^"_RLTUpdateDate_"^"_ReportFormat_"^"_$G(AuditUser)_"^"_ARCIMDR
	....s OrderObj.hisorderid=OrderItemID
	....s OrderObj.ordername=$P(OrderInfo,"^",1)
	....s OrderObj.reportformt=$P(OrderInfo,"^",4)
	....s OrderObj.checkdoctor=$P(OrderInfo,"^",2)
	....s OrderObj.checkdate=$P(OrderInfo,"^",3)
	....s OrderObj.auditdoctor=$P(OrderInfo,"^",5)
	....s OrderObj.auditdate=""
	....s OrderObj.sort=Sort
	....d ..ChangeNull(.OrderObj)
	....d StationOrderObj.orders.Insert(OrderObj)
	..d SSOrderObj.stationorders.Insert(StationOrderObj)
	;k ^TMPReport(ReportJob,ReportJob,"Result")
	s rtn=SSOrderObj.XMLExportToString(.OrderXML,"Request")
	i ($system.Status.IsError(rtn)) {
		q "-1^序列化医嘱对象失败^"
	}
	s rtn=StationSummarizeObj.XMLExportToString(.StationSummarizeXML,"Request")
	i ($system.Status.IsError(rtn)) {
		q "-1^序列化小结站点对象失败^"
	}
	q "0^"_OrderXML_"^"_StationSummarizeXML
]]></Implementation>
</Method>

<Method name="GetResult">
<ClassMethod>1</ClassMethod>
<FormalSpec>PAADM</FormalSpec>
<Implementation><![CDATA[
	//s ReportJob=$J_"^"_PAADM
	s ReportJob=%session.Get("LOGON.USERID")
	s WebServiceObj=$ZOBJCLASSMETHOD(..#ServiceClassName,"%New")
	s iTotal=0
	s SendTotal=0
	d ##class(web.DHCPE.ReportGetInfor).GetReportResult(PAADM)
	s ResultObj=##class(web.DHCPE.NetReport.Entity.SSOrderResult).%New()
	s ResultObj.hispaadm=PAADM
	;s ^TMPReport(ReportJob,ReportJob,"Result","Station",STSequence,STRowId,ARCSequence,^TMPReport(ReportJob,ReportJob,"Result","Station",STSequence,STRowId,ARCSequence))=TestId
	s STSequence=""
	f  s STSequence=$O(^TMPReport(ReportJob,ReportJob,"Result","Station",STSequence)) q:STSequence=""  d
	.s STID=""
	.f  s STID=$O(^TMPReport(ReportJob,ReportJob,"Result","Station",STSequence,STID)) q:STID=""  d
	..s ItemSort=""
	..f  s ItemSort=$O(^TMPReport(ReportJob,ReportJob,"Result","Station",STSequence,STID,ItemSort)) q:ItemSort=""  d
	...s Sort=""
	...s Flag=0
	...s ResultCount=0
	...f  s Sort=$O(^TMPReport(ReportJob,ReportJob,"Result","Station",STSequence,STID,ItemSort,Sort)) q:Sort=""  d
	....s OrderItemID=$G(^TMPReport(ReportJob,ReportJob,"Result","Station",STSequence,STID,ItemSort,Sort))
	....s OrderInfo=$G(^TMPReport(ReportJob,ReportJob,"Result","ARCIM",OrderItemID))
	....s reportformt=$P(OrderInfo,"^",4)
	....s OrderResultObj=##class(web.DHCPE.NetReport.Entity.orderresult).%New()
	....s OrderResultObj.hisorderid=OrderItemID
	....s ResultSort=""
	....f  s ResultSort=$O(^TMPReport(ReportJob,ReportJob,"Result", "Content", OrderItemID,ResultSort)) q:ResultSort=""  d
	.....s Flag=1
	.....s iTotal=iTotal+1
	.....s ResultInfo=$G(^TMPReport(ReportJob,ReportJob,"Result", "Content", OrderItemID,ResultSort))
	.....s OrderDetailResultObj=##class(web.DHCPE.NetReport.Entity.detailresult).%New()
	.....s OrderDetailResultObj.detailname=$P(ResultInfo,"^",1)
	.....s OrderDetailResultObj.result=$P(ResultInfo,"^",2)
	.....s OrderDetailResultObj.result=..MaskContent(OrderDetailResultObj.result, "C")
	.....s OrderDetailResultObj.normalflag=$P(ResultInfo,"^",3)  //正常、异常
	.....s:OrderDetailResultObj.normalflag="异常" OrderDetailResultObj.normalflag="0"
	.....s:OrderDetailResultObj.normalflag'="异常" OrderDetailResultObj.normalflag="1"
	.....s OrderDetailResultObj.unit=$P(ResultInfo,"^",4)
	.....s OrderDetailResultObj.sort=ResultSort
	.....i (reportformt[("LIS"))||(reportformt[("CAT")) d
	......s OrderDetailResultObj.ranginfo=$P(ResultInfo,"^",5)
	......s OrderDetailResultObj.detailename=$P(ResultInfo,"^",8)
	......s OrderDetailResultObj.resulttype=$P(ResultInfo,"^",6)
	......s Template=""
	......s OrderDetailResultObj.hisresultid=$P(ResultInfo,"^",9)
	.....e  d
	......s OrderDetailResultObj.ranginfo=""
	......s OrderDetailResultObj.detailename=""
	......s OrderDetailResultObj.resulttype=""
	......s Template=$P(ResultInfo,"^",5)
	......s OrderDetailResultObj.hisresultid=$P(ResultInfo,"^",6)
	.....s:Template'="" OrderDetailResultObj.result=OrderDetailResultObj.result_"("_Template_")"
	.....d ..ChangeNull(.OrderDetailResultObj)
	.....d:Flag=1 OrderResultObj.detailresults.Insert(OrderDetailResultObj)
	....s:Flag=1 ResultCount=ResultCount+1
	....d:Flag=1 ResultObj.orderresults.Insert(OrderResultObj)
	....i ResultCount=5 d
	.....s rtn=ResultObj.XMLExportToString(.ResultXML,"Request")
	.....d WebServiceObj.ISSOrderResult(ResultXML)
	.....s SendTotal=SendTotal+1
	.....s ResultCount=0
	.....d ResultObj.orderresults.Clear()
	i ResultCount>0 d
	.s rtn=ResultObj.XMLExportToString(.ResultXML,"Request")
	.s ^TempDHCPE("NetReport","Result")=ResultXML
	.d WebServiceObj.ISSOrderResult(ResultXML)
	.s SendTotal=SendTotal+1
	;w SendTotal_"^"_iTotal,!
	q 0
]]></Implementation>
</Method>

<Method name="GetDiagnosisInfo">
<ClassMethod>1</ClassMethod>
<FormalSpec>PAADM</FormalSpec>
<Implementation><![CDATA[
	;d ##class(web.DHCPE.NetReport.Main).GetDiagnosisInfo(19648585)
	s IADM=$O(^DHCPEIADM(0,"PAADM",PAADM,0))
	s GSID=$O(^DHCPEGS(0,"IADM",IADM,0))
	q:GSID="" "-1^"
	s obj=##class(web.DHCPE.NetReport.Entity.DiagnosisInfo).%New()
	s obj.hispaadm=PAADM
	
	s Sort=0
	f  s Sort=$O(^DHCPEGS(0,"GSDSort",GSID,Sort)) q:Sort=""  d
	.s Sub=""
	.f  s Sub=$O(^DHCPEGS(0,"GSDSort",GSID,Sort,Sub)) q:Sub=""  d
	..s DiagnosisObj=##class(web.DHCPE.NetReport.Entity.diagnosis).%New()
	..s DiagnosisObj.hissub=Sub
	..s DiagnosisObj.sort=Sort
	..s EDID=$P(^DHCPEGS(GSID,"Diagnosis",Sub),"^",1)
	..s DiagnosisObj.edname=$p($g(^DHCPEED(EDID,"1")),"^",1)
	..i $D(^DHCPEDataEx("DHCPEGSDiagnosis","DisplayDesc",GSID_"||"_Sub)) d
	..;.s DiagnosisObj.edname=$G(^DHCPEDataEx("DHCPEGSDiagnosis","DisplayDesc",GSID_"||"_Sub))
	..s DiagnosisObj.eddetail=$P(^DHCPEGS(GSID,"Diagnosis",Sub),"^",9)
	..d ..ChangeNull(.DiagnosisObj)
	..d obj.diagnosiss.Insert(DiagnosisObj)
	s rtn=obj.XMLExportToString(.XML,"Request")
	i ($system.Status.IsError(rtn)) {
		q "-1^序列化建议对象失败^"
	}
	q "0^"_XML
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// d ##class(web.DHCPE.NetReport.Main).GetSSResult(19668103)

]]></Content>
</UDLText>

<UDLText name="T">
<Content><![CDATA[
// d ##class(web.DHCPE.NetReport.Main).GetSSResult(19855163)

]]></Content>
</UDLText>

<Method name="GetSSResult">
<ClassMethod>1</ClassMethod>
<FormalSpec>PAADM</FormalSpec>
<Implementation><![CDATA[
	s IADM=$O(^DHCPEIADM(0,"PAADM",PAADM,0))
	s STID=$O(^DHCPESS(0,"IADM",IADM,0))
	q:STID="" "-1^"
	s obj=##class(web.DHCPE.NetReport.Entity.SSResult).%New()
	s obj.hispaadm=PAADM
	s RisStation="^"_$g(^DHCPESetting("DHCPE","StationId_Ris"))_"^"
	
	s STID=""
	f  s STID=$O(^DHCPESS(0,"IADM",IADM,STID)) q:STID=""  d
	.q:RisStation[("^"_STID_"^")
	.s StationObj=##class(web.DHCPE.NetReport.Entity.stationresult).%New()
	.s StationObj.hisstation=STID
	.s Flag=0
	.s SSID=0
	.f  s SSID=$o(^DHCPESS(0,"IADM",IADM,STID,SSID))  q:SSID=""  d
	..s Sub=""
	..f  s Sub=$o(^DHCPESS(SSID,"Result",Sub))  q:Sub=""  d
	...s ResultObj=##class(web.DHCPE.NetReport.Entity.result).%New()
	...s ResultObj.hissub=Sub
	...s Flag=1
	...s ResultObj.hisresultid=$p(^DHCPESS(SSID,"Result",Sub),"^",1)
	...d ..ChangeNull(.ResultObj)
	...d StationObj.results.Insert(ResultObj)
	.d:Flag=1 obj.stationresults.Insert(StationObj) 
	q:obj.stationresults.Count()=0 "-1^没有数据"
	s rtn=obj.XMLExportToString(.XML,"Request")
	i ($system.Status.IsError(rtn)) {
		q "-1^序列化小结结果对象失败^"
	}
	q "0^"_XML
]]></Implementation>
</Method>

<Method name="GetSSDiagnosis">
<ClassMethod>1</ClassMethod>
<FormalSpec>PAADM</FormalSpec>
<Implementation><![CDATA[
	s IADM=$O(^DHCPEIADM(0,"PAADM",PAADM,0))
	s STID=$O(^DHCPESS(0,"IADM",IADM,0))
	q:STID="" "-1^"
	s obj=##class(web.DHCPE.NetReport.Entity.SSDiagnosis).%New()
	s obj.hispaadm=PAADM
	;web.DHCPE.NetReport.Entity.diagnosis
	s STID=""
	f  s STID=$O(^DHCPESS(0,"IADM",IADM,STID)) q:STID=""  d
	.s StationObj=##class(web.DHCPE.NetReport.Entity.diagnosisstation).%New()
	.s StationObj.hisstation=STID
	.s Flag=0
	.s SSID=0
	.f  s SSID=$o(^DHCPESS(0,"IADM",IADM,STID,SSID))  q:SSID=""  d
	..s Sub=""
	..f  s Sub=$o(^DHCPESS(SSID,"Diagnosis",Sub))  q:Sub=""  d
	...s DiagnosisObj=##class(web.DHCPE.NetReport.Entity.diagnosis).%New()
	...s DiagnosisObj.hissub=Sub
	...s DiagnosisObj.sort=Sub
	...s Flag=1
	...s DiagnosisObj.eddetail=$p($G(^DHCPESS(SSID,"Diagnosis",Sub)),"^",7)
	...s EDID=$p($G(^DHCPESS(SSID,"Diagnosis",Sub)),"^",1)
	...i $D(^DHCPEDataEx("DHCPESSDiagnosis","DisplayDesc",SSID_"||"_Sub)) d
	....s DiagnosisObj.edname=$G(^DHCPEDataEx("DHCPESSDiagnosis","DisplayDesc",SSID_"||"_Sub))
	...e  d
	....s DiagnosisObj.edname=$p($g(^DHCPEED(EDID,"1")),"^",1)
	...d ..ChangeNull(.DiagnosisObj)
	...d StationObj.diagnosiss.Insert(DiagnosisObj)
	.d:Flag=1 obj.diagnosisstations.Insert(StationObj)
	s rtn=obj.XMLExportToString(.XML,"Request")
	i ($system.Status.IsError(rtn)) {
		q "-1^序列化小结建议对象失败^"
	}
	q "0^"_XML
]]></Implementation>
</Method>

<Method name="ChangeNull">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&object:%ObjectHandle]]></FormalSpec>
<Implementation><![CDATA[
	s myClassName=object.%ClassName(1)
	set ClassDef = ##class(%Library.ClassDefinition).%OpenId(myClassName)
	s myCount=ClassDef.Properties.Count()
	f i = 1:1:myCount d
	.s myPropertyName=ClassDef.Properties.GetAt(i).Name
	.i $ZOBJPROPERTY(object, myPropertyName)="" d
	..s $ZOBJPROPERTY(object, myPropertyName)=$C(0)
	d ClassDef.%Close()
	quit $$$OK
]]></Implementation>
</Method>

<Method name="MaskContent">
<ClassMethod>1</ClassMethod>
<FormalSpec>Content,Type</FormalSpec>
<Implementation><![CDATA[
	i Type="C" d
	.s Content=##class(web.DHCPE.Public.Setting).Replace(Content,"&","&amp;")
	.s Content=##class(web.DHCPE.Public.Setting).Replace(Content,"<","&lt;")
	.s Content=##class(web.DHCPE.Public.Setting).Replace(Content,">","&gt;")
	.s Content=##class(web.DHCPE.Public.Setting).Replace(Content,"""","&quot;")
	.s Content=##class(web.DHCPE.Public.Setting).Replace(Content,"'","&apos;")
	e  d
	.s Content=##class(web.DHCPE.Public.Setting).Replace(Content,"&lt;","<")
	.s Content=##class(web.DHCPE.Public.Setting).Replace(Content,"&gt;",">")
	.s Content=##class(web.DHCPE.Public.Setting).Replace(Content,"&quot;","""")
	.s Content=##class(web.DHCPE.Public.Setting).Replace(Content,"&apos;","'")
	.s Content=##class(web.DHCPE.Public.Setting).Replace(Content,"&amp;","&")
	
	q Content
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
/*
^DHCPENetReport("Record",RegNo,PAADM)=姓名^性别^年龄^单位^体检日期^体检科室^总检医生^总检日期^审核医生^审核日期
^DHCPENetReport("Result",PAADM,"Advice")=建议内容(很大一段内容)
^DHCPENetReport("Result",PAADM,"OrdItem",Sort,OrdItemID)=项目名称^报告格式^审核医生名字^医生名字^检查日期
^DHCPENetReport("Result",PAADM,"OrdDetail",OrdItemID,"Detail",Sort,DetailID)=细项名称^英文缩写^检查结果^提示(上下箭头)^单位(10S9)^参考范围
*/
]]></Content>
</UDLText>

<Method name="CancelReportData">
<ClassMethod>1</ClassMethod>
<FormalSpec>PAADM</FormalSpec>
<Implementation><![CDATA[
	s obj=##class(User.PAAdm).%OpenId(PAADM)
	s RegNo=obj.PAADMPAPMIDR.PAPMINo
	k ^DHCPENetReport("Record",RegNo,PAADM)
	k ^DHCPENetReport("Result",PAADM)
]]></Implementation>
</Method>

<UDLText name="T">
<Content><![CDATA[
// d ##class(web.DHCPE.NetReport.Main).SetReportData(2200)

]]></Content>
</UDLText>

<Method name="SetReportData">
<ClassMethod>1</ClassMethod>
<FormalSpec>PAADM</FormalSpec>
<Implementation><![CDATA[
	
	d ..CancelReportData(PAADM)
	s LocID=$P(^PAADM(PAADM),"^",4)

	s obj=##class(User.PAAdm).%OpenId(PAADM)
	s RegNo=obj.PAADMPAPMIDR.PAPMINo
	s UserID=""
	s:$D(%session) UserID=%session.Get("LOGON.USERID")
	s:UserID="" UserID=PAADM
	//s LocID=%session.Get("LOGON.CTLOCID")
	s LocDesc=$P(^CTLOC(LocID),"^",2)
	i $L(LocDesc,"-")>1 d
	.s LocDesc=$P(LocDesc,2,$L(LocDesc,"-"))
	
	d ##Class(web.DHCPE.ReportOutToWeb).GetReportInfor(PAADM,UserID)
	//基本信息
	s Name=$G(^TMPReport(UserID,"PatInfo","PatName"))
	s Sex=$G(^TMPReport(UserID,"PatInfo","PatSex"))
	s Age=$G(^TMPReport(UserID,"PatInfo","PatAge"))
	s PatCompany=$G(^TMPReport(UserID,"PatInfo","PatCompany"))
	s Position=$G(^TMPReport(UserID,"PatInfo","Position"))
	s CheckDate=$G(^TMPReport(UserID,"PatInfo","AdmDate"))
	s CheckLoc=LocDesc
	s AuditDoc=$G(^TMPReport(UserID,"GeneralAdvice","AduitUser"))
	s AuditDate=$G(^TMPReport(UserID,"GeneralAdvice","AduitUserDate"))
	s MainDoc=$G(^TMPReport(UserID,"GeneralAdvice","MainDoctor"))
	s MainDate=$G(^TMPReport(UserID,"GeneralAdvice","MainDoctorDate"))
	s VIPDesc=$G(^TMPReport(UserID,"PatInfo","VIPLevel"))
	s HPNo=$G(^TMPReport(UserID,"PatInfo","PatRegNo"))
	s PatTel=$G(^TMPReport(UserID,"PatInfo","PatTel"))
	s ^DHCPENetReport("Record",RegNo,PAADM)=Name_"^"_Sex_"^"_Age_"^"_PatCompany_"^"_CheckDate_"^"_CheckLoc_"^"_AuditDoc_"^"_AuditDate_"^"_MainDoc_"^"_MainDate_"^"_VIPDesc_"^"_Position_"^"_HPNo_"^"_PatTel
	//检查项目ID
	s ^DHCPENetReport("Result",PAADM,"AddItemID")=$G(^TMPReport(UserID,"Result","AddItemID"))
	//体检项目
	s ^DHCPENetReport("Result",PAADM,"AddItem")=$G(^TMPReport(UserID,"Result","AddItem"))
	//体检套餐
	s ^DHCPENetReport("Result",PAADM,"OrderSetsDesc")=$G(^TMPReport(UserID,"PatInfo","OrderSetsDesc"))
	//阳性汇总
	s ^DHCPENetReport("Result",PAADM,"Contentgather")=$G(^TMPReport(UserID,"Summarize", "Contentgather"))
	//建议
	s ^DHCPENetReport("Result",PAADM,"Advice")=$G(^TMPReport(UserID,"GeneralAdvice","Advice"))
	s:PAADM=1173 ^DHCPENetReport("Result",PAADM,"Advice")="<b>既往史，现病史</b><br>1、<b>糖尿病</b><br>      建议：内分泌科门诊诊治。"_$c(13,10)_"<b>一般情况</b><br>2、<b>血压偏高</b><br>      建议：偶尔发现血压升高者请择期复查,并监测血压波动情况；劳逸结合,保持良好身心状态;避免各种诱因,如情绪低落、激动、紧张等；低盐、低脂、低糖饮食,戒除烟酒；确诊高血压病者,请到心血管内科诊治。"_$c(13,10)_"<b>检验项目</b><br>3、<b>尿常规葡萄糖阳性（UGLU）</b><br>      建议：应该注意经常观测尿糖的水平,生活中应该注意控制每天的饮食摄入量,适量运动,控制体重于正常水平,内分泌科诊治。<br>4、<b>谷氨酰转氨酶增高(GGT)</b><br>      建议：偶尔一次检查发现谷氨酰转氨酶轻度升高，不一定有临床意义，建议结合其他肝功能指标及临床进行综合评估。生活饮食上提倡戒酒，并注意休息，避免过度劳累。到医院检查肝炎病毒标志物及B超等检查有无脂肪肝、肝癌、血吸虫肝等改变，并酌情使用护肝药物。<br>5、<b>血糖升高(GLU)</b><br>      建议：空腹血糖为6.1～6.9mmol/L时，建议进一步做口服葡萄糖耐量试验或糖化血红蛋白检测。空腹血糖≥7.0mmol/L或随机血糖≥11.1mmol/L时考虑糖尿病，需到内分泌科就医并结合糖化血红蛋白检测和胰岛素释放试验等进一步确诊。<br>6、<b>甘油三酯偏高(TG)</b><br>      建议：血脂影响因素很多，偶尔一次检查发现甘油三酯增高，不一定有临床意义，如连续多次升高，应引起重视。先调整生活方式，饮食上注意减少油脂的摄入，增加运动，三月后复查血脂，如血脂仍增高，则需要服用降脂药物。如同时合并有糖尿病、高血压、冠心病等则需尽早加用调药物。<br>7、<b>血粘度偏高</b><br>      建议：①多饮水,降低血粘度,保持血液循环畅通。②多吃蔬菜水果,能改善血液流变,有效降低血液粘稠度,少食动物油脂和内脏,多吃低脂肪、低胆固醇食物,粗粮和细粮搭配,戒饮酒,戒烟,劳逸结合。"_$c(13,10)_"<b>腹部B超</b><br>8、<b>B超提示：脂肪肝</b><br>      建议：控制体重,低盐,低糖饮食,减少动物性食物比例,每天可食一餐谷物鱼类,增加运动量,定期复查血脂,肝功能和彩超,必要时服用降脂药。<br>9、<b>B超提示：前列腺钙化斑</b><br>      建议：一般不需治疗，若有不适泌尿外科诊治。"_$c(13,10)_"<b>CT检查</b><br>10、<b>胸部CT提示：右侧斜裂胸膜及水平裂胸膜下多发小结节影</b><br>      建议：呼吸科诊治。<br>11、<b>胸部CT提示：脂肪肝</b><br>      建议：控制体重,低盐,低糖饮食,减少动物性食物比例,每天可食一餐谷物鱼类,增加运动量,定期复查血脂,肝功能和彩超,必要时服用降脂药。"_$c(13,10)

	//体检综述
	s NegativeSummary=""	
	//项目以及结果
	s NoReportStation="^"_$G(^DHCPESetting("DHCPE","NoReportStation"))_"^"
	s ItemSort=0
	s sStationSequence=""
	f  s sStationSequence=$O(^TMPReport(UserID,"Result","Station",sStationSequence)) q:sStationSequence=""  d
	.s StationId=""
	.f  s StationId=$O(^TMPReport(UserID,"Result","Station",sStationSequence,StationId)) Q:(""=StationId)  d
	..q:NoReportStation[("^"_StationId_"^")
	..s StationCode=$P(^DHCPEST(StationId),"^",1)
	..s StationName=$P(^DHCPEST(StationId),"^",2)
	..s sARCSequence=""
	..f  s sARCSequence=$O(^TMPReport(UserID,"Result","Station",sStationSequence,StationId,sARCSequence)) Q:(""=sARCSequence)  d
	...s iiiLLoop=0
	...f  s iiiLLoop=$O(^TMPReport(UserID,"Result","Station",sStationSequence,StationId,sARCSequence,iiiLLoop)) Q:(""=iiiLLoop)  d
	....s ARCIM=$G(^TMPReport(UserID,"Result","Station",sStationSequence,StationId,sARCSequence,iiiLLoop))
	....s sArcimIdTemp=$p($G(^OEORD(+ARCIM,"I",$p(ARCIM,"||",2),1)),"^",2)
	....s bFlagTemp=$G(^DHCPEDataEx("DHCPEStationOrder","Sign",sArcimIdTemp))
	....q:ARCIM=""
	....s CurData=$G(^TMPReport(UserID,"Result", "ARCIM", ARCIM))
	....s ARCIMDesc=$P(CurData,"^",1)
	....s Checker=$P(CurData,"^",2)
	....s CheckDate=$P(CurData,"^",3)
	....s ReportFormat=$P(CurData,"^",4)
	....s AuditUser=$P(CurData,"^",5)
	....;项目 小结
	....s Negative=$G(^TMPReport(UserID,"Result","Negative",ARCIM))
	....s:NegativeSummary'="" NegativeSummary=NegativeSummary_$C(13,10)_ARCIMDesc_":"_Negative
	....s:NegativeSummary="" NegativeSummary=ARCIMDesc_":"_Negative
	....q:'$D(^TMPReport(UserID,"Result", "Content",ARCIM))
	....s ItemSort=ItemSort+1
	....;^DHCPENetReport("Result",PAADM,"OrdItem",Sort,OrdItemID)=项目名称^报告格式^审核医生名字^医生名字^检查日期^站点代码^站点名称^项目小结
	....s ^DHCPENetReport("Result",PAADM,"OrdItem",ItemSort,ARCIM)=ARCIMDesc_"^"_ReportFormat_"^"_AuditUser_"^"_Checker_"^"_CheckDate_"^"_StationCode_"^"_StationName_"^"_Negative
	....s DetailSort=0
	....s ODID=""
	....f  s ODID=$O(^TMPReport(UserID,"Result", "Content",ARCIM,ODID)) q:ODID=""  d
	.....s CurData=$g(^TMPReport(UserID,"Result", "Content",ARCIM,ODID))
	.....;^DHCPENetReport("Result",PAADM,"OrdDetail",OrdItemID,"Detail",Sort,DetailID)=细项名称^英文缩写^检查结果^提示(上下箭头)^单位(10S9)^参考范围^体检结果ID^图片信息
	.....i (ReportFormat["LIS")||(ReportFormat["CAT") d
	......s DetailSort=DetailSort+1
	......s TestDesc=$P(CurData,"^",1)
	......s TestResult=$P(CurData,"^",2)
	......s TestStandard=$P(CurData,"^",5)
	......s Arrow=$P(CurData,"^",6)
	......s:Arrow=2 Arrow="↑"
	......s:Arrow=0 Arrow="↓"
	......s:Arrow=1 Arrow=""
	......s CTTCSynonym=$P(CurData,"^",8)
	......s Normal=$P(CurData,"^",3)
	......s TestUnit=$P(CurData,"^",4)
	......s ResultID=$P(CurData,"^",9)
	.....i (ReportFormat["NOR")||((ReportFormat["RIS")||(ReportFormat["PIS")||((ReportFormat["EKG"))) d
	......s TestDesc=$Replace($P(CurData,"^",1),"-检查结果","")
	......s ResultDesc=$P(CurData,"^",2)
	......s:ResultDesc'="" ResultDesc=$Replace(ResultDesc,$C(0),"")
	......s TestResult=ResultDesc
	......s Normal=$P(CurData,"^",3)
	......s TestUnit=$P(CurData,"^",4)
	......s TestStandard=$P(CurData,"^",7)
	......s Arrow=""
	......s CTTCSynonym=""
	......s ResultID=$P(CurData,"^",6)
	
	.....;图片信息  add by wgy  移至接口处处理
	.....;s ImgInfo=""
	.....;i (ReportFormat["EKG")||((ReportFormat["RIS")) d
	.....;.s ImgInfo=$G(^TMPReport(UserID,"Result", "IMG",ARCIM))
	.....;.s:ImgInfo'="" ImgInfo=$Replace(ImgInfo,$C(1),"##")
	.....;end
	
	.....s ^DHCPENetReport("Result",PAADM,"OrdDetail",ARCIM,"Detail",DetailSort,ODID)=TestDesc_"^"_CTTCSynonym_"^"_TestResult_"^"_Arrow_"^"_TestUnit_"^"_TestStandard_"^"_ResultID
	s ^DHCPENetReport("Result",PAADM,"NegativeSummary")=NegativeSummary
	d ..BatchHistoryRecord(PAADM,UserID)
	k ^TMPReport(UserID)
]]></Implementation>
</Method>

<Method name="BatchGenNetReport">
<Description>
批量生成网上体检报告   wgy
w ##class(web.DHCPE.NetReport.Main).BatchGenNetReport("Y","2018-01-01")
Input:Flag  Y:全部重新生成   N:已存在的不更新   BeginDate :审核开始时间  YYYY-MM-DD  EndDate :截止时间  YYYY-MM-DD</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>ALLFlag="N",BeginDate="",EndDate=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	s:BeginDate="" BeginDate="1900-01-01"
	s:EndDate="" EndDate="3999-12-31"
	s BeginDate=$zdh(BeginDate,3)
	s EndDate=$zdh(EndDate,3)
	s rtn=0
	s CurrLocID=""
	s:$d(%session) CurrLocID=%session.Get("LOGON.CTLOCID")
	s:(CurrLocID="") CurrLocID=370
	s NeedReCheck=""
	s NeedReCheck=$G(^DHCPESetting("DHCPE","MainDoctorGroup",CurrLocID))  //科室是否需要复检功能
	s $zt="ErrHandle"
	s RPTId=0
	f  s RPTId=$O(^DHCPERPT(RPTId)) q:RPTId=""  d
	.s RPTStatus=$p(^DHCPERPT(RPTId),"^",2)
	.q:("UNCHECKED"=RPTStatus)||("NA"=RPTStatus)||("NoAudit"=RPTStatus)
	.s AuditDate=$P(^DHCPERPT(RPTId),"^",5)
	.q:(AuditDate<BeginDate)||(AuditDate>EndDate)
	.s PEIADMDR=$P(^DHCPERPT(RPTId),"^",1)
	.q:PEIADMDR=""
	.s PAADMDR=$P(^DHCPEIADM(PEIADMDR),"^",1)
	.q:PAADMDR=""
	.q:(NeedReCheck="Y")&&(("A"=RPTStatus)||("Audited"=RPTStatus))&&('$d(^DHCPEDataEx("DHCPEGeneralSummarize","MainDoctor",PAADMDR)))

	.i ((ALLFlag="Y")||('$D(^DHCPENetReport("Result",PAADMDR)))) d

	..d ..Main(PAADMDR)
	..s rtn=rtn+1
	..w rtn ,!
	q rtn
ErrHandle
	s $zt=""
	s rtn="-100^批量生成网上报告发生错误"
	q:$ze="" rtn
	q rtn_"^"_$ze
]]></Implementation>
</Method>

<Method name="BatchHistoryRecord">
<Description>
生成历年结果记录   wgy
w ##class(web.DHCPE.NetReport.Main).BatchHistoryRecord()</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>PAADM,UserID</FormalSpec>
<Implementation><![CDATA[
	i $D(^TMPReport(UserID,"HistoryResult",1,1))
	{
		i $L(^TMPReport(UserID,"HistoryResult",1,1),"^")>2 d 
		.m ^DHCPENetReport("Result",PAADM,"HistoryResult")=^TMPReport(UserID,"HistoryResult")
	}
]]></Implementation>
</Method>

<Method name="IsAuditReport">
<Description>
报告状态是否审核完成
0:已审核  1：未总检  2：未复检
w ##class(web.DHCPE.NetReport.Main).IsAuditReport(128)</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>PAADM</FormalSpec>
<Implementation><![CDATA[
	//是否总检
	s GSID=##class(web.DHCPE.ResultDiagnosis).GetSSId(PAADM)
	s AuditUser=""
	s:GSID'="" AuditUser=$P(^DHCPEGS(GSID,1),"^",5)
	q:AuditUser="" 1  ;没有总检
	s LocID=$P(^PAADM(PAADM),"^",4)
	//是否复检
	s MainDocFlag=$G(^DHCPESetting("DHCPE","MainDoctorGroup",LocID))
	i MainDocFlag="Y"
	{
		s MainInfo=$G(^DHCPEDataEx("DHCPEGeneralSummarize","MainDoctor",PAADM))
		s MainUser=$P(MainInfo,"^",1)
		q:MainUser="" 2 ;没有复检
	}
	q 0
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^web.DHCPE.NetReport.MainD</DataLocation>
<DefaultData>MainDefaultData</DefaultData>
<IdLocation>^web.DHCPE.NetReport.MainD</IdLocation>
<IndexLocation>^web.DHCPE.NetReport.MainI</IndexLocation>
<StreamLocation>^web.DHCPE.NetReport.MainS</StreamLocation>
<Data name="MainDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
